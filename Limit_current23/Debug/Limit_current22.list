
Limit_current22.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001ec8  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08002074  0800207c  0001207c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08002074  08002074  00012074  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08002078  08002078  00012078  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  0001207c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  0001207c  2**0
                  CONTENTS
  7 .bss          0000003c  20000000  20000000  00020000  2**2
                  ALLOC
  8 ._user_heap_stack 00000400  2000003c  2000003c  00020000  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  0001207c  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000177d  00000000  00000000  000120ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000079e  00000000  00000000  00013829  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000270  00000000  00000000  00013fc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001e8  00000000  00000000  00014238  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00000fd2  00000000  00000000  00014420  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00000d01  00000000  00000000  000153f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  000160f3  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000780  00000000  00000000  00016170  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	0800205c 	.word	0x0800205c

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	0800205c 	.word	0x0800205c

080001ec <ADC1_voidInitCountious>:
#include "ADC_config.h"



void ADC1_voidInitCountious (void)
{
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	/* select pre scaler */
	CLR_BIT( ADC-> CCR,17);
 80001f0:	4a1a      	ldr	r2, [pc, #104]	; (800025c <ADC1_voidInitCountious+0x70>)
 80001f2:	4b1a      	ldr	r3, [pc, #104]	; (800025c <ADC1_voidInitCountious+0x70>)
 80001f4:	685b      	ldr	r3, [r3, #4]
 80001f6:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80001fa:	6053      	str	r3, [r2, #4]
	CLR_BIT( ADC-> CCR,16);
 80001fc:	4a17      	ldr	r2, [pc, #92]	; (800025c <ADC1_voidInitCountious+0x70>)
 80001fe:	4b17      	ldr	r3, [pc, #92]	; (800025c <ADC1_voidInitCountious+0x70>)
 8000200:	685b      	ldr	r3, [r3, #4]
 8000202:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000206:	6053      	str	r3, [r2, #4]
	
	/*selection resialution of ADC =12 bits*/
	CLR_BIT(ADC1 -> CR1,25);
 8000208:	4a15      	ldr	r2, [pc, #84]	; (8000260 <ADC1_voidInitCountious+0x74>)
 800020a:	4b15      	ldr	r3, [pc, #84]	; (8000260 <ADC1_voidInitCountious+0x74>)
 800020c:	685b      	ldr	r3, [r3, #4]
 800020e:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8000212:	6053      	str	r3, [r2, #4]
	CLR_BIT(ADC1 -> CR1,24);
 8000214:	4a12      	ldr	r2, [pc, #72]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000216:	4b12      	ldr	r3, [pc, #72]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000218:	685b      	ldr	r3, [r3, #4]
 800021a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800021e:	6053      	str	r3, [r2, #4]
	
	/* select data alignment righ alignment*/
	CLR_BIT(ADC1 -> CR2,11);
 8000220:	4a0f      	ldr	r2, [pc, #60]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000222:	4b0f      	ldr	r3, [pc, #60]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000224:	689b      	ldr	r3, [r3, #8]
 8000226:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800022a:	6093      	str	r3, [r2, #8]
	
	/* select countinous conversion */
	SET_BIT(ADC1 -> CR2 , 1 );
 800022c:	4a0c      	ldr	r2, [pc, #48]	; (8000260 <ADC1_voidInitCountious+0x74>)
 800022e:	4b0c      	ldr	r3, [pc, #48]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000230:	689b      	ldr	r3, [r3, #8]
 8000232:	f043 0302 	orr.w	r3, r3, #2
 8000236:	6093      	str	r3, [r2, #8]
	//SET_BIT(ADC1 -> CR2 , 10 );
	
	
	
	/* ADC sample time channel 3 cycles all channel  */
	ADC1 -> SMPR1=0;
 8000238:	4b09      	ldr	r3, [pc, #36]	; (8000260 <ADC1_voidInitCountious+0x74>)
 800023a:	2200      	movs	r2, #0
 800023c:	60da      	str	r2, [r3, #12]
	ADC1 -> SMPR2=0;
 800023e:	4b08      	ldr	r3, [pc, #32]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000240:	2200      	movs	r2, #0
 8000242:	611a      	str	r2, [r3, #16]
	
	/*enable ADC */
	SET_BIT(ADC1 -> CR2 , 0 );
 8000244:	4a06      	ldr	r2, [pc, #24]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000246:	4b06      	ldr	r3, [pc, #24]	; (8000260 <ADC1_voidInitCountious+0x74>)
 8000248:	689b      	ldr	r3, [r3, #8]
 800024a:	f043 0301 	orr.w	r3, r3, #1
 800024e:	6093      	str	r3, [r2, #8]
	
	
	
}
 8000250:	bf00      	nop
 8000252:	46bd      	mov	sp, r7
 8000254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000258:	4770      	bx	lr
 800025a:	bf00      	nop
 800025c:	40014400 	.word	0x40014400
 8000260:	40012000 	.word	0x40012000

08000264 <ADC1_void>:

void  ADC1_void (void )
{
 8000264:	b480      	push	{r7}
 8000266:	af00      	add	r7, sp, #0
	CLR_BIT(ADC1-> SQR1,20);
 8000268:	4a0f      	ldr	r2, [pc, #60]	; (80002a8 <ADC1_void+0x44>)
 800026a:	4b0f      	ldr	r3, [pc, #60]	; (80002a8 <ADC1_void+0x44>)
 800026c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800026e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000272:	62d3      	str	r3, [r2, #44]	; 0x2c
	CLR_BIT(ADC1-> SQR1,21);
 8000274:	4a0c      	ldr	r2, [pc, #48]	; (80002a8 <ADC1_void+0x44>)
 8000276:	4b0c      	ldr	r3, [pc, #48]	; (80002a8 <ADC1_void+0x44>)
 8000278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800027a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800027e:	62d3      	str	r3, [r2, #44]	; 0x2c
	CLR_BIT(ADC1-> SQR1,22);
 8000280:	4a09      	ldr	r2, [pc, #36]	; (80002a8 <ADC1_void+0x44>)
 8000282:	4b09      	ldr	r3, [pc, #36]	; (80002a8 <ADC1_void+0x44>)
 8000284:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000286:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800028a:	62d3      	str	r3, [r2, #44]	; 0x2c
	CLR_BIT(ADC1-> SQR1,23);
 800028c:	4a06      	ldr	r2, [pc, #24]	; (80002a8 <ADC1_void+0x44>)
 800028e:	4b06      	ldr	r3, [pc, #24]	; (80002a8 <ADC1_void+0x44>)
 8000290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000292:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8000296:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC1-> SQR3 =5; 
 8000298:	4b03      	ldr	r3, [pc, #12]	; (80002a8 <ADC1_void+0x44>)
 800029a:	2205      	movs	r2, #5
 800029c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800029e:	bf00      	nop
 80002a0:	46bd      	mov	sp, r7
 80002a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a6:	4770      	bx	lr
 80002a8:	40012000 	.word	0x40012000

080002ac <ADC1_u16Read>:

u16  ADC1_u16Read (void )
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
	u16 data=0;
 80002b2:	2300      	movs	r3, #0
 80002b4:	80fb      	strh	r3, [r7, #6]
	/*start conversion enable */
	SET_BIT(ADC1 -> CR2 ,30);
 80002b6:	4a0c      	ldr	r2, [pc, #48]	; (80002e8 <ADC1_u16Read+0x3c>)
 80002b8:	4b0b      	ldr	r3, [pc, #44]	; (80002e8 <ADC1_u16Read+0x3c>)
 80002ba:	689b      	ldr	r3, [r3, #8]
 80002bc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002c0:	6093      	str	r3, [r2, #8]

	while(GET_BIT(ADC1->SR , 1)==0);
 80002c2:	bf00      	nop
 80002c4:	4b08      	ldr	r3, [pc, #32]	; (80002e8 <ADC1_u16Read+0x3c>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	085b      	lsrs	r3, r3, #1
 80002ca:	f003 0301 	and.w	r3, r3, #1
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	d0f8      	beq.n	80002c4 <ADC1_u16Read+0x18>
		data= ADC1->DR ;
 80002d2:	4b05      	ldr	r3, [pc, #20]	; (80002e8 <ADC1_u16Read+0x3c>)
 80002d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002d6:	80fb      	strh	r3, [r7, #6]
	return data;
 80002d8:	88fb      	ldrh	r3, [r7, #6]
}
 80002da:	4618      	mov	r0, r3
 80002dc:	370c      	adds	r7, #12
 80002de:	46bd      	mov	sp, r7
 80002e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e4:	4770      	bx	lr
 80002e6:	bf00      	nop
 80002e8:	40012000 	.word	0x40012000

080002ec <MGPIO_voidSetPinDrictionOutAf>:



/* the funcation to set driction pin */
void MGPIO_voidSetPinDrictionOutAf( u8 capy_u8Port ,u8 capy_u8PinId,u8 Capy_u8modePin, u8 Capy_u8modeoutput,u8 Capy_u8speedmode )
{
 80002ec:	b490      	push	{r4, r7}
 80002ee:	b082      	sub	sp, #8
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	4604      	mov	r4, r0
 80002f4:	4608      	mov	r0, r1
 80002f6:	4611      	mov	r1, r2
 80002f8:	461a      	mov	r2, r3
 80002fa:	4623      	mov	r3, r4
 80002fc:	71fb      	strb	r3, [r7, #7]
 80002fe:	4603      	mov	r3, r0
 8000300:	71bb      	strb	r3, [r7, #6]
 8000302:	460b      	mov	r3, r1
 8000304:	717b      	strb	r3, [r7, #5]
 8000306:	4613      	mov	r3, r2
 8000308:	713b      	strb	r3, [r7, #4]
	switch (capy_u8Port)
 800030a:	79fb      	ldrb	r3, [r7, #7]
 800030c:	2b0a      	cmp	r3, #10
 800030e:	f200 834a 	bhi.w	80009a6 <MGPIO_voidSetPinDrictionOutAf+0x6ba>
 8000312:	a201      	add	r2, pc, #4	; (adr r2, 8000318 <MGPIO_voidSetPinDrictionOutAf+0x2c>)
 8000314:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000318:	08000345 	.word	0x08000345
 800031c:	080003d1 	.word	0x080003d1
 8000320:	0800045d 	.word	0x0800045d
 8000324:	080004e9 	.word	0x080004e9
 8000328:	08000631 	.word	0x08000631
 800032c:	080005a5 	.word	0x080005a5
 8000330:	08000749 	.word	0x08000749
 8000334:	080006bd 	.word	0x080006bd
 8000338:	08000891 	.word	0x08000891
 800033c:	08000805 	.word	0x08000805
 8000340:	0800091d 	.word	0x0800091d
	{
		case GPIO_PORTA:
		                if(capy_u8PinId<=15)
 8000344:	79bb      	ldrb	r3, [r7, #6]
 8000346:	2b0f      	cmp	r3, #15
 8000348:	f200 832f 	bhi.w	80009aa <MGPIO_voidSetPinDrictionOutAf+0x6be>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOA_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 800034c:	4989      	ldr	r1, [pc, #548]	; (8000574 <MGPIO_voidSetPinDrictionOutAf+0x288>)
 800034e:	4b89      	ldr	r3, [pc, #548]	; (8000574 <MGPIO_voidSetPinDrictionOutAf+0x288>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	79ba      	ldrb	r2, [r7, #6]
 8000354:	0052      	lsls	r2, r2, #1
 8000356:	2003      	movs	r0, #3
 8000358:	fa00 f202 	lsl.w	r2, r0, r2
 800035c:	43d2      	mvns	r2, r2
 800035e:	4013      	ands	r3, r2
 8000360:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOA_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000362:	4884      	ldr	r0, [pc, #528]	; (8000574 <MGPIO_voidSetPinDrictionOutAf+0x288>)
 8000364:	4b83      	ldr	r3, [pc, #524]	; (8000574 <MGPIO_voidSetPinDrictionOutAf+0x288>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	7979      	ldrb	r1, [r7, #5]
 800036a:	79ba      	ldrb	r2, [r7, #6]
 800036c:	0052      	lsls	r2, r2, #1
 800036e:	fa01 f202 	lsl.w	r2, r1, r2
 8000372:	4313      	orrs	r3, r2
 8000374:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOA_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000376:	4980      	ldr	r1, [pc, #512]	; (8000578 <MGPIO_voidSetPinDrictionOutAf+0x28c>)
 8000378:	4b7f      	ldr	r3, [pc, #508]	; (8000578 <MGPIO_voidSetPinDrictionOutAf+0x28c>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	79ba      	ldrb	r2, [r7, #6]
 800037e:	0052      	lsls	r2, r2, #1
 8000380:	2003      	movs	r0, #3
 8000382:	fa00 f202 	lsl.w	r2, r0, r2
 8000386:	43d2      	mvns	r2, r2
 8000388:	4013      	ands	r3, r2
 800038a:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOA_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 800038c:	487a      	ldr	r0, [pc, #488]	; (8000578 <MGPIO_voidSetPinDrictionOutAf+0x28c>)
 800038e:	4b7a      	ldr	r3, [pc, #488]	; (8000578 <MGPIO_voidSetPinDrictionOutAf+0x28c>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	7c39      	ldrb	r1, [r7, #16]
 8000394:	79ba      	ldrb	r2, [r7, #6]
 8000396:	0052      	lsls	r2, r2, #1
 8000398:	fa01 f202 	lsl.w	r2, r1, r2
 800039c:	4313      	orrs	r3, r2
 800039e:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 80003a0:	793b      	ldrb	r3, [r7, #4]
 80003a2:	2b00      	cmp	r3, #0
 80003a4:	d10a      	bne.n	80003bc <MGPIO_voidSetPinDrictionOutAf+0xd0>
							   {
								   CLR_BIT(GPIOA_OTYPER, capy_u8PinId);
 80003a6:	4975      	ldr	r1, [pc, #468]	; (800057c <MGPIO_voidSetPinDrictionOutAf+0x290>)
 80003a8:	4b74      	ldr	r3, [pc, #464]	; (800057c <MGPIO_voidSetPinDrictionOutAf+0x290>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	79ba      	ldrb	r2, [r7, #6]
 80003ae:	2001      	movs	r0, #1
 80003b0:	fa00 f202 	lsl.w	r2, r0, r2
 80003b4:	43d2      	mvns	r2, r2
 80003b6:	4013      	ands	r3, r2
 80003b8:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;
 80003ba:	e2f6      	b.n	80009aa <MGPIO_voidSetPinDrictionOutAf+0x6be>
								SET_BIT(GPIOA_OTYPER, capy_u8PinId);
 80003bc:	496f      	ldr	r1, [pc, #444]	; (800057c <MGPIO_voidSetPinDrictionOutAf+0x290>)
 80003be:	4b6f      	ldr	r3, [pc, #444]	; (800057c <MGPIO_voidSetPinDrictionOutAf+0x290>)
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	79ba      	ldrb	r2, [r7, #6]
 80003c4:	2001      	movs	r0, #1
 80003c6:	fa00 f202 	lsl.w	r2, r0, r2
 80003ca:	4313      	orrs	r3, r2
 80003cc:	600b      	str	r3, [r1, #0]
		                break;
 80003ce:	e2ec      	b.n	80009aa <MGPIO_voidSetPinDrictionOutAf+0x6be>
	
	    case GPIO_PORTB:
		                if(capy_u8PinId<=15)
 80003d0:	79bb      	ldrb	r3, [r7, #6]
 80003d2:	2b0f      	cmp	r3, #15
 80003d4:	f200 82eb 	bhi.w	80009ae <MGPIO_voidSetPinDrictionOutAf+0x6c2>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOB_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 80003d8:	4969      	ldr	r1, [pc, #420]	; (8000580 <MGPIO_voidSetPinDrictionOutAf+0x294>)
 80003da:	4b69      	ldr	r3, [pc, #420]	; (8000580 <MGPIO_voidSetPinDrictionOutAf+0x294>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	79ba      	ldrb	r2, [r7, #6]
 80003e0:	0052      	lsls	r2, r2, #1
 80003e2:	2003      	movs	r0, #3
 80003e4:	fa00 f202 	lsl.w	r2, r0, r2
 80003e8:	43d2      	mvns	r2, r2
 80003ea:	4013      	ands	r3, r2
 80003ec:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOB_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 80003ee:	4864      	ldr	r0, [pc, #400]	; (8000580 <MGPIO_voidSetPinDrictionOutAf+0x294>)
 80003f0:	4b63      	ldr	r3, [pc, #396]	; (8000580 <MGPIO_voidSetPinDrictionOutAf+0x294>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	7979      	ldrb	r1, [r7, #5]
 80003f6:	79ba      	ldrb	r2, [r7, #6]
 80003f8:	0052      	lsls	r2, r2, #1
 80003fa:	fa01 f202 	lsl.w	r2, r1, r2
 80003fe:	4313      	orrs	r3, r2
 8000400:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOB_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000402:	4960      	ldr	r1, [pc, #384]	; (8000584 <MGPIO_voidSetPinDrictionOutAf+0x298>)
 8000404:	4b5f      	ldr	r3, [pc, #380]	; (8000584 <MGPIO_voidSetPinDrictionOutAf+0x298>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	79ba      	ldrb	r2, [r7, #6]
 800040a:	0052      	lsls	r2, r2, #1
 800040c:	2003      	movs	r0, #3
 800040e:	fa00 f202 	lsl.w	r2, r0, r2
 8000412:	43d2      	mvns	r2, r2
 8000414:	4013      	ands	r3, r2
 8000416:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOB_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000418:	485a      	ldr	r0, [pc, #360]	; (8000584 <MGPIO_voidSetPinDrictionOutAf+0x298>)
 800041a:	4b5a      	ldr	r3, [pc, #360]	; (8000584 <MGPIO_voidSetPinDrictionOutAf+0x298>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	7c39      	ldrb	r1, [r7, #16]
 8000420:	79ba      	ldrb	r2, [r7, #6]
 8000422:	0052      	lsls	r2, r2, #1
 8000424:	fa01 f202 	lsl.w	r2, r1, r2
 8000428:	4313      	orrs	r3, r2
 800042a:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 800042c:	793b      	ldrb	r3, [r7, #4]
 800042e:	2b00      	cmp	r3, #0
 8000430:	d10a      	bne.n	8000448 <MGPIO_voidSetPinDrictionOutAf+0x15c>
							   {
								   CLR_BIT(GPIOB_OTYPER, capy_u8PinId);
 8000432:	4955      	ldr	r1, [pc, #340]	; (8000588 <MGPIO_voidSetPinDrictionOutAf+0x29c>)
 8000434:	4b54      	ldr	r3, [pc, #336]	; (8000588 <MGPIO_voidSetPinDrictionOutAf+0x29c>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	79ba      	ldrb	r2, [r7, #6]
 800043a:	2001      	movs	r0, #1
 800043c:	fa00 f202 	lsl.w	r2, r0, r2
 8000440:	43d2      	mvns	r2, r2
 8000442:	4013      	ands	r3, r2
 8000444:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;
 8000446:	e2b2      	b.n	80009ae <MGPIO_voidSetPinDrictionOutAf+0x6c2>
								SET_BIT(GPIOB_OTYPER, capy_u8PinId);
 8000448:	494f      	ldr	r1, [pc, #316]	; (8000588 <MGPIO_voidSetPinDrictionOutAf+0x29c>)
 800044a:	4b4f      	ldr	r3, [pc, #316]	; (8000588 <MGPIO_voidSetPinDrictionOutAf+0x29c>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	79ba      	ldrb	r2, [r7, #6]
 8000450:	2001      	movs	r0, #1
 8000452:	fa00 f202 	lsl.w	r2, r0, r2
 8000456:	4313      	orrs	r3, r2
 8000458:	600b      	str	r3, [r1, #0]
		                break;
 800045a:	e2a8      	b.n	80009ae <MGPIO_voidSetPinDrictionOutAf+0x6c2>
	
	    case GPIO_PORTC:
		                if(capy_u8PinId<=15)
 800045c:	79bb      	ldrb	r3, [r7, #6]
 800045e:	2b0f      	cmp	r3, #15
 8000460:	f200 82a7 	bhi.w	80009b2 <MGPIO_voidSetPinDrictionOutAf+0x6c6>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOC_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000464:	4949      	ldr	r1, [pc, #292]	; (800058c <MGPIO_voidSetPinDrictionOutAf+0x2a0>)
 8000466:	4b49      	ldr	r3, [pc, #292]	; (800058c <MGPIO_voidSetPinDrictionOutAf+0x2a0>)
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	79ba      	ldrb	r2, [r7, #6]
 800046c:	0052      	lsls	r2, r2, #1
 800046e:	2003      	movs	r0, #3
 8000470:	fa00 f202 	lsl.w	r2, r0, r2
 8000474:	43d2      	mvns	r2, r2
 8000476:	4013      	ands	r3, r2
 8000478:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOC_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 800047a:	4844      	ldr	r0, [pc, #272]	; (800058c <MGPIO_voidSetPinDrictionOutAf+0x2a0>)
 800047c:	4b43      	ldr	r3, [pc, #268]	; (800058c <MGPIO_voidSetPinDrictionOutAf+0x2a0>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	7979      	ldrb	r1, [r7, #5]
 8000482:	79ba      	ldrb	r2, [r7, #6]
 8000484:	0052      	lsls	r2, r2, #1
 8000486:	fa01 f202 	lsl.w	r2, r1, r2
 800048a:	4313      	orrs	r3, r2
 800048c:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOC_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 800048e:	4940      	ldr	r1, [pc, #256]	; (8000590 <MGPIO_voidSetPinDrictionOutAf+0x2a4>)
 8000490:	4b3f      	ldr	r3, [pc, #252]	; (8000590 <MGPIO_voidSetPinDrictionOutAf+0x2a4>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	79ba      	ldrb	r2, [r7, #6]
 8000496:	0052      	lsls	r2, r2, #1
 8000498:	2003      	movs	r0, #3
 800049a:	fa00 f202 	lsl.w	r2, r0, r2
 800049e:	43d2      	mvns	r2, r2
 80004a0:	4013      	ands	r3, r2
 80004a2:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOC_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 80004a4:	483a      	ldr	r0, [pc, #232]	; (8000590 <MGPIO_voidSetPinDrictionOutAf+0x2a4>)
 80004a6:	4b3a      	ldr	r3, [pc, #232]	; (8000590 <MGPIO_voidSetPinDrictionOutAf+0x2a4>)
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	7c39      	ldrb	r1, [r7, #16]
 80004ac:	79ba      	ldrb	r2, [r7, #6]
 80004ae:	0052      	lsls	r2, r2, #1
 80004b0:	fa01 f202 	lsl.w	r2, r1, r2
 80004b4:	4313      	orrs	r3, r2
 80004b6:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 80004b8:	793b      	ldrb	r3, [r7, #4]
 80004ba:	2b00      	cmp	r3, #0
 80004bc:	d10a      	bne.n	80004d4 <MGPIO_voidSetPinDrictionOutAf+0x1e8>
							   {
								   CLR_BIT(GPIOC_OTYPER, capy_u8PinId);
 80004be:	4935      	ldr	r1, [pc, #212]	; (8000594 <MGPIO_voidSetPinDrictionOutAf+0x2a8>)
 80004c0:	4b34      	ldr	r3, [pc, #208]	; (8000594 <MGPIO_voidSetPinDrictionOutAf+0x2a8>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	79ba      	ldrb	r2, [r7, #6]
 80004c6:	2001      	movs	r0, #1
 80004c8:	fa00 f202 	lsl.w	r2, r0, r2
 80004cc:	43d2      	mvns	r2, r2
 80004ce:	4013      	ands	r3, r2
 80004d0:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;
 80004d2:	e26e      	b.n	80009b2 <MGPIO_voidSetPinDrictionOutAf+0x6c6>
								SET_BIT(GPIOC_OTYPER, capy_u8PinId);
 80004d4:	492f      	ldr	r1, [pc, #188]	; (8000594 <MGPIO_voidSetPinDrictionOutAf+0x2a8>)
 80004d6:	4b2f      	ldr	r3, [pc, #188]	; (8000594 <MGPIO_voidSetPinDrictionOutAf+0x2a8>)
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	79ba      	ldrb	r2, [r7, #6]
 80004dc:	2001      	movs	r0, #1
 80004de:	fa00 f202 	lsl.w	r2, r0, r2
 80004e2:	4313      	orrs	r3, r2
 80004e4:	600b      	str	r3, [r1, #0]
		                break;
 80004e6:	e264      	b.n	80009b2 <MGPIO_voidSetPinDrictionOutAf+0x6c6>
						
		case GPIO_PORTD:
		                if(capy_u8PinId<=15)
 80004e8:	79bb      	ldrb	r3, [r7, #6]
 80004ea:	2b0f      	cmp	r3, #15
 80004ec:	f200 8263 	bhi.w	80009b6 <MGPIO_voidSetPinDrictionOutAf+0x6ca>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOD_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 80004f0:	4929      	ldr	r1, [pc, #164]	; (8000598 <MGPIO_voidSetPinDrictionOutAf+0x2ac>)
 80004f2:	4b29      	ldr	r3, [pc, #164]	; (8000598 <MGPIO_voidSetPinDrictionOutAf+0x2ac>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	79ba      	ldrb	r2, [r7, #6]
 80004f8:	0052      	lsls	r2, r2, #1
 80004fa:	2003      	movs	r0, #3
 80004fc:	fa00 f202 	lsl.w	r2, r0, r2
 8000500:	43d2      	mvns	r2, r2
 8000502:	4013      	ands	r3, r2
 8000504:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOD_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000506:	4824      	ldr	r0, [pc, #144]	; (8000598 <MGPIO_voidSetPinDrictionOutAf+0x2ac>)
 8000508:	4b23      	ldr	r3, [pc, #140]	; (8000598 <MGPIO_voidSetPinDrictionOutAf+0x2ac>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	7979      	ldrb	r1, [r7, #5]
 800050e:	79ba      	ldrb	r2, [r7, #6]
 8000510:	0052      	lsls	r2, r2, #1
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	4313      	orrs	r3, r2
 8000518:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOD_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 800051a:	4920      	ldr	r1, [pc, #128]	; (800059c <MGPIO_voidSetPinDrictionOutAf+0x2b0>)
 800051c:	4b1f      	ldr	r3, [pc, #124]	; (800059c <MGPIO_voidSetPinDrictionOutAf+0x2b0>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	79ba      	ldrb	r2, [r7, #6]
 8000522:	0052      	lsls	r2, r2, #1
 8000524:	2003      	movs	r0, #3
 8000526:	fa00 f202 	lsl.w	r2, r0, r2
 800052a:	43d2      	mvns	r2, r2
 800052c:	4013      	ands	r3, r2
 800052e:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOD_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000530:	481a      	ldr	r0, [pc, #104]	; (800059c <MGPIO_voidSetPinDrictionOutAf+0x2b0>)
 8000532:	4b1a      	ldr	r3, [pc, #104]	; (800059c <MGPIO_voidSetPinDrictionOutAf+0x2b0>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	7c39      	ldrb	r1, [r7, #16]
 8000538:	79ba      	ldrb	r2, [r7, #6]
 800053a:	0052      	lsls	r2, r2, #1
 800053c:	fa01 f202 	lsl.w	r2, r1, r2
 8000540:	4313      	orrs	r3, r2
 8000542:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 8000544:	793b      	ldrb	r3, [r7, #4]
 8000546:	2b00      	cmp	r3, #0
 8000548:	d10a      	bne.n	8000560 <MGPIO_voidSetPinDrictionOutAf+0x274>
							   {
								   CLR_BIT(GPIOD_OTYPER, capy_u8PinId);
 800054a:	4915      	ldr	r1, [pc, #84]	; (80005a0 <MGPIO_voidSetPinDrictionOutAf+0x2b4>)
 800054c:	4b14      	ldr	r3, [pc, #80]	; (80005a0 <MGPIO_voidSetPinDrictionOutAf+0x2b4>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	79ba      	ldrb	r2, [r7, #6]
 8000552:	2001      	movs	r0, #1
 8000554:	fa00 f202 	lsl.w	r2, r0, r2
 8000558:	43d2      	mvns	r2, r2
 800055a:	4013      	ands	r3, r2
 800055c:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;		
 800055e:	e22a      	b.n	80009b6 <MGPIO_voidSetPinDrictionOutAf+0x6ca>
								SET_BIT(GPIOD_OTYPER, capy_u8PinId);
 8000560:	490f      	ldr	r1, [pc, #60]	; (80005a0 <MGPIO_voidSetPinDrictionOutAf+0x2b4>)
 8000562:	4b0f      	ldr	r3, [pc, #60]	; (80005a0 <MGPIO_voidSetPinDrictionOutAf+0x2b4>)
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	79ba      	ldrb	r2, [r7, #6]
 8000568:	2001      	movs	r0, #1
 800056a:	fa00 f202 	lsl.w	r2, r0, r2
 800056e:	4313      	orrs	r3, r2
 8000570:	600b      	str	r3, [r1, #0]
		                break;		
 8000572:	e220      	b.n	80009b6 <MGPIO_voidSetPinDrictionOutAf+0x6ca>
 8000574:	40020000 	.word	0x40020000
 8000578:	40020008 	.word	0x40020008
 800057c:	40020004 	.word	0x40020004
 8000580:	40020400 	.word	0x40020400
 8000584:	40020408 	.word	0x40020408
 8000588:	40020404 	.word	0x40020404
 800058c:	40020800 	.word	0x40020800
 8000590:	40020808 	.word	0x40020808
 8000594:	40020804 	.word	0x40020804
 8000598:	40020c00 	.word	0x40020c00
 800059c:	40020c08 	.word	0x40020c08
 80005a0:	40020c04 	.word	0x40020c04
						
		case GPIO_PORTF:
		                if(capy_u8PinId<=15)
 80005a4:	79bb      	ldrb	r3, [r7, #6]
 80005a6:	2b0f      	cmp	r3, #15
 80005a8:	f200 8207 	bhi.w	80009ba <MGPIO_voidSetPinDrictionOutAf+0x6ce>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOF_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 80005ac:	4989      	ldr	r1, [pc, #548]	; (80007d4 <MGPIO_voidSetPinDrictionOutAf+0x4e8>)
 80005ae:	4b89      	ldr	r3, [pc, #548]	; (80007d4 <MGPIO_voidSetPinDrictionOutAf+0x4e8>)
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	79ba      	ldrb	r2, [r7, #6]
 80005b4:	0052      	lsls	r2, r2, #1
 80005b6:	2003      	movs	r0, #3
 80005b8:	fa00 f202 	lsl.w	r2, r0, r2
 80005bc:	43d2      	mvns	r2, r2
 80005be:	4013      	ands	r3, r2
 80005c0:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOF_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 80005c2:	4884      	ldr	r0, [pc, #528]	; (80007d4 <MGPIO_voidSetPinDrictionOutAf+0x4e8>)
 80005c4:	4b83      	ldr	r3, [pc, #524]	; (80007d4 <MGPIO_voidSetPinDrictionOutAf+0x4e8>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	7979      	ldrb	r1, [r7, #5]
 80005ca:	79ba      	ldrb	r2, [r7, #6]
 80005cc:	0052      	lsls	r2, r2, #1
 80005ce:	fa01 f202 	lsl.w	r2, r1, r2
 80005d2:	4313      	orrs	r3, r2
 80005d4:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOF_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 80005d6:	4980      	ldr	r1, [pc, #512]	; (80007d8 <MGPIO_voidSetPinDrictionOutAf+0x4ec>)
 80005d8:	4b7f      	ldr	r3, [pc, #508]	; (80007d8 <MGPIO_voidSetPinDrictionOutAf+0x4ec>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	79ba      	ldrb	r2, [r7, #6]
 80005de:	0052      	lsls	r2, r2, #1
 80005e0:	2003      	movs	r0, #3
 80005e2:	fa00 f202 	lsl.w	r2, r0, r2
 80005e6:	43d2      	mvns	r2, r2
 80005e8:	4013      	ands	r3, r2
 80005ea:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOF_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 80005ec:	487a      	ldr	r0, [pc, #488]	; (80007d8 <MGPIO_voidSetPinDrictionOutAf+0x4ec>)
 80005ee:	4b7a      	ldr	r3, [pc, #488]	; (80007d8 <MGPIO_voidSetPinDrictionOutAf+0x4ec>)
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	7c39      	ldrb	r1, [r7, #16]
 80005f4:	79ba      	ldrb	r2, [r7, #6]
 80005f6:	0052      	lsls	r2, r2, #1
 80005f8:	fa01 f202 	lsl.w	r2, r1, r2
 80005fc:	4313      	orrs	r3, r2
 80005fe:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 8000600:	793b      	ldrb	r3, [r7, #4]
 8000602:	2b00      	cmp	r3, #0
 8000604:	d10a      	bne.n	800061c <MGPIO_voidSetPinDrictionOutAf+0x330>
							   {
								   CLR_BIT(GPIOF_OTYPER, capy_u8PinId);
 8000606:	4975      	ldr	r1, [pc, #468]	; (80007dc <MGPIO_voidSetPinDrictionOutAf+0x4f0>)
 8000608:	4b74      	ldr	r3, [pc, #464]	; (80007dc <MGPIO_voidSetPinDrictionOutAf+0x4f0>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	79ba      	ldrb	r2, [r7, #6]
 800060e:	2001      	movs	r0, #1
 8000610:	fa00 f202 	lsl.w	r2, r0, r2
 8000614:	43d2      	mvns	r2, r2
 8000616:	4013      	ands	r3, r2
 8000618:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;
 800061a:	e1ce      	b.n	80009ba <MGPIO_voidSetPinDrictionOutAf+0x6ce>
								SET_BIT(GPIOF_OTYPER, capy_u8PinId);
 800061c:	496f      	ldr	r1, [pc, #444]	; (80007dc <MGPIO_voidSetPinDrictionOutAf+0x4f0>)
 800061e:	4b6f      	ldr	r3, [pc, #444]	; (80007dc <MGPIO_voidSetPinDrictionOutAf+0x4f0>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	79ba      	ldrb	r2, [r7, #6]
 8000624:	2001      	movs	r0, #1
 8000626:	fa00 f202 	lsl.w	r2, r0, r2
 800062a:	4313      	orrs	r3, r2
 800062c:	600b      	str	r3, [r1, #0]
		                break;
 800062e:	e1c4      	b.n	80009ba <MGPIO_voidSetPinDrictionOutAf+0x6ce>
						
		case GPIO_PORTE:
		                if(capy_u8PinId<=15)
 8000630:	79bb      	ldrb	r3, [r7, #6]
 8000632:	2b0f      	cmp	r3, #15
 8000634:	f200 81c3 	bhi.w	80009be <MGPIO_voidSetPinDrictionOutAf+0x6d2>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOE_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000638:	4969      	ldr	r1, [pc, #420]	; (80007e0 <MGPIO_voidSetPinDrictionOutAf+0x4f4>)
 800063a:	4b69      	ldr	r3, [pc, #420]	; (80007e0 <MGPIO_voidSetPinDrictionOutAf+0x4f4>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	79ba      	ldrb	r2, [r7, #6]
 8000640:	0052      	lsls	r2, r2, #1
 8000642:	2003      	movs	r0, #3
 8000644:	fa00 f202 	lsl.w	r2, r0, r2
 8000648:	43d2      	mvns	r2, r2
 800064a:	4013      	ands	r3, r2
 800064c:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOE_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 800064e:	4864      	ldr	r0, [pc, #400]	; (80007e0 <MGPIO_voidSetPinDrictionOutAf+0x4f4>)
 8000650:	4b63      	ldr	r3, [pc, #396]	; (80007e0 <MGPIO_voidSetPinDrictionOutAf+0x4f4>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	7979      	ldrb	r1, [r7, #5]
 8000656:	79ba      	ldrb	r2, [r7, #6]
 8000658:	0052      	lsls	r2, r2, #1
 800065a:	fa01 f202 	lsl.w	r2, r1, r2
 800065e:	4313      	orrs	r3, r2
 8000660:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOE_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000662:	4960      	ldr	r1, [pc, #384]	; (80007e4 <MGPIO_voidSetPinDrictionOutAf+0x4f8>)
 8000664:	4b5f      	ldr	r3, [pc, #380]	; (80007e4 <MGPIO_voidSetPinDrictionOutAf+0x4f8>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	79ba      	ldrb	r2, [r7, #6]
 800066a:	0052      	lsls	r2, r2, #1
 800066c:	2003      	movs	r0, #3
 800066e:	fa00 f202 	lsl.w	r2, r0, r2
 8000672:	43d2      	mvns	r2, r2
 8000674:	4013      	ands	r3, r2
 8000676:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOE_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000678:	485a      	ldr	r0, [pc, #360]	; (80007e4 <MGPIO_voidSetPinDrictionOutAf+0x4f8>)
 800067a:	4b5a      	ldr	r3, [pc, #360]	; (80007e4 <MGPIO_voidSetPinDrictionOutAf+0x4f8>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	7c39      	ldrb	r1, [r7, #16]
 8000680:	79ba      	ldrb	r2, [r7, #6]
 8000682:	0052      	lsls	r2, r2, #1
 8000684:	fa01 f202 	lsl.w	r2, r1, r2
 8000688:	4313      	orrs	r3, r2
 800068a:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 800068c:	793b      	ldrb	r3, [r7, #4]
 800068e:	2b00      	cmp	r3, #0
 8000690:	d10a      	bne.n	80006a8 <MGPIO_voidSetPinDrictionOutAf+0x3bc>
							   {
								   CLR_BIT(GPIOE_OTYPER, capy_u8PinId);
 8000692:	4955      	ldr	r1, [pc, #340]	; (80007e8 <MGPIO_voidSetPinDrictionOutAf+0x4fc>)
 8000694:	4b54      	ldr	r3, [pc, #336]	; (80007e8 <MGPIO_voidSetPinDrictionOutAf+0x4fc>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	79ba      	ldrb	r2, [r7, #6]
 800069a:	2001      	movs	r0, #1
 800069c:	fa00 f202 	lsl.w	r2, r0, r2
 80006a0:	43d2      	mvns	r2, r2
 80006a2:	4013      	ands	r3, r2
 80006a4:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;				
 80006a6:	e18a      	b.n	80009be <MGPIO_voidSetPinDrictionOutAf+0x6d2>
								SET_BIT(GPIOE_OTYPER, capy_u8PinId);
 80006a8:	494f      	ldr	r1, [pc, #316]	; (80007e8 <MGPIO_voidSetPinDrictionOutAf+0x4fc>)
 80006aa:	4b4f      	ldr	r3, [pc, #316]	; (80007e8 <MGPIO_voidSetPinDrictionOutAf+0x4fc>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	79ba      	ldrb	r2, [r7, #6]
 80006b0:	2001      	movs	r0, #1
 80006b2:	fa00 f202 	lsl.w	r2, r0, r2
 80006b6:	4313      	orrs	r3, r2
 80006b8:	600b      	str	r3, [r1, #0]
		                break;				
 80006ba:	e180      	b.n	80009be <MGPIO_voidSetPinDrictionOutAf+0x6d2>
						
		case GPIO_PORTH:
		                if(capy_u8PinId<=15)
 80006bc:	79bb      	ldrb	r3, [r7, #6]
 80006be:	2b0f      	cmp	r3, #15
 80006c0:	f200 817f 	bhi.w	80009c2 <MGPIO_voidSetPinDrictionOutAf+0x6d6>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOH_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 80006c4:	4949      	ldr	r1, [pc, #292]	; (80007ec <MGPIO_voidSetPinDrictionOutAf+0x500>)
 80006c6:	4b49      	ldr	r3, [pc, #292]	; (80007ec <MGPIO_voidSetPinDrictionOutAf+0x500>)
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	79ba      	ldrb	r2, [r7, #6]
 80006cc:	0052      	lsls	r2, r2, #1
 80006ce:	2003      	movs	r0, #3
 80006d0:	fa00 f202 	lsl.w	r2, r0, r2
 80006d4:	43d2      	mvns	r2, r2
 80006d6:	4013      	ands	r3, r2
 80006d8:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOH_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 80006da:	4844      	ldr	r0, [pc, #272]	; (80007ec <MGPIO_voidSetPinDrictionOutAf+0x500>)
 80006dc:	4b43      	ldr	r3, [pc, #268]	; (80007ec <MGPIO_voidSetPinDrictionOutAf+0x500>)
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	7979      	ldrb	r1, [r7, #5]
 80006e2:	79ba      	ldrb	r2, [r7, #6]
 80006e4:	0052      	lsls	r2, r2, #1
 80006e6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ea:	4313      	orrs	r3, r2
 80006ec:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOH_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 80006ee:	4940      	ldr	r1, [pc, #256]	; (80007f0 <MGPIO_voidSetPinDrictionOutAf+0x504>)
 80006f0:	4b3f      	ldr	r3, [pc, #252]	; (80007f0 <MGPIO_voidSetPinDrictionOutAf+0x504>)
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	79ba      	ldrb	r2, [r7, #6]
 80006f6:	0052      	lsls	r2, r2, #1
 80006f8:	2003      	movs	r0, #3
 80006fa:	fa00 f202 	lsl.w	r2, r0, r2
 80006fe:	43d2      	mvns	r2, r2
 8000700:	4013      	ands	r3, r2
 8000702:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOH_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000704:	483a      	ldr	r0, [pc, #232]	; (80007f0 <MGPIO_voidSetPinDrictionOutAf+0x504>)
 8000706:	4b3a      	ldr	r3, [pc, #232]	; (80007f0 <MGPIO_voidSetPinDrictionOutAf+0x504>)
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	7c39      	ldrb	r1, [r7, #16]
 800070c:	79ba      	ldrb	r2, [r7, #6]
 800070e:	0052      	lsls	r2, r2, #1
 8000710:	fa01 f202 	lsl.w	r2, r1, r2
 8000714:	4313      	orrs	r3, r2
 8000716:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 8000718:	793b      	ldrb	r3, [r7, #4]
 800071a:	2b00      	cmp	r3, #0
 800071c:	d10a      	bne.n	8000734 <MGPIO_voidSetPinDrictionOutAf+0x448>
							   {
								   CLR_BIT(GPIOH_OTYPER, capy_u8PinId);
 800071e:	4935      	ldr	r1, [pc, #212]	; (80007f4 <MGPIO_voidSetPinDrictionOutAf+0x508>)
 8000720:	4b34      	ldr	r3, [pc, #208]	; (80007f4 <MGPIO_voidSetPinDrictionOutAf+0x508>)
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	79ba      	ldrb	r2, [r7, #6]
 8000726:	2001      	movs	r0, #1
 8000728:	fa00 f202 	lsl.w	r2, r0, r2
 800072c:	43d2      	mvns	r2, r2
 800072e:	4013      	ands	r3, r2
 8000730:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error "return error the pin choise ";
						}
		                break;
 8000732:	e146      	b.n	80009c2 <MGPIO_voidSetPinDrictionOutAf+0x6d6>
								SET_BIT(GPIOH_OTYPER, capy_u8PinId);
 8000734:	492f      	ldr	r1, [pc, #188]	; (80007f4 <MGPIO_voidSetPinDrictionOutAf+0x508>)
 8000736:	4b2f      	ldr	r3, [pc, #188]	; (80007f4 <MGPIO_voidSetPinDrictionOutAf+0x508>)
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	79ba      	ldrb	r2, [r7, #6]
 800073c:	2001      	movs	r0, #1
 800073e:	fa00 f202 	lsl.w	r2, r0, r2
 8000742:	4313      	orrs	r3, r2
 8000744:	600b      	str	r3, [r1, #0]
		                break;
 8000746:	e13c      	b.n	80009c2 <MGPIO_voidSetPinDrictionOutAf+0x6d6>
		
		case GPIO_PORTG:
		                if(capy_u8PinId<=15)
 8000748:	79bb      	ldrb	r3, [r7, #6]
 800074a:	2b0f      	cmp	r3, #15
 800074c:	f200 813b 	bhi.w	80009c6 <MGPIO_voidSetPinDrictionOutAf+0x6da>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOG_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000750:	4929      	ldr	r1, [pc, #164]	; (80007f8 <MGPIO_voidSetPinDrictionOutAf+0x50c>)
 8000752:	4b29      	ldr	r3, [pc, #164]	; (80007f8 <MGPIO_voidSetPinDrictionOutAf+0x50c>)
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	79ba      	ldrb	r2, [r7, #6]
 8000758:	0052      	lsls	r2, r2, #1
 800075a:	2003      	movs	r0, #3
 800075c:	fa00 f202 	lsl.w	r2, r0, r2
 8000760:	43d2      	mvns	r2, r2
 8000762:	4013      	ands	r3, r2
 8000764:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOG_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000766:	4824      	ldr	r0, [pc, #144]	; (80007f8 <MGPIO_voidSetPinDrictionOutAf+0x50c>)
 8000768:	4b23      	ldr	r3, [pc, #140]	; (80007f8 <MGPIO_voidSetPinDrictionOutAf+0x50c>)
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	7979      	ldrb	r1, [r7, #5]
 800076e:	79ba      	ldrb	r2, [r7, #6]
 8000770:	0052      	lsls	r2, r2, #1
 8000772:	fa01 f202 	lsl.w	r2, r1, r2
 8000776:	4313      	orrs	r3, r2
 8000778:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOG_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 800077a:	4920      	ldr	r1, [pc, #128]	; (80007fc <MGPIO_voidSetPinDrictionOutAf+0x510>)
 800077c:	4b1f      	ldr	r3, [pc, #124]	; (80007fc <MGPIO_voidSetPinDrictionOutAf+0x510>)
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	79ba      	ldrb	r2, [r7, #6]
 8000782:	0052      	lsls	r2, r2, #1
 8000784:	2003      	movs	r0, #3
 8000786:	fa00 f202 	lsl.w	r2, r0, r2
 800078a:	43d2      	mvns	r2, r2
 800078c:	4013      	ands	r3, r2
 800078e:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOG_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000790:	481a      	ldr	r0, [pc, #104]	; (80007fc <MGPIO_voidSetPinDrictionOutAf+0x510>)
 8000792:	4b1a      	ldr	r3, [pc, #104]	; (80007fc <MGPIO_voidSetPinDrictionOutAf+0x510>)
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	7c39      	ldrb	r1, [r7, #16]
 8000798:	79ba      	ldrb	r2, [r7, #6]
 800079a:	0052      	lsls	r2, r2, #1
 800079c:	fa01 f202 	lsl.w	r2, r1, r2
 80007a0:	4313      	orrs	r3, r2
 80007a2:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 80007a4:	793b      	ldrb	r3, [r7, #4]
 80007a6:	2b00      	cmp	r3, #0
 80007a8:	d10a      	bne.n	80007c0 <MGPIO_voidSetPinDrictionOutAf+0x4d4>
							   {
								   CLR_BIT(GPIOG_OTYPER, capy_u8PinId);
 80007aa:	4915      	ldr	r1, [pc, #84]	; (8000800 <MGPIO_voidSetPinDrictionOutAf+0x514>)
 80007ac:	4b14      	ldr	r3, [pc, #80]	; (8000800 <MGPIO_voidSetPinDrictionOutAf+0x514>)
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	79ba      	ldrb	r2, [r7, #6]
 80007b2:	2001      	movs	r0, #1
 80007b4:	fa00 f202 	lsl.w	r2, r0, r2
 80007b8:	43d2      	mvns	r2, r2
 80007ba:	4013      	ands	r3, r2
 80007bc:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;	
 80007be:	e102      	b.n	80009c6 <MGPIO_voidSetPinDrictionOutAf+0x6da>
								SET_BIT(GPIOG_OTYPER, capy_u8PinId);
 80007c0:	490f      	ldr	r1, [pc, #60]	; (8000800 <MGPIO_voidSetPinDrictionOutAf+0x514>)
 80007c2:	4b0f      	ldr	r3, [pc, #60]	; (8000800 <MGPIO_voidSetPinDrictionOutAf+0x514>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	79ba      	ldrb	r2, [r7, #6]
 80007c8:	2001      	movs	r0, #1
 80007ca:	fa00 f202 	lsl.w	r2, r0, r2
 80007ce:	4313      	orrs	r3, r2
 80007d0:	600b      	str	r3, [r1, #0]
		                break;	
 80007d2:	e0f8      	b.n	80009c6 <MGPIO_voidSetPinDrictionOutAf+0x6da>
 80007d4:	40021400 	.word	0x40021400
 80007d8:	40021408 	.word	0x40021408
 80007dc:	40021404 	.word	0x40021404
 80007e0:	40021000 	.word	0x40021000
 80007e4:	40021008 	.word	0x40021008
 80007e8:	40021004 	.word	0x40021004
 80007ec:	40021c00 	.word	0x40021c00
 80007f0:	40021c08 	.word	0x40021c08
 80007f4:	40021c04 	.word	0x40021c04
 80007f8:	40021800 	.word	0x40021800
 80007fc:	40021808 	.word	0x40021808
 8000800:	40021804 	.word	0x40021804

		case GPIO_PORTJ:
		                if(capy_u8PinId<=15)
 8000804:	79bb      	ldrb	r3, [r7, #6]
 8000806:	2b0f      	cmp	r3, #15
 8000808:	f200 80df 	bhi.w	80009ca <MGPIO_voidSetPinDrictionOutAf+0x6de>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOJ_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 800080c:	4974      	ldr	r1, [pc, #464]	; (80009e0 <MGPIO_voidSetPinDrictionOutAf+0x6f4>)
 800080e:	4b74      	ldr	r3, [pc, #464]	; (80009e0 <MGPIO_voidSetPinDrictionOutAf+0x6f4>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	79ba      	ldrb	r2, [r7, #6]
 8000814:	0052      	lsls	r2, r2, #1
 8000816:	2003      	movs	r0, #3
 8000818:	fa00 f202 	lsl.w	r2, r0, r2
 800081c:	43d2      	mvns	r2, r2
 800081e:	4013      	ands	r3, r2
 8000820:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOJ_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000822:	486f      	ldr	r0, [pc, #444]	; (80009e0 <MGPIO_voidSetPinDrictionOutAf+0x6f4>)
 8000824:	4b6e      	ldr	r3, [pc, #440]	; (80009e0 <MGPIO_voidSetPinDrictionOutAf+0x6f4>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	7979      	ldrb	r1, [r7, #5]
 800082a:	79ba      	ldrb	r2, [r7, #6]
 800082c:	0052      	lsls	r2, r2, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	4313      	orrs	r3, r2
 8000834:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOJ_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000836:	496b      	ldr	r1, [pc, #428]	; (80009e4 <MGPIO_voidSetPinDrictionOutAf+0x6f8>)
 8000838:	4b6a      	ldr	r3, [pc, #424]	; (80009e4 <MGPIO_voidSetPinDrictionOutAf+0x6f8>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	79ba      	ldrb	r2, [r7, #6]
 800083e:	0052      	lsls	r2, r2, #1
 8000840:	2003      	movs	r0, #3
 8000842:	fa00 f202 	lsl.w	r2, r0, r2
 8000846:	43d2      	mvns	r2, r2
 8000848:	4013      	ands	r3, r2
 800084a:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOJ_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 800084c:	4865      	ldr	r0, [pc, #404]	; (80009e4 <MGPIO_voidSetPinDrictionOutAf+0x6f8>)
 800084e:	4b65      	ldr	r3, [pc, #404]	; (80009e4 <MGPIO_voidSetPinDrictionOutAf+0x6f8>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	7c39      	ldrb	r1, [r7, #16]
 8000854:	79ba      	ldrb	r2, [r7, #6]
 8000856:	0052      	lsls	r2, r2, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4313      	orrs	r3, r2
 800085e:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 8000860:	793b      	ldrb	r3, [r7, #4]
 8000862:	2b00      	cmp	r3, #0
 8000864:	d10a      	bne.n	800087c <MGPIO_voidSetPinDrictionOutAf+0x590>
							   {
								   CLR_BIT(GPIOJ_OTYPER, capy_u8PinId);
 8000866:	4960      	ldr	r1, [pc, #384]	; (80009e8 <MGPIO_voidSetPinDrictionOutAf+0x6fc>)
 8000868:	4b5f      	ldr	r3, [pc, #380]	; (80009e8 <MGPIO_voidSetPinDrictionOutAf+0x6fc>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	79ba      	ldrb	r2, [r7, #6]
 800086e:	2001      	movs	r0, #1
 8000870:	fa00 f202 	lsl.w	r2, r0, r2
 8000874:	43d2      	mvns	r2, r2
 8000876:	4013      	ands	r3, r2
 8000878:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;	
 800087a:	e0a6      	b.n	80009ca <MGPIO_voidSetPinDrictionOutAf+0x6de>
								SET_BIT(GPIOJ_OTYPER, capy_u8PinId);
 800087c:	495a      	ldr	r1, [pc, #360]	; (80009e8 <MGPIO_voidSetPinDrictionOutAf+0x6fc>)
 800087e:	4b5a      	ldr	r3, [pc, #360]	; (80009e8 <MGPIO_voidSetPinDrictionOutAf+0x6fc>)
 8000880:	681b      	ldr	r3, [r3, #0]
 8000882:	79ba      	ldrb	r2, [r7, #6]
 8000884:	2001      	movs	r0, #1
 8000886:	fa00 f202 	lsl.w	r2, r0, r2
 800088a:	4313      	orrs	r3, r2
 800088c:	600b      	str	r3, [r1, #0]
		                break;	
 800088e:	e09c      	b.n	80009ca <MGPIO_voidSetPinDrictionOutAf+0x6de>

		case GPIO_PORTI:
		                if(capy_u8PinId<=15)
 8000890:	79bb      	ldrb	r3, [r7, #6]
 8000892:	2b0f      	cmp	r3, #15
 8000894:	f200 809b 	bhi.w	80009ce <MGPIO_voidSetPinDrictionOutAf+0x6e2>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOI_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000898:	4954      	ldr	r1, [pc, #336]	; (80009ec <MGPIO_voidSetPinDrictionOutAf+0x700>)
 800089a:	4b54      	ldr	r3, [pc, #336]	; (80009ec <MGPIO_voidSetPinDrictionOutAf+0x700>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	79ba      	ldrb	r2, [r7, #6]
 80008a0:	0052      	lsls	r2, r2, #1
 80008a2:	2003      	movs	r0, #3
 80008a4:	fa00 f202 	lsl.w	r2, r0, r2
 80008a8:	43d2      	mvns	r2, r2
 80008aa:	4013      	ands	r3, r2
 80008ac:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOI_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 80008ae:	484f      	ldr	r0, [pc, #316]	; (80009ec <MGPIO_voidSetPinDrictionOutAf+0x700>)
 80008b0:	4b4e      	ldr	r3, [pc, #312]	; (80009ec <MGPIO_voidSetPinDrictionOutAf+0x700>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	7979      	ldrb	r1, [r7, #5]
 80008b6:	79ba      	ldrb	r2, [r7, #6]
 80008b8:	0052      	lsls	r2, r2, #1
 80008ba:	fa01 f202 	lsl.w	r2, r1, r2
 80008be:	4313      	orrs	r3, r2
 80008c0:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOI_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 80008c2:	494b      	ldr	r1, [pc, #300]	; (80009f0 <MGPIO_voidSetPinDrictionOutAf+0x704>)
 80008c4:	4b4a      	ldr	r3, [pc, #296]	; (80009f0 <MGPIO_voidSetPinDrictionOutAf+0x704>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	79ba      	ldrb	r2, [r7, #6]
 80008ca:	0052      	lsls	r2, r2, #1
 80008cc:	2003      	movs	r0, #3
 80008ce:	fa00 f202 	lsl.w	r2, r0, r2
 80008d2:	43d2      	mvns	r2, r2
 80008d4:	4013      	ands	r3, r2
 80008d6:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOI_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 80008d8:	4845      	ldr	r0, [pc, #276]	; (80009f0 <MGPIO_voidSetPinDrictionOutAf+0x704>)
 80008da:	4b45      	ldr	r3, [pc, #276]	; (80009f0 <MGPIO_voidSetPinDrictionOutAf+0x704>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	7c39      	ldrb	r1, [r7, #16]
 80008e0:	79ba      	ldrb	r2, [r7, #6]
 80008e2:	0052      	lsls	r2, r2, #1
 80008e4:	fa01 f202 	lsl.w	r2, r1, r2
 80008e8:	4313      	orrs	r3, r2
 80008ea:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 80008ec:	793b      	ldrb	r3, [r7, #4]
 80008ee:	2b00      	cmp	r3, #0
 80008f0:	d10a      	bne.n	8000908 <MGPIO_voidSetPinDrictionOutAf+0x61c>
							   {
								   CLR_BIT(GPIOI_OTYPER, capy_u8PinId);
 80008f2:	4940      	ldr	r1, [pc, #256]	; (80009f4 <MGPIO_voidSetPinDrictionOutAf+0x708>)
 80008f4:	4b3f      	ldr	r3, [pc, #252]	; (80009f4 <MGPIO_voidSetPinDrictionOutAf+0x708>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	79ba      	ldrb	r2, [r7, #6]
 80008fa:	2001      	movs	r0, #1
 80008fc:	fa00 f202 	lsl.w	r2, r0, r2
 8000900:	43d2      	mvns	r2, r2
 8000902:	4013      	ands	r3, r2
 8000904:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;	
 8000906:	e062      	b.n	80009ce <MGPIO_voidSetPinDrictionOutAf+0x6e2>
								SET_BIT(GPIOI_OTYPER, capy_u8PinId);
 8000908:	493a      	ldr	r1, [pc, #232]	; (80009f4 <MGPIO_voidSetPinDrictionOutAf+0x708>)
 800090a:	4b3a      	ldr	r3, [pc, #232]	; (80009f4 <MGPIO_voidSetPinDrictionOutAf+0x708>)
 800090c:	681b      	ldr	r3, [r3, #0]
 800090e:	79ba      	ldrb	r2, [r7, #6]
 8000910:	2001      	movs	r0, #1
 8000912:	fa00 f202 	lsl.w	r2, r0, r2
 8000916:	4313      	orrs	r3, r2
 8000918:	600b      	str	r3, [r1, #0]
		                break;	
 800091a:	e058      	b.n	80009ce <MGPIO_voidSetPinDrictionOutAf+0x6e2>

		case GPIO_PORTK:
		                if(capy_u8PinId<=15)
 800091c:	79bb      	ldrb	r3, [r7, #6]
 800091e:	2b0f      	cmp	r3, #15
 8000920:	d857      	bhi.n	80009d2 <MGPIO_voidSetPinDrictionOutAf+0x6e6>
						{   /*  the set pin mode   */
					        //clare the 2 bit has pin mode 
							GPIOK_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000922:	4935      	ldr	r1, [pc, #212]	; (80009f8 <MGPIO_voidSetPinDrictionOutAf+0x70c>)
 8000924:	4b34      	ldr	r3, [pc, #208]	; (80009f8 <MGPIO_voidSetPinDrictionOutAf+0x70c>)
 8000926:	681b      	ldr	r3, [r3, #0]
 8000928:	79ba      	ldrb	r2, [r7, #6]
 800092a:	0052      	lsls	r2, r2, #1
 800092c:	2003      	movs	r0, #3
 800092e:	fa00 f202 	lsl.w	r2, r0, r2
 8000932:	43d2      	mvns	r2, r2
 8000934:	4013      	ands	r3, r2
 8000936:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOK_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000938:	482f      	ldr	r0, [pc, #188]	; (80009f8 <MGPIO_voidSetPinDrictionOutAf+0x70c>)
 800093a:	4b2f      	ldr	r3, [pc, #188]	; (80009f8 <MGPIO_voidSetPinDrictionOutAf+0x70c>)
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	7979      	ldrb	r1, [r7, #5]
 8000940:	79ba      	ldrb	r2, [r7, #6]
 8000942:	0052      	lsls	r2, r2, #1
 8000944:	fa01 f202 	lsl.w	r2, r1, r2
 8000948:	4313      	orrs	r3, r2
 800094a:	6003      	str	r3, [r0, #0]
							
							/*  the set pin speed    */
							//clare the 2 bit has pin mode 
							GPIOK_OSPEEDR&=~((0b11)<<(capy_u8PinId * 2 ));
 800094c:	492b      	ldr	r1, [pc, #172]	; (80009fc <MGPIO_voidSetPinDrictionOutAf+0x710>)
 800094e:	4b2b      	ldr	r3, [pc, #172]	; (80009fc <MGPIO_voidSetPinDrictionOutAf+0x710>)
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	79ba      	ldrb	r2, [r7, #6]
 8000954:	0052      	lsls	r2, r2, #1
 8000956:	2003      	movs	r0, #3
 8000958:	fa00 f202 	lsl.w	r2, r0, r2
 800095c:	43d2      	mvns	r2, r2
 800095e:	4013      	ands	r3, r2
 8000960:	600b      	str	r3, [r1, #0]
							//set pin for mode 
							GPIOK_OSPEEDR|= ((Capy_u8speedmode)<<(capy_u8PinId * 2 ));
 8000962:	4826      	ldr	r0, [pc, #152]	; (80009fc <MGPIO_voidSetPinDrictionOutAf+0x710>)
 8000964:	4b25      	ldr	r3, [pc, #148]	; (80009fc <MGPIO_voidSetPinDrictionOutAf+0x710>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	7c39      	ldrb	r1, [r7, #16]
 800096a:	79ba      	ldrb	r2, [r7, #6]
 800096c:	0052      	lsls	r2, r2, #1
 800096e:	fa01 f202 	lsl.w	r2, r1, r2
 8000972:	4313      	orrs	r3, r2
 8000974:	6003      	str	r3, [r0, #0]
							
							/* set mode output */
							if(Capy_u8modeoutput == OUTPUT_PUSH_PULL )
 8000976:	793b      	ldrb	r3, [r7, #4]
 8000978:	2b00      	cmp	r3, #0
 800097a:	d10a      	bne.n	8000992 <MGPIO_voidSetPinDrictionOutAf+0x6a6>
							   {
								   CLR_BIT(GPIOK_OTYPER, capy_u8PinId);
 800097c:	4920      	ldr	r1, [pc, #128]	; (8000a00 <MGPIO_voidSetPinDrictionOutAf+0x714>)
 800097e:	4b20      	ldr	r3, [pc, #128]	; (8000a00 <MGPIO_voidSetPinDrictionOutAf+0x714>)
 8000980:	681b      	ldr	r3, [r3, #0]
 8000982:	79ba      	ldrb	r2, [r7, #6]
 8000984:	2001      	movs	r0, #1
 8000986:	fa00 f202 	lsl.w	r2, r0, r2
 800098a:	43d2      	mvns	r2, r2
 800098c:	4013      	ands	r3, r2
 800098e:	600b      	str	r3, [r1, #0]
						}
						else 
						{
							//#error ("return error the pin choise ");
						}
		                break;	
 8000990:	e01f      	b.n	80009d2 <MGPIO_voidSetPinDrictionOutAf+0x6e6>
								SET_BIT(GPIOK_OTYPER, capy_u8PinId);
 8000992:	491b      	ldr	r1, [pc, #108]	; (8000a00 <MGPIO_voidSetPinDrictionOutAf+0x714>)
 8000994:	4b1a      	ldr	r3, [pc, #104]	; (8000a00 <MGPIO_voidSetPinDrictionOutAf+0x714>)
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	79ba      	ldrb	r2, [r7, #6]
 800099a:	2001      	movs	r0, #1
 800099c:	fa00 f202 	lsl.w	r2, r0, r2
 80009a0:	4313      	orrs	r3, r2
 80009a2:	600b      	str	r3, [r1, #0]
		                break;	
 80009a4:	e015      	b.n	80009d2 <MGPIO_voidSetPinDrictionOutAf+0x6e6>
						
	    
		
	    default : break;
 80009a6:	bf00      	nop
 80009a8:	e014      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;
 80009aa:	bf00      	nop
 80009ac:	e012      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;
 80009ae:	bf00      	nop
 80009b0:	e010      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;
 80009b2:	bf00      	nop
 80009b4:	e00e      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;		
 80009b6:	bf00      	nop
 80009b8:	e00c      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;
 80009ba:	bf00      	nop
 80009bc:	e00a      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;				
 80009be:	bf00      	nop
 80009c0:	e008      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;
 80009c2:	bf00      	nop
 80009c4:	e006      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;	
 80009c6:	bf00      	nop
 80009c8:	e004      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;	
 80009ca:	bf00      	nop
 80009cc:	e002      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;	
 80009ce:	bf00      	nop
 80009d0:	e000      	b.n	80009d4 <MGPIO_voidSetPinDrictionOutAf+0x6e8>
		                break;	
 80009d2:	bf00      	nop
	}
	
}
 80009d4:	bf00      	nop
 80009d6:	3708      	adds	r7, #8
 80009d8:	46bd      	mov	sp, r7
 80009da:	bc90      	pop	{r4, r7}
 80009dc:	4770      	bx	lr
 80009de:	bf00      	nop
 80009e0:	40022400 	.word	0x40022400
 80009e4:	40022408 	.word	0x40022408
 80009e8:	40022404 	.word	0x40022404
 80009ec:	40022000 	.word	0x40022000
 80009f0:	40022008 	.word	0x40022008
 80009f4:	40022004 	.word	0x40022004
 80009f8:	40022800 	.word	0x40022800
 80009fc:	40022808 	.word	0x40022808
 8000a00:	40022804 	.word	0x40022804

08000a04 <MGPIO_voidSetPinDrictionMode>:



//the function set driction  mode pin
void MGPIO_voidSetPinDrictionMode( u8 capy_u8Port ,u8 capy_u8PinId,u8 Capy_u8modePin)
{
 8000a04:	b480      	push	{r7}
 8000a06:	b083      	sub	sp, #12
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	71fb      	strb	r3, [r7, #7]
 8000a0e:	460b      	mov	r3, r1
 8000a10:	71bb      	strb	r3, [r7, #6]
 8000a12:	4613      	mov	r3, r2
 8000a14:	717b      	strb	r3, [r7, #5]
	if(capy_u8PinId<=15)
 8000a16:	79bb      	ldrb	r3, [r7, #6]
 8000a18:	2b0f      	cmp	r3, #15
 8000a1a:	f200 8110 	bhi.w	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
	{
		switch(capy_u8Port)
 8000a1e:	79fb      	ldrb	r3, [r7, #7]
 8000a20:	2b0a      	cmp	r3, #10
 8000a22:	f200 810b 	bhi.w	8000c3c <MGPIO_voidSetPinDrictionMode+0x238>
 8000a26:	a201      	add	r2, pc, #4	; (adr r2, 8000a2c <MGPIO_voidSetPinDrictionMode+0x28>)
 8000a28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a2c:	08000a59 	.word	0x08000a59
 8000a30:	08000a85 	.word	0x08000a85
 8000a34:	08000ab1 	.word	0x08000ab1
 8000a38:	08000add 	.word	0x08000add
 8000a3c:	08000b35 	.word	0x08000b35
 8000a40:	08000b09 	.word	0x08000b09
 8000a44:	08000b61 	.word	0x08000b61
 8000a48:	08000b8d 	.word	0x08000b8d
 8000a4c:	08000bb9 	.word	0x08000bb9
 8000a50:	08000be5 	.word	0x08000be5
 8000a54:	08000c11 	.word	0x08000c11
		{
			case GPIO_PORTA :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOA_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000a58:	497c      	ldr	r1, [pc, #496]	; (8000c4c <MGPIO_voidSetPinDrictionMode+0x248>)
 8000a5a:	4b7c      	ldr	r3, [pc, #496]	; (8000c4c <MGPIO_voidSetPinDrictionMode+0x248>)
 8000a5c:	681b      	ldr	r3, [r3, #0]
 8000a5e:	79ba      	ldrb	r2, [r7, #6]
 8000a60:	0052      	lsls	r2, r2, #1
 8000a62:	2003      	movs	r0, #3
 8000a64:	fa00 f202 	lsl.w	r2, r0, r2
 8000a68:	43d2      	mvns	r2, r2
 8000a6a:	4013      	ands	r3, r2
 8000a6c:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOA_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000a6e:	4877      	ldr	r0, [pc, #476]	; (8000c4c <MGPIO_voidSetPinDrictionMode+0x248>)
 8000a70:	4b76      	ldr	r3, [pc, #472]	; (8000c4c <MGPIO_voidSetPinDrictionMode+0x248>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	7979      	ldrb	r1, [r7, #5]
 8000a76:	79ba      	ldrb	r2, [r7, #6]
 8000a78:	0052      	lsls	r2, r2, #1
 8000a7a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a7e:	4313      	orrs	r3, r2
 8000a80:	6003      	str	r3, [r0, #0]
			}
			break;
 8000a82:	e0dc      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
        	case GPIO_PORTB :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOB_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000a84:	4972      	ldr	r1, [pc, #456]	; (8000c50 <MGPIO_voidSetPinDrictionMode+0x24c>)
 8000a86:	4b72      	ldr	r3, [pc, #456]	; (8000c50 <MGPIO_voidSetPinDrictionMode+0x24c>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	79ba      	ldrb	r2, [r7, #6]
 8000a8c:	0052      	lsls	r2, r2, #1
 8000a8e:	2003      	movs	r0, #3
 8000a90:	fa00 f202 	lsl.w	r2, r0, r2
 8000a94:	43d2      	mvns	r2, r2
 8000a96:	4013      	ands	r3, r2
 8000a98:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOB_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000a9a:	486d      	ldr	r0, [pc, #436]	; (8000c50 <MGPIO_voidSetPinDrictionMode+0x24c>)
 8000a9c:	4b6c      	ldr	r3, [pc, #432]	; (8000c50 <MGPIO_voidSetPinDrictionMode+0x24c>)
 8000a9e:	681b      	ldr	r3, [r3, #0]
 8000aa0:	7979      	ldrb	r1, [r7, #5]
 8000aa2:	79ba      	ldrb	r2, [r7, #6]
 8000aa4:	0052      	lsls	r2, r2, #1
 8000aa6:	fa01 f202 	lsl.w	r2, r1, r2
 8000aaa:	4313      	orrs	r3, r2
 8000aac:	6003      	str	r3, [r0, #0]
			}
			break;
 8000aae:	e0c6      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTC :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOC_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000ab0:	4968      	ldr	r1, [pc, #416]	; (8000c54 <MGPIO_voidSetPinDrictionMode+0x250>)
 8000ab2:	4b68      	ldr	r3, [pc, #416]	; (8000c54 <MGPIO_voidSetPinDrictionMode+0x250>)
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	79ba      	ldrb	r2, [r7, #6]
 8000ab8:	0052      	lsls	r2, r2, #1
 8000aba:	2003      	movs	r0, #3
 8000abc:	fa00 f202 	lsl.w	r2, r0, r2
 8000ac0:	43d2      	mvns	r2, r2
 8000ac2:	4013      	ands	r3, r2
 8000ac4:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOC_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000ac6:	4863      	ldr	r0, [pc, #396]	; (8000c54 <MGPIO_voidSetPinDrictionMode+0x250>)
 8000ac8:	4b62      	ldr	r3, [pc, #392]	; (8000c54 <MGPIO_voidSetPinDrictionMode+0x250>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	7979      	ldrb	r1, [r7, #5]
 8000ace:	79ba      	ldrb	r2, [r7, #6]
 8000ad0:	0052      	lsls	r2, r2, #1
 8000ad2:	fa01 f202 	lsl.w	r2, r1, r2
 8000ad6:	4313      	orrs	r3, r2
 8000ad8:	6003      	str	r3, [r0, #0]
			}
			break;
 8000ada:	e0b0      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTD :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOD_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000adc:	495e      	ldr	r1, [pc, #376]	; (8000c58 <MGPIO_voidSetPinDrictionMode+0x254>)
 8000ade:	4b5e      	ldr	r3, [pc, #376]	; (8000c58 <MGPIO_voidSetPinDrictionMode+0x254>)
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	79ba      	ldrb	r2, [r7, #6]
 8000ae4:	0052      	lsls	r2, r2, #1
 8000ae6:	2003      	movs	r0, #3
 8000ae8:	fa00 f202 	lsl.w	r2, r0, r2
 8000aec:	43d2      	mvns	r2, r2
 8000aee:	4013      	ands	r3, r2
 8000af0:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOD_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000af2:	4859      	ldr	r0, [pc, #356]	; (8000c58 <MGPIO_voidSetPinDrictionMode+0x254>)
 8000af4:	4b58      	ldr	r3, [pc, #352]	; (8000c58 <MGPIO_voidSetPinDrictionMode+0x254>)
 8000af6:	681b      	ldr	r3, [r3, #0]
 8000af8:	7979      	ldrb	r1, [r7, #5]
 8000afa:	79ba      	ldrb	r2, [r7, #6]
 8000afc:	0052      	lsls	r2, r2, #1
 8000afe:	fa01 f202 	lsl.w	r2, r1, r2
 8000b02:	4313      	orrs	r3, r2
 8000b04:	6003      	str	r3, [r0, #0]
			}
			break;
 8000b06:	e09a      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTF :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOF_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000b08:	4954      	ldr	r1, [pc, #336]	; (8000c5c <MGPIO_voidSetPinDrictionMode+0x258>)
 8000b0a:	4b54      	ldr	r3, [pc, #336]	; (8000c5c <MGPIO_voidSetPinDrictionMode+0x258>)
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	79ba      	ldrb	r2, [r7, #6]
 8000b10:	0052      	lsls	r2, r2, #1
 8000b12:	2003      	movs	r0, #3
 8000b14:	fa00 f202 	lsl.w	r2, r0, r2
 8000b18:	43d2      	mvns	r2, r2
 8000b1a:	4013      	ands	r3, r2
 8000b1c:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOF_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000b1e:	484f      	ldr	r0, [pc, #316]	; (8000c5c <MGPIO_voidSetPinDrictionMode+0x258>)
 8000b20:	4b4e      	ldr	r3, [pc, #312]	; (8000c5c <MGPIO_voidSetPinDrictionMode+0x258>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	7979      	ldrb	r1, [r7, #5]
 8000b26:	79ba      	ldrb	r2, [r7, #6]
 8000b28:	0052      	lsls	r2, r2, #1
 8000b2a:	fa01 f202 	lsl.w	r2, r1, r2
 8000b2e:	4313      	orrs	r3, r2
 8000b30:	6003      	str	r3, [r0, #0]
			}
			break;
 8000b32:	e084      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTE :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOE_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000b34:	494a      	ldr	r1, [pc, #296]	; (8000c60 <MGPIO_voidSetPinDrictionMode+0x25c>)
 8000b36:	4b4a      	ldr	r3, [pc, #296]	; (8000c60 <MGPIO_voidSetPinDrictionMode+0x25c>)
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	79ba      	ldrb	r2, [r7, #6]
 8000b3c:	0052      	lsls	r2, r2, #1
 8000b3e:	2003      	movs	r0, #3
 8000b40:	fa00 f202 	lsl.w	r2, r0, r2
 8000b44:	43d2      	mvns	r2, r2
 8000b46:	4013      	ands	r3, r2
 8000b48:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOE_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000b4a:	4845      	ldr	r0, [pc, #276]	; (8000c60 <MGPIO_voidSetPinDrictionMode+0x25c>)
 8000b4c:	4b44      	ldr	r3, [pc, #272]	; (8000c60 <MGPIO_voidSetPinDrictionMode+0x25c>)
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	7979      	ldrb	r1, [r7, #5]
 8000b52:	79ba      	ldrb	r2, [r7, #6]
 8000b54:	0052      	lsls	r2, r2, #1
 8000b56:	fa01 f202 	lsl.w	r2, r1, r2
 8000b5a:	4313      	orrs	r3, r2
 8000b5c:	6003      	str	r3, [r0, #0]
			}
			break;
 8000b5e:	e06e      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTG :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOG_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000b60:	4940      	ldr	r1, [pc, #256]	; (8000c64 <MGPIO_voidSetPinDrictionMode+0x260>)
 8000b62:	4b40      	ldr	r3, [pc, #256]	; (8000c64 <MGPIO_voidSetPinDrictionMode+0x260>)
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	79ba      	ldrb	r2, [r7, #6]
 8000b68:	0052      	lsls	r2, r2, #1
 8000b6a:	2003      	movs	r0, #3
 8000b6c:	fa00 f202 	lsl.w	r2, r0, r2
 8000b70:	43d2      	mvns	r2, r2
 8000b72:	4013      	ands	r3, r2
 8000b74:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOG_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000b76:	483b      	ldr	r0, [pc, #236]	; (8000c64 <MGPIO_voidSetPinDrictionMode+0x260>)
 8000b78:	4b3a      	ldr	r3, [pc, #232]	; (8000c64 <MGPIO_voidSetPinDrictionMode+0x260>)
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	7979      	ldrb	r1, [r7, #5]
 8000b7e:	79ba      	ldrb	r2, [r7, #6]
 8000b80:	0052      	lsls	r2, r2, #1
 8000b82:	fa01 f202 	lsl.w	r2, r1, r2
 8000b86:	4313      	orrs	r3, r2
 8000b88:	6003      	str	r3, [r0, #0]
			}
			break;
 8000b8a:	e058      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTH :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOH_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000b8c:	4936      	ldr	r1, [pc, #216]	; (8000c68 <MGPIO_voidSetPinDrictionMode+0x264>)
 8000b8e:	4b36      	ldr	r3, [pc, #216]	; (8000c68 <MGPIO_voidSetPinDrictionMode+0x264>)
 8000b90:	681b      	ldr	r3, [r3, #0]
 8000b92:	79ba      	ldrb	r2, [r7, #6]
 8000b94:	0052      	lsls	r2, r2, #1
 8000b96:	2003      	movs	r0, #3
 8000b98:	fa00 f202 	lsl.w	r2, r0, r2
 8000b9c:	43d2      	mvns	r2, r2
 8000b9e:	4013      	ands	r3, r2
 8000ba0:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOH_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000ba2:	4831      	ldr	r0, [pc, #196]	; (8000c68 <MGPIO_voidSetPinDrictionMode+0x264>)
 8000ba4:	4b30      	ldr	r3, [pc, #192]	; (8000c68 <MGPIO_voidSetPinDrictionMode+0x264>)
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	7979      	ldrb	r1, [r7, #5]
 8000baa:	79ba      	ldrb	r2, [r7, #6]
 8000bac:	0052      	lsls	r2, r2, #1
 8000bae:	fa01 f202 	lsl.w	r2, r1, r2
 8000bb2:	4313      	orrs	r3, r2
 8000bb4:	6003      	str	r3, [r0, #0]
			}
			break;
 8000bb6:	e042      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTI :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOI_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000bb8:	492c      	ldr	r1, [pc, #176]	; (8000c6c <MGPIO_voidSetPinDrictionMode+0x268>)
 8000bba:	4b2c      	ldr	r3, [pc, #176]	; (8000c6c <MGPIO_voidSetPinDrictionMode+0x268>)
 8000bbc:	681b      	ldr	r3, [r3, #0]
 8000bbe:	79ba      	ldrb	r2, [r7, #6]
 8000bc0:	0052      	lsls	r2, r2, #1
 8000bc2:	2003      	movs	r0, #3
 8000bc4:	fa00 f202 	lsl.w	r2, r0, r2
 8000bc8:	43d2      	mvns	r2, r2
 8000bca:	4013      	ands	r3, r2
 8000bcc:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOI_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000bce:	4827      	ldr	r0, [pc, #156]	; (8000c6c <MGPIO_voidSetPinDrictionMode+0x268>)
 8000bd0:	4b26      	ldr	r3, [pc, #152]	; (8000c6c <MGPIO_voidSetPinDrictionMode+0x268>)
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	7979      	ldrb	r1, [r7, #5]
 8000bd6:	79ba      	ldrb	r2, [r7, #6]
 8000bd8:	0052      	lsls	r2, r2, #1
 8000bda:	fa01 f202 	lsl.w	r2, r1, r2
 8000bde:	4313      	orrs	r3, r2
 8000be0:	6003      	str	r3, [r0, #0]
			}
			break;
 8000be2:	e02c      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTJ :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOJ_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000be4:	4922      	ldr	r1, [pc, #136]	; (8000c70 <MGPIO_voidSetPinDrictionMode+0x26c>)
 8000be6:	4b22      	ldr	r3, [pc, #136]	; (8000c70 <MGPIO_voidSetPinDrictionMode+0x26c>)
 8000be8:	681b      	ldr	r3, [r3, #0]
 8000bea:	79ba      	ldrb	r2, [r7, #6]
 8000bec:	0052      	lsls	r2, r2, #1
 8000bee:	2003      	movs	r0, #3
 8000bf0:	fa00 f202 	lsl.w	r2, r0, r2
 8000bf4:	43d2      	mvns	r2, r2
 8000bf6:	4013      	ands	r3, r2
 8000bf8:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOJ_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000bfa:	481d      	ldr	r0, [pc, #116]	; (8000c70 <MGPIO_voidSetPinDrictionMode+0x26c>)
 8000bfc:	4b1c      	ldr	r3, [pc, #112]	; (8000c70 <MGPIO_voidSetPinDrictionMode+0x26c>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	7979      	ldrb	r1, [r7, #5]
 8000c02:	79ba      	ldrb	r2, [r7, #6]
 8000c04:	0052      	lsls	r2, r2, #1
 8000c06:	fa01 f202 	lsl.w	r2, r1, r2
 8000c0a:	4313      	orrs	r3, r2
 8000c0c:	6003      	str	r3, [r0, #0]
			}
			break;
 8000c0e:	e016      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
			case GPIO_PORTK :
			{
			   /*  the set pin mode   */
			   //clare the 2 bit has pin mode 
			   GPIOK_MODER&=~((0b11)<<(capy_u8PinId * 2 ));
 8000c10:	4918      	ldr	r1, [pc, #96]	; (8000c74 <MGPIO_voidSetPinDrictionMode+0x270>)
 8000c12:	4b18      	ldr	r3, [pc, #96]	; (8000c74 <MGPIO_voidSetPinDrictionMode+0x270>)
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	79ba      	ldrb	r2, [r7, #6]
 8000c18:	0052      	lsls	r2, r2, #1
 8000c1a:	2003      	movs	r0, #3
 8000c1c:	fa00 f202 	lsl.w	r2, r0, r2
 8000c20:	43d2      	mvns	r2, r2
 8000c22:	4013      	ands	r3, r2
 8000c24:	600b      	str	r3, [r1, #0]
				//set pin for mode 
				GPIOK_MODER|= ((Capy_u8modePin)<<(capy_u8PinId * 2 ));
 8000c26:	4813      	ldr	r0, [pc, #76]	; (8000c74 <MGPIO_voidSetPinDrictionMode+0x270>)
 8000c28:	4b12      	ldr	r3, [pc, #72]	; (8000c74 <MGPIO_voidSetPinDrictionMode+0x270>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	7979      	ldrb	r1, [r7, #5]
 8000c2e:	79ba      	ldrb	r2, [r7, #6]
 8000c30:	0052      	lsls	r2, r2, #1
 8000c32:	fa01 f202 	lsl.w	r2, r1, r2
 8000c36:	4313      	orrs	r3, r2
 8000c38:	6003      	str	r3, [r0, #0]
			}
			break;
 8000c3a:	e000      	b.n	8000c3e <MGPIO_voidSetPinDrictionMode+0x23a>
		    default :  break;
 8000c3c:	bf00      	nop
	}
	else 
	{
		//returen error 
	}
}
 8000c3e:	bf00      	nop
 8000c40:	370c      	adds	r7, #12
 8000c42:	46bd      	mov	sp, r7
 8000c44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c48:	4770      	bx	lr
 8000c4a:	bf00      	nop
 8000c4c:	40020000 	.word	0x40020000
 8000c50:	40020400 	.word	0x40020400
 8000c54:	40020800 	.word	0x40020800
 8000c58:	40020c00 	.word	0x40020c00
 8000c5c:	40021400 	.word	0x40021400
 8000c60:	40021000 	.word	0x40021000
 8000c64:	40021800 	.word	0x40021800
 8000c68:	40021c00 	.word	0x40021c00
 8000c6c:	40022000 	.word	0x40022000
 8000c70:	40022400 	.word	0x40022400
 8000c74:	40022800 	.word	0x40022800

08000c78 <MGPIO_voidActivePullUpPullDown>:
/* the function to active PULL UP and PULL down OR not at  pin */
void MGPIO_voidActivePullUpPullDown( u8 capy_u8Port ,u8 capy_u8PinId,u8 Capy_u8pullup_down_floating)
{
 8000c78:	b480      	push	{r7}
 8000c7a:	b083      	sub	sp, #12
 8000c7c:	af00      	add	r7, sp, #0
 8000c7e:	4603      	mov	r3, r0
 8000c80:	71fb      	strb	r3, [r7, #7]
 8000c82:	460b      	mov	r3, r1
 8000c84:	71bb      	strb	r3, [r7, #6]
 8000c86:	4613      	mov	r3, r2
 8000c88:	717b      	strb	r3, [r7, #5]
	if( capy_u8PinId <=15)
 8000c8a:	79bb      	ldrb	r3, [r7, #6]
 8000c8c:	2b0f      	cmp	r3, #15
 8000c8e:	f200 8110 	bhi.w	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
		{switch (capy_u8Port)
 8000c92:	79fb      	ldrb	r3, [r7, #7]
 8000c94:	2b0a      	cmp	r3, #10
 8000c96:	f200 810b 	bhi.w	8000eb0 <MGPIO_voidActivePullUpPullDown+0x238>
 8000c9a:	a201      	add	r2, pc, #4	; (adr r2, 8000ca0 <MGPIO_voidActivePullUpPullDown+0x28>)
 8000c9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ca0:	08000ccd 	.word	0x08000ccd
 8000ca4:	08000d25 	.word	0x08000d25
 8000ca8:	08000cf9 	.word	0x08000cf9
 8000cac:	08000d51 	.word	0x08000d51
 8000cb0:	08000da9 	.word	0x08000da9
 8000cb4:	08000d7d 	.word	0x08000d7d
 8000cb8:	08000dd5 	.word	0x08000dd5
 8000cbc:	08000e01 	.word	0x08000e01
 8000cc0:	08000e59 	.word	0x08000e59
 8000cc4:	08000e2d 	.word	0x08000e2d
 8000cc8:	08000e85 	.word	0x08000e85
		 {
			case GPIO_PORTA:
			{               //clare the 2 bit has pin mode
			                GPIOA_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000ccc:	497c      	ldr	r1, [pc, #496]	; (8000ec0 <MGPIO_voidActivePullUpPullDown+0x248>)
 8000cce:	4b7c      	ldr	r3, [pc, #496]	; (8000ec0 <MGPIO_voidActivePullUpPullDown+0x248>)
 8000cd0:	681b      	ldr	r3, [r3, #0]
 8000cd2:	79ba      	ldrb	r2, [r7, #6]
 8000cd4:	0052      	lsls	r2, r2, #1
 8000cd6:	2003      	movs	r0, #3
 8000cd8:	fa00 f202 	lsl.w	r2, r0, r2
 8000cdc:	43d2      	mvns	r2, r2
 8000cde:	4013      	ands	r3, r2
 8000ce0:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOA_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000ce2:	4877      	ldr	r0, [pc, #476]	; (8000ec0 <MGPIO_voidActivePullUpPullDown+0x248>)
 8000ce4:	4b76      	ldr	r3, [pc, #472]	; (8000ec0 <MGPIO_voidActivePullUpPullDown+0x248>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	7979      	ldrb	r1, [r7, #5]
 8000cea:	79ba      	ldrb	r2, [r7, #6]
 8000cec:	0052      	lsls	r2, r2, #1
 8000cee:	fa01 f202 	lsl.w	r2, r1, r2
 8000cf2:	4313      	orrs	r3, r2
 8000cf4:	6003      	str	r3, [r0, #0]
			}break;
 8000cf6:	e0dc      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTC:
			{               //clare the 2 bit has pin mode
			                GPIOC_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000cf8:	4972      	ldr	r1, [pc, #456]	; (8000ec4 <MGPIO_voidActivePullUpPullDown+0x24c>)
 8000cfa:	4b72      	ldr	r3, [pc, #456]	; (8000ec4 <MGPIO_voidActivePullUpPullDown+0x24c>)
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	79ba      	ldrb	r2, [r7, #6]
 8000d00:	0052      	lsls	r2, r2, #1
 8000d02:	2003      	movs	r0, #3
 8000d04:	fa00 f202 	lsl.w	r2, r0, r2
 8000d08:	43d2      	mvns	r2, r2
 8000d0a:	4013      	ands	r3, r2
 8000d0c:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOC_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000d0e:	486d      	ldr	r0, [pc, #436]	; (8000ec4 <MGPIO_voidActivePullUpPullDown+0x24c>)
 8000d10:	4b6c      	ldr	r3, [pc, #432]	; (8000ec4 <MGPIO_voidActivePullUpPullDown+0x24c>)
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	7979      	ldrb	r1, [r7, #5]
 8000d16:	79ba      	ldrb	r2, [r7, #6]
 8000d18:	0052      	lsls	r2, r2, #1
 8000d1a:	fa01 f202 	lsl.w	r2, r1, r2
 8000d1e:	4313      	orrs	r3, r2
 8000d20:	6003      	str	r3, [r0, #0]
			} break;
 8000d22:	e0c6      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTB:
			{               //clare the 2 bit has pin mode
			                GPIOB_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000d24:	4968      	ldr	r1, [pc, #416]	; (8000ec8 <MGPIO_voidActivePullUpPullDown+0x250>)
 8000d26:	4b68      	ldr	r3, [pc, #416]	; (8000ec8 <MGPIO_voidActivePullUpPullDown+0x250>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	79ba      	ldrb	r2, [r7, #6]
 8000d2c:	0052      	lsls	r2, r2, #1
 8000d2e:	2003      	movs	r0, #3
 8000d30:	fa00 f202 	lsl.w	r2, r0, r2
 8000d34:	43d2      	mvns	r2, r2
 8000d36:	4013      	ands	r3, r2
 8000d38:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOB_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000d3a:	4863      	ldr	r0, [pc, #396]	; (8000ec8 <MGPIO_voidActivePullUpPullDown+0x250>)
 8000d3c:	4b62      	ldr	r3, [pc, #392]	; (8000ec8 <MGPIO_voidActivePullUpPullDown+0x250>)
 8000d3e:	681b      	ldr	r3, [r3, #0]
 8000d40:	7979      	ldrb	r1, [r7, #5]
 8000d42:	79ba      	ldrb	r2, [r7, #6]
 8000d44:	0052      	lsls	r2, r2, #1
 8000d46:	fa01 f202 	lsl.w	r2, r1, r2
 8000d4a:	4313      	orrs	r3, r2
 8000d4c:	6003      	str	r3, [r0, #0]
			}break;
 8000d4e:	e0b0      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTD:
			{               //clare the 2 bit has pin mode
			                GPIOD_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000d50:	495e      	ldr	r1, [pc, #376]	; (8000ecc <MGPIO_voidActivePullUpPullDown+0x254>)
 8000d52:	4b5e      	ldr	r3, [pc, #376]	; (8000ecc <MGPIO_voidActivePullUpPullDown+0x254>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	79ba      	ldrb	r2, [r7, #6]
 8000d58:	0052      	lsls	r2, r2, #1
 8000d5a:	2003      	movs	r0, #3
 8000d5c:	fa00 f202 	lsl.w	r2, r0, r2
 8000d60:	43d2      	mvns	r2, r2
 8000d62:	4013      	ands	r3, r2
 8000d64:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOD_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000d66:	4859      	ldr	r0, [pc, #356]	; (8000ecc <MGPIO_voidActivePullUpPullDown+0x254>)
 8000d68:	4b58      	ldr	r3, [pc, #352]	; (8000ecc <MGPIO_voidActivePullUpPullDown+0x254>)
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	7979      	ldrb	r1, [r7, #5]
 8000d6e:	79ba      	ldrb	r2, [r7, #6]
 8000d70:	0052      	lsls	r2, r2, #1
 8000d72:	fa01 f202 	lsl.w	r2, r1, r2
 8000d76:	4313      	orrs	r3, r2
 8000d78:	6003      	str	r3, [r0, #0]
			}break;
 8000d7a:	e09a      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTF:
			{               //clare the 2 bit has pin mode
			                GPIOF_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000d7c:	4954      	ldr	r1, [pc, #336]	; (8000ed0 <MGPIO_voidActivePullUpPullDown+0x258>)
 8000d7e:	4b54      	ldr	r3, [pc, #336]	; (8000ed0 <MGPIO_voidActivePullUpPullDown+0x258>)
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	79ba      	ldrb	r2, [r7, #6]
 8000d84:	0052      	lsls	r2, r2, #1
 8000d86:	2003      	movs	r0, #3
 8000d88:	fa00 f202 	lsl.w	r2, r0, r2
 8000d8c:	43d2      	mvns	r2, r2
 8000d8e:	4013      	ands	r3, r2
 8000d90:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOF_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000d92:	484f      	ldr	r0, [pc, #316]	; (8000ed0 <MGPIO_voidActivePullUpPullDown+0x258>)
 8000d94:	4b4e      	ldr	r3, [pc, #312]	; (8000ed0 <MGPIO_voidActivePullUpPullDown+0x258>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	7979      	ldrb	r1, [r7, #5]
 8000d9a:	79ba      	ldrb	r2, [r7, #6]
 8000d9c:	0052      	lsls	r2, r2, #1
 8000d9e:	fa01 f202 	lsl.w	r2, r1, r2
 8000da2:	4313      	orrs	r3, r2
 8000da4:	6003      	str	r3, [r0, #0]
			}break;
 8000da6:	e084      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTE:
			{               //clare the 2 bit has pin mode
			                GPIOE_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000da8:	494a      	ldr	r1, [pc, #296]	; (8000ed4 <MGPIO_voidActivePullUpPullDown+0x25c>)
 8000daa:	4b4a      	ldr	r3, [pc, #296]	; (8000ed4 <MGPIO_voidActivePullUpPullDown+0x25c>)
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	79ba      	ldrb	r2, [r7, #6]
 8000db0:	0052      	lsls	r2, r2, #1
 8000db2:	2003      	movs	r0, #3
 8000db4:	fa00 f202 	lsl.w	r2, r0, r2
 8000db8:	43d2      	mvns	r2, r2
 8000dba:	4013      	ands	r3, r2
 8000dbc:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOE_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000dbe:	4845      	ldr	r0, [pc, #276]	; (8000ed4 <MGPIO_voidActivePullUpPullDown+0x25c>)
 8000dc0:	4b44      	ldr	r3, [pc, #272]	; (8000ed4 <MGPIO_voidActivePullUpPullDown+0x25c>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	7979      	ldrb	r1, [r7, #5]
 8000dc6:	79ba      	ldrb	r2, [r7, #6]
 8000dc8:	0052      	lsls	r2, r2, #1
 8000dca:	fa01 f202 	lsl.w	r2, r1, r2
 8000dce:	4313      	orrs	r3, r2
 8000dd0:	6003      	str	r3, [r0, #0]
			}break;
 8000dd2:	e06e      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTG:
			{               //clare the 2 bit has pin mode
			                GPIOG_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000dd4:	4940      	ldr	r1, [pc, #256]	; (8000ed8 <MGPIO_voidActivePullUpPullDown+0x260>)
 8000dd6:	4b40      	ldr	r3, [pc, #256]	; (8000ed8 <MGPIO_voidActivePullUpPullDown+0x260>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	79ba      	ldrb	r2, [r7, #6]
 8000ddc:	0052      	lsls	r2, r2, #1
 8000dde:	2003      	movs	r0, #3
 8000de0:	fa00 f202 	lsl.w	r2, r0, r2
 8000de4:	43d2      	mvns	r2, r2
 8000de6:	4013      	ands	r3, r2
 8000de8:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOG_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000dea:	483b      	ldr	r0, [pc, #236]	; (8000ed8 <MGPIO_voidActivePullUpPullDown+0x260>)
 8000dec:	4b3a      	ldr	r3, [pc, #232]	; (8000ed8 <MGPIO_voidActivePullUpPullDown+0x260>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	7979      	ldrb	r1, [r7, #5]
 8000df2:	79ba      	ldrb	r2, [r7, #6]
 8000df4:	0052      	lsls	r2, r2, #1
 8000df6:	fa01 f202 	lsl.w	r2, r1, r2
 8000dfa:	4313      	orrs	r3, r2
 8000dfc:	6003      	str	r3, [r0, #0]
			}break;
 8000dfe:	e058      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTH:
			{               //clare the 2 bit has pin mode
			                GPIOH_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000e00:	4936      	ldr	r1, [pc, #216]	; (8000edc <MGPIO_voidActivePullUpPullDown+0x264>)
 8000e02:	4b36      	ldr	r3, [pc, #216]	; (8000edc <MGPIO_voidActivePullUpPullDown+0x264>)
 8000e04:	681b      	ldr	r3, [r3, #0]
 8000e06:	79ba      	ldrb	r2, [r7, #6]
 8000e08:	0052      	lsls	r2, r2, #1
 8000e0a:	2003      	movs	r0, #3
 8000e0c:	fa00 f202 	lsl.w	r2, r0, r2
 8000e10:	43d2      	mvns	r2, r2
 8000e12:	4013      	ands	r3, r2
 8000e14:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOH_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000e16:	4831      	ldr	r0, [pc, #196]	; (8000edc <MGPIO_voidActivePullUpPullDown+0x264>)
 8000e18:	4b30      	ldr	r3, [pc, #192]	; (8000edc <MGPIO_voidActivePullUpPullDown+0x264>)
 8000e1a:	681b      	ldr	r3, [r3, #0]
 8000e1c:	7979      	ldrb	r1, [r7, #5]
 8000e1e:	79ba      	ldrb	r2, [r7, #6]
 8000e20:	0052      	lsls	r2, r2, #1
 8000e22:	fa01 f202 	lsl.w	r2, r1, r2
 8000e26:	4313      	orrs	r3, r2
 8000e28:	6003      	str	r3, [r0, #0]
			}break;
 8000e2a:	e042      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTJ:
			{               //clare the 2 bit has pin mode
			                GPIOJ_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000e2c:	492c      	ldr	r1, [pc, #176]	; (8000ee0 <MGPIO_voidActivePullUpPullDown+0x268>)
 8000e2e:	4b2c      	ldr	r3, [pc, #176]	; (8000ee0 <MGPIO_voidActivePullUpPullDown+0x268>)
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	79ba      	ldrb	r2, [r7, #6]
 8000e34:	0052      	lsls	r2, r2, #1
 8000e36:	2003      	movs	r0, #3
 8000e38:	fa00 f202 	lsl.w	r2, r0, r2
 8000e3c:	43d2      	mvns	r2, r2
 8000e3e:	4013      	ands	r3, r2
 8000e40:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOJ_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000e42:	4827      	ldr	r0, [pc, #156]	; (8000ee0 <MGPIO_voidActivePullUpPullDown+0x268>)
 8000e44:	4b26      	ldr	r3, [pc, #152]	; (8000ee0 <MGPIO_voidActivePullUpPullDown+0x268>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	7979      	ldrb	r1, [r7, #5]
 8000e4a:	79ba      	ldrb	r2, [r7, #6]
 8000e4c:	0052      	lsls	r2, r2, #1
 8000e4e:	fa01 f202 	lsl.w	r2, r1, r2
 8000e52:	4313      	orrs	r3, r2
 8000e54:	6003      	str	r3, [r0, #0]
			}break;
 8000e56:	e02c      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTI:
			{               //clare the 2 bit has pin mode
			                GPIOI_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000e58:	4922      	ldr	r1, [pc, #136]	; (8000ee4 <MGPIO_voidActivePullUpPullDown+0x26c>)
 8000e5a:	4b22      	ldr	r3, [pc, #136]	; (8000ee4 <MGPIO_voidActivePullUpPullDown+0x26c>)
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	79ba      	ldrb	r2, [r7, #6]
 8000e60:	0052      	lsls	r2, r2, #1
 8000e62:	2003      	movs	r0, #3
 8000e64:	fa00 f202 	lsl.w	r2, r0, r2
 8000e68:	43d2      	mvns	r2, r2
 8000e6a:	4013      	ands	r3, r2
 8000e6c:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOI_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000e6e:	481d      	ldr	r0, [pc, #116]	; (8000ee4 <MGPIO_voidActivePullUpPullDown+0x26c>)
 8000e70:	4b1c      	ldr	r3, [pc, #112]	; (8000ee4 <MGPIO_voidActivePullUpPullDown+0x26c>)
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	7979      	ldrb	r1, [r7, #5]
 8000e76:	79ba      	ldrb	r2, [r7, #6]
 8000e78:	0052      	lsls	r2, r2, #1
 8000e7a:	fa01 f202 	lsl.w	r2, r1, r2
 8000e7e:	4313      	orrs	r3, r2
 8000e80:	6003      	str	r3, [r0, #0]
			}break;
 8000e82:	e016      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>
			case GPIO_PORTK:
			{               //clare the 2 bit has pin mode
			                GPIOK_PUPDR&=~((0b11)<<(capy_u8PinId * 2 ));
 8000e84:	4918      	ldr	r1, [pc, #96]	; (8000ee8 <MGPIO_voidActivePullUpPullDown+0x270>)
 8000e86:	4b18      	ldr	r3, [pc, #96]	; (8000ee8 <MGPIO_voidActivePullUpPullDown+0x270>)
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	79ba      	ldrb	r2, [r7, #6]
 8000e8c:	0052      	lsls	r2, r2, #1
 8000e8e:	2003      	movs	r0, #3
 8000e90:	fa00 f202 	lsl.w	r2, r0, r2
 8000e94:	43d2      	mvns	r2, r2
 8000e96:	4013      	ands	r3, r2
 8000e98:	600b      	str	r3, [r1, #0]
			                //set pin for mode
			                GPIOK_PUPDR|= ((Capy_u8pullup_down_floating)<<(capy_u8PinId * 2 ));
 8000e9a:	4813      	ldr	r0, [pc, #76]	; (8000ee8 <MGPIO_voidActivePullUpPullDown+0x270>)
 8000e9c:	4b12      	ldr	r3, [pc, #72]	; (8000ee8 <MGPIO_voidActivePullUpPullDown+0x270>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	7979      	ldrb	r1, [r7, #5]
 8000ea2:	79ba      	ldrb	r2, [r7, #6]
 8000ea4:	0052      	lsls	r2, r2, #1
 8000ea6:	fa01 f202 	lsl.w	r2, r1, r2
 8000eaa:	4313      	orrs	r3, r2
 8000eac:	6003      	str	r3, [r0, #0]
			}break;
 8000eae:	e000      	b.n	8000eb2 <MGPIO_voidActivePullUpPullDown+0x23a>

			default: break;
 8000eb0:	bf00      	nop
	}
    else
        {
    	  //return error
        }
}
 8000eb2:	bf00      	nop
 8000eb4:	370c      	adds	r7, #12
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop
 8000ec0:	4002000c 	.word	0x4002000c
 8000ec4:	4002080c 	.word	0x4002080c
 8000ec8:	4002040c 	.word	0x4002040c
 8000ecc:	40020c0c 	.word	0x40020c0c
 8000ed0:	4002140c 	.word	0x4002140c
 8000ed4:	4002100c 	.word	0x4002100c
 8000ed8:	4002180c 	.word	0x4002180c
 8000edc:	40021c0c 	.word	0x40021c0c
 8000ee0:	4002240c 	.word	0x4002240c
 8000ee4:	4002200c 	.word	0x4002200c
 8000ee8:	4002280c 	.word	0x4002280c

08000eec <MGPIO_voidSetPinValue>:

/* the funcation to set value pin */
void MGPIO_voidSetPinValue( u8 capy_u8Port ,u8 capy_u8PinId,u8 Capy_u8ValuePin)
{   
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	4603      	mov	r3, r0
 8000ef4:	71fb      	strb	r3, [r7, #7]
 8000ef6:	460b      	mov	r3, r1
 8000ef8:	71bb      	strb	r3, [r7, #6]
 8000efa:	4613      	mov	r3, r2
 8000efc:	717b      	strb	r3, [r7, #5]
	switch (capy_u8Port)
 8000efe:	79fb      	ldrb	r3, [r7, #7]
 8000f00:	2b0a      	cmp	r3, #10
 8000f02:	f200 8149 	bhi.w	8001198 <MGPIO_voidSetPinValue+0x2ac>
 8000f06:	a201      	add	r2, pc, #4	; (adr r2, 8000f0c <MGPIO_voidSetPinValue+0x20>)
 8000f08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f0c:	08000f39 	.word	0x08000f39
 8000f10:	08000f71 	.word	0x08000f71
 8000f14:	08000fa9 	.word	0x08000fa9
 8000f18:	08000fe1 	.word	0x08000fe1
 8000f1c:	08001051 	.word	0x08001051
 8000f20:	08001019 	.word	0x08001019
 8000f24:	08001089 	.word	0x08001089
 8000f28:	080010c1 	.word	0x080010c1
 8000f2c:	080010f7 	.word	0x080010f7
 8000f30:	0800112d 	.word	0x0800112d
 8000f34:	08001163 	.word	0x08001163
	{
		case GPIO_PORTA:
		                if( Capy_u8ValuePin == HIGH)
 8000f38:	797b      	ldrb	r3, [r7, #5]
 8000f3a:	2b01      	cmp	r3, #1
 8000f3c:	d109      	bne.n	8000f52 <MGPIO_voidSetPinValue+0x66>
						{
							SET_BIT(GPIOA_ODR,capy_u8PinId);
 8000f3e:	49a1      	ldr	r1, [pc, #644]	; (80011c4 <MGPIO_voidSetPinValue+0x2d8>)
 8000f40:	4ba0      	ldr	r3, [pc, #640]	; (80011c4 <MGPIO_voidSetPinValue+0x2d8>)
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	79ba      	ldrb	r2, [r7, #6]
 8000f46:	2001      	movs	r0, #1
 8000f48:	fa00 f202 	lsl.w	r2, r0, r2
 8000f4c:	4313      	orrs	r3, r2
 8000f4e:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOA_ODR,capy_u8PinId);
						}
						break;
 8000f50:	e124      	b.n	800119c <MGPIO_voidSetPinValue+0x2b0>
						else if ( Capy_u8ValuePin ==LOW)
 8000f52:	797b      	ldrb	r3, [r7, #5]
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	f040 8121 	bne.w	800119c <MGPIO_voidSetPinValue+0x2b0>
						    CLR_BIT(GPIOA_ODR,capy_u8PinId);
 8000f5a:	499a      	ldr	r1, [pc, #616]	; (80011c4 <MGPIO_voidSetPinValue+0x2d8>)
 8000f5c:	4b99      	ldr	r3, [pc, #612]	; (80011c4 <MGPIO_voidSetPinValue+0x2d8>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	79ba      	ldrb	r2, [r7, #6]
 8000f62:	2001      	movs	r0, #1
 8000f64:	fa00 f202 	lsl.w	r2, r0, r2
 8000f68:	43d2      	mvns	r2, r2
 8000f6a:	4013      	ands	r3, r2
 8000f6c:	600b      	str	r3, [r1, #0]
						break;
 8000f6e:	e115      	b.n	800119c <MGPIO_voidSetPinValue+0x2b0>
		case GPIO_PORTB:
		                if( Capy_u8ValuePin == HIGH)
 8000f70:	797b      	ldrb	r3, [r7, #5]
 8000f72:	2b01      	cmp	r3, #1
 8000f74:	d109      	bne.n	8000f8a <MGPIO_voidSetPinValue+0x9e>
						{
							SET_BIT(GPIOB_ODR,capy_u8PinId);
 8000f76:	4994      	ldr	r1, [pc, #592]	; (80011c8 <MGPIO_voidSetPinValue+0x2dc>)
 8000f78:	4b93      	ldr	r3, [pc, #588]	; (80011c8 <MGPIO_voidSetPinValue+0x2dc>)
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	79ba      	ldrb	r2, [r7, #6]
 8000f7e:	2001      	movs	r0, #1
 8000f80:	fa00 f202 	lsl.w	r2, r0, r2
 8000f84:	4313      	orrs	r3, r2
 8000f86:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOB_ODR,capy_u8PinId);
						}
						break;
 8000f88:	e10a      	b.n	80011a0 <MGPIO_voidSetPinValue+0x2b4>
						else if ( Capy_u8ValuePin ==LOW)
 8000f8a:	797b      	ldrb	r3, [r7, #5]
 8000f8c:	2b00      	cmp	r3, #0
 8000f8e:	f040 8107 	bne.w	80011a0 <MGPIO_voidSetPinValue+0x2b4>
						    CLR_BIT(GPIOB_ODR,capy_u8PinId);
 8000f92:	498d      	ldr	r1, [pc, #564]	; (80011c8 <MGPIO_voidSetPinValue+0x2dc>)
 8000f94:	4b8c      	ldr	r3, [pc, #560]	; (80011c8 <MGPIO_voidSetPinValue+0x2dc>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	79ba      	ldrb	r2, [r7, #6]
 8000f9a:	2001      	movs	r0, #1
 8000f9c:	fa00 f202 	lsl.w	r2, r0, r2
 8000fa0:	43d2      	mvns	r2, r2
 8000fa2:	4013      	ands	r3, r2
 8000fa4:	600b      	str	r3, [r1, #0]
						break;
 8000fa6:	e0fb      	b.n	80011a0 <MGPIO_voidSetPinValue+0x2b4>
		case GPIO_PORTC:
		                if( Capy_u8ValuePin == HIGH)
 8000fa8:	797b      	ldrb	r3, [r7, #5]
 8000faa:	2b01      	cmp	r3, #1
 8000fac:	d109      	bne.n	8000fc2 <MGPIO_voidSetPinValue+0xd6>
						{
							SET_BIT(GPIOC_ODR,capy_u8PinId);
 8000fae:	4987      	ldr	r1, [pc, #540]	; (80011cc <MGPIO_voidSetPinValue+0x2e0>)
 8000fb0:	4b86      	ldr	r3, [pc, #536]	; (80011cc <MGPIO_voidSetPinValue+0x2e0>)
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	79ba      	ldrb	r2, [r7, #6]
 8000fb6:	2001      	movs	r0, #1
 8000fb8:	fa00 f202 	lsl.w	r2, r0, r2
 8000fbc:	4313      	orrs	r3, r2
 8000fbe:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOC_ODR,capy_u8PinId);
						}
						break;
 8000fc0:	e0f0      	b.n	80011a4 <MGPIO_voidSetPinValue+0x2b8>
						else if ( Capy_u8ValuePin ==LOW)
 8000fc2:	797b      	ldrb	r3, [r7, #5]
 8000fc4:	2b00      	cmp	r3, #0
 8000fc6:	f040 80ed 	bne.w	80011a4 <MGPIO_voidSetPinValue+0x2b8>
						    CLR_BIT(GPIOC_ODR,capy_u8PinId);
 8000fca:	4980      	ldr	r1, [pc, #512]	; (80011cc <MGPIO_voidSetPinValue+0x2e0>)
 8000fcc:	4b7f      	ldr	r3, [pc, #508]	; (80011cc <MGPIO_voidSetPinValue+0x2e0>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	79ba      	ldrb	r2, [r7, #6]
 8000fd2:	2001      	movs	r0, #1
 8000fd4:	fa00 f202 	lsl.w	r2, r0, r2
 8000fd8:	43d2      	mvns	r2, r2
 8000fda:	4013      	ands	r3, r2
 8000fdc:	600b      	str	r3, [r1, #0]
						break;
 8000fde:	e0e1      	b.n	80011a4 <MGPIO_voidSetPinValue+0x2b8>
		case GPIO_PORTD:
		                if( Capy_u8ValuePin == HIGH)
 8000fe0:	797b      	ldrb	r3, [r7, #5]
 8000fe2:	2b01      	cmp	r3, #1
 8000fe4:	d109      	bne.n	8000ffa <MGPIO_voidSetPinValue+0x10e>
						{
							SET_BIT(GPIOD_ODR,capy_u8PinId);
 8000fe6:	497a      	ldr	r1, [pc, #488]	; (80011d0 <MGPIO_voidSetPinValue+0x2e4>)
 8000fe8:	4b79      	ldr	r3, [pc, #484]	; (80011d0 <MGPIO_voidSetPinValue+0x2e4>)
 8000fea:	681b      	ldr	r3, [r3, #0]
 8000fec:	79ba      	ldrb	r2, [r7, #6]
 8000fee:	2001      	movs	r0, #1
 8000ff0:	fa00 f202 	lsl.w	r2, r0, r2
 8000ff4:	4313      	orrs	r3, r2
 8000ff6:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOD_ODR,capy_u8PinId);
						}
						break;
 8000ff8:	e0d6      	b.n	80011a8 <MGPIO_voidSetPinValue+0x2bc>
						else if ( Capy_u8ValuePin ==LOW)
 8000ffa:	797b      	ldrb	r3, [r7, #5]
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	f040 80d3 	bne.w	80011a8 <MGPIO_voidSetPinValue+0x2bc>
						    CLR_BIT(GPIOD_ODR,capy_u8PinId);
 8001002:	4973      	ldr	r1, [pc, #460]	; (80011d0 <MGPIO_voidSetPinValue+0x2e4>)
 8001004:	4b72      	ldr	r3, [pc, #456]	; (80011d0 <MGPIO_voidSetPinValue+0x2e4>)
 8001006:	681b      	ldr	r3, [r3, #0]
 8001008:	79ba      	ldrb	r2, [r7, #6]
 800100a:	2001      	movs	r0, #1
 800100c:	fa00 f202 	lsl.w	r2, r0, r2
 8001010:	43d2      	mvns	r2, r2
 8001012:	4013      	ands	r3, r2
 8001014:	600b      	str	r3, [r1, #0]
						break;
 8001016:	e0c7      	b.n	80011a8 <MGPIO_voidSetPinValue+0x2bc>
		case GPIO_PORTF:
		                if( Capy_u8ValuePin == HIGH)
 8001018:	797b      	ldrb	r3, [r7, #5]
 800101a:	2b01      	cmp	r3, #1
 800101c:	d109      	bne.n	8001032 <MGPIO_voidSetPinValue+0x146>
						{
							SET_BIT(GPIOF_ODR,capy_u8PinId);
 800101e:	496d      	ldr	r1, [pc, #436]	; (80011d4 <MGPIO_voidSetPinValue+0x2e8>)
 8001020:	4b6c      	ldr	r3, [pc, #432]	; (80011d4 <MGPIO_voidSetPinValue+0x2e8>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	79ba      	ldrb	r2, [r7, #6]
 8001026:	2001      	movs	r0, #1
 8001028:	fa00 f202 	lsl.w	r2, r0, r2
 800102c:	4313      	orrs	r3, r2
 800102e:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOF_ODR,capy_u8PinId);
						}
						break;
 8001030:	e0bc      	b.n	80011ac <MGPIO_voidSetPinValue+0x2c0>
						else if ( Capy_u8ValuePin ==LOW)
 8001032:	797b      	ldrb	r3, [r7, #5]
 8001034:	2b00      	cmp	r3, #0
 8001036:	f040 80b9 	bne.w	80011ac <MGPIO_voidSetPinValue+0x2c0>
						    CLR_BIT(GPIOF_ODR,capy_u8PinId);
 800103a:	4966      	ldr	r1, [pc, #408]	; (80011d4 <MGPIO_voidSetPinValue+0x2e8>)
 800103c:	4b65      	ldr	r3, [pc, #404]	; (80011d4 <MGPIO_voidSetPinValue+0x2e8>)
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	79ba      	ldrb	r2, [r7, #6]
 8001042:	2001      	movs	r0, #1
 8001044:	fa00 f202 	lsl.w	r2, r0, r2
 8001048:	43d2      	mvns	r2, r2
 800104a:	4013      	ands	r3, r2
 800104c:	600b      	str	r3, [r1, #0]
						break;
 800104e:	e0ad      	b.n	80011ac <MGPIO_voidSetPinValue+0x2c0>
		case GPIO_PORTE:
		                if( Capy_u8ValuePin == HIGH)
 8001050:	797b      	ldrb	r3, [r7, #5]
 8001052:	2b01      	cmp	r3, #1
 8001054:	d109      	bne.n	800106a <MGPIO_voidSetPinValue+0x17e>
						{
							SET_BIT(GPIOE_ODR,capy_u8PinId);
 8001056:	4960      	ldr	r1, [pc, #384]	; (80011d8 <MGPIO_voidSetPinValue+0x2ec>)
 8001058:	4b5f      	ldr	r3, [pc, #380]	; (80011d8 <MGPIO_voidSetPinValue+0x2ec>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	79ba      	ldrb	r2, [r7, #6]
 800105e:	2001      	movs	r0, #1
 8001060:	fa00 f202 	lsl.w	r2, r0, r2
 8001064:	4313      	orrs	r3, r2
 8001066:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOE_ODR,capy_u8PinId);
						}
						break;
 8001068:	e0a2      	b.n	80011b0 <MGPIO_voidSetPinValue+0x2c4>
						else if ( Capy_u8ValuePin ==LOW)
 800106a:	797b      	ldrb	r3, [r7, #5]
 800106c:	2b00      	cmp	r3, #0
 800106e:	f040 809f 	bne.w	80011b0 <MGPIO_voidSetPinValue+0x2c4>
						    CLR_BIT(GPIOE_ODR,capy_u8PinId);
 8001072:	4959      	ldr	r1, [pc, #356]	; (80011d8 <MGPIO_voidSetPinValue+0x2ec>)
 8001074:	4b58      	ldr	r3, [pc, #352]	; (80011d8 <MGPIO_voidSetPinValue+0x2ec>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	79ba      	ldrb	r2, [r7, #6]
 800107a:	2001      	movs	r0, #1
 800107c:	fa00 f202 	lsl.w	r2, r0, r2
 8001080:	43d2      	mvns	r2, r2
 8001082:	4013      	ands	r3, r2
 8001084:	600b      	str	r3, [r1, #0]
						break;
 8001086:	e093      	b.n	80011b0 <MGPIO_voidSetPinValue+0x2c4>
		case GPIO_PORTG:
		                if( Capy_u8ValuePin == HIGH)
 8001088:	797b      	ldrb	r3, [r7, #5]
 800108a:	2b01      	cmp	r3, #1
 800108c:	d109      	bne.n	80010a2 <MGPIO_voidSetPinValue+0x1b6>
						{
							SET_BIT(GPIOG_ODR,capy_u8PinId);
 800108e:	4953      	ldr	r1, [pc, #332]	; (80011dc <MGPIO_voidSetPinValue+0x2f0>)
 8001090:	4b52      	ldr	r3, [pc, #328]	; (80011dc <MGPIO_voidSetPinValue+0x2f0>)
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	79ba      	ldrb	r2, [r7, #6]
 8001096:	2001      	movs	r0, #1
 8001098:	fa00 f202 	lsl.w	r2, r0, r2
 800109c:	4313      	orrs	r3, r2
 800109e:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOG_ODR,capy_u8PinId);
						}
						break;
 80010a0:	e088      	b.n	80011b4 <MGPIO_voidSetPinValue+0x2c8>
						else if ( Capy_u8ValuePin ==LOW)
 80010a2:	797b      	ldrb	r3, [r7, #5]
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	f040 8085 	bne.w	80011b4 <MGPIO_voidSetPinValue+0x2c8>
						    CLR_BIT(GPIOG_ODR,capy_u8PinId);
 80010aa:	494c      	ldr	r1, [pc, #304]	; (80011dc <MGPIO_voidSetPinValue+0x2f0>)
 80010ac:	4b4b      	ldr	r3, [pc, #300]	; (80011dc <MGPIO_voidSetPinValue+0x2f0>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	79ba      	ldrb	r2, [r7, #6]
 80010b2:	2001      	movs	r0, #1
 80010b4:	fa00 f202 	lsl.w	r2, r0, r2
 80010b8:	43d2      	mvns	r2, r2
 80010ba:	4013      	ands	r3, r2
 80010bc:	600b      	str	r3, [r1, #0]
						break;
 80010be:	e079      	b.n	80011b4 <MGPIO_voidSetPinValue+0x2c8>
		case GPIO_PORTH:
		                if( Capy_u8ValuePin == HIGH)
 80010c0:	797b      	ldrb	r3, [r7, #5]
 80010c2:	2b01      	cmp	r3, #1
 80010c4:	d109      	bne.n	80010da <MGPIO_voidSetPinValue+0x1ee>
						{
							SET_BIT(GPIOH_ODR,capy_u8PinId);
 80010c6:	4946      	ldr	r1, [pc, #280]	; (80011e0 <MGPIO_voidSetPinValue+0x2f4>)
 80010c8:	4b45      	ldr	r3, [pc, #276]	; (80011e0 <MGPIO_voidSetPinValue+0x2f4>)
 80010ca:	681b      	ldr	r3, [r3, #0]
 80010cc:	79ba      	ldrb	r2, [r7, #6]
 80010ce:	2001      	movs	r0, #1
 80010d0:	fa00 f202 	lsl.w	r2, r0, r2
 80010d4:	4313      	orrs	r3, r2
 80010d6:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOH_ODR,capy_u8PinId);
						}
						break;
 80010d8:	e06e      	b.n	80011b8 <MGPIO_voidSetPinValue+0x2cc>
						else if ( Capy_u8ValuePin ==LOW)
 80010da:	797b      	ldrb	r3, [r7, #5]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d16b      	bne.n	80011b8 <MGPIO_voidSetPinValue+0x2cc>
						    CLR_BIT(GPIOH_ODR,capy_u8PinId);
 80010e0:	493f      	ldr	r1, [pc, #252]	; (80011e0 <MGPIO_voidSetPinValue+0x2f4>)
 80010e2:	4b3f      	ldr	r3, [pc, #252]	; (80011e0 <MGPIO_voidSetPinValue+0x2f4>)
 80010e4:	681b      	ldr	r3, [r3, #0]
 80010e6:	79ba      	ldrb	r2, [r7, #6]
 80010e8:	2001      	movs	r0, #1
 80010ea:	fa00 f202 	lsl.w	r2, r0, r2
 80010ee:	43d2      	mvns	r2, r2
 80010f0:	4013      	ands	r3, r2
 80010f2:	600b      	str	r3, [r1, #0]
						break;
 80010f4:	e060      	b.n	80011b8 <MGPIO_voidSetPinValue+0x2cc>
		case GPIO_PORTI:
		                if( Capy_u8ValuePin == HIGH)
 80010f6:	797b      	ldrb	r3, [r7, #5]
 80010f8:	2b01      	cmp	r3, #1
 80010fa:	d109      	bne.n	8001110 <MGPIO_voidSetPinValue+0x224>
						{
							SET_BIT(GPIOI_ODR,capy_u8PinId);
 80010fc:	4939      	ldr	r1, [pc, #228]	; (80011e4 <MGPIO_voidSetPinValue+0x2f8>)
 80010fe:	4b39      	ldr	r3, [pc, #228]	; (80011e4 <MGPIO_voidSetPinValue+0x2f8>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	79ba      	ldrb	r2, [r7, #6]
 8001104:	2001      	movs	r0, #1
 8001106:	fa00 f202 	lsl.w	r2, r0, r2
 800110a:	4313      	orrs	r3, r2
 800110c:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOI_ODR,capy_u8PinId);
						}
						break;
 800110e:	e055      	b.n	80011bc <MGPIO_voidSetPinValue+0x2d0>
						else if ( Capy_u8ValuePin ==LOW)
 8001110:	797b      	ldrb	r3, [r7, #5]
 8001112:	2b00      	cmp	r3, #0
 8001114:	d152      	bne.n	80011bc <MGPIO_voidSetPinValue+0x2d0>
						    CLR_BIT(GPIOI_ODR,capy_u8PinId);
 8001116:	4933      	ldr	r1, [pc, #204]	; (80011e4 <MGPIO_voidSetPinValue+0x2f8>)
 8001118:	4b32      	ldr	r3, [pc, #200]	; (80011e4 <MGPIO_voidSetPinValue+0x2f8>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	79ba      	ldrb	r2, [r7, #6]
 800111e:	2001      	movs	r0, #1
 8001120:	fa00 f202 	lsl.w	r2, r0, r2
 8001124:	43d2      	mvns	r2, r2
 8001126:	4013      	ands	r3, r2
 8001128:	600b      	str	r3, [r1, #0]
						break;
 800112a:	e047      	b.n	80011bc <MGPIO_voidSetPinValue+0x2d0>
		case GPIO_PORTJ:
		                if( Capy_u8ValuePin == HIGH)
 800112c:	797b      	ldrb	r3, [r7, #5]
 800112e:	2b01      	cmp	r3, #1
 8001130:	d109      	bne.n	8001146 <MGPIO_voidSetPinValue+0x25a>
						{
							SET_BIT(GPIOJ_ODR,capy_u8PinId);
 8001132:	492d      	ldr	r1, [pc, #180]	; (80011e8 <MGPIO_voidSetPinValue+0x2fc>)
 8001134:	4b2c      	ldr	r3, [pc, #176]	; (80011e8 <MGPIO_voidSetPinValue+0x2fc>)
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	79ba      	ldrb	r2, [r7, #6]
 800113a:	2001      	movs	r0, #1
 800113c:	fa00 f202 	lsl.w	r2, r0, r2
 8001140:	4313      	orrs	r3, r2
 8001142:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOJ_ODR,capy_u8PinId);
						}
						break;
 8001144:	e03c      	b.n	80011c0 <MGPIO_voidSetPinValue+0x2d4>
						else if ( Capy_u8ValuePin ==LOW)
 8001146:	797b      	ldrb	r3, [r7, #5]
 8001148:	2b00      	cmp	r3, #0
 800114a:	d139      	bne.n	80011c0 <MGPIO_voidSetPinValue+0x2d4>
						    CLR_BIT(GPIOJ_ODR,capy_u8PinId);
 800114c:	4926      	ldr	r1, [pc, #152]	; (80011e8 <MGPIO_voidSetPinValue+0x2fc>)
 800114e:	4b26      	ldr	r3, [pc, #152]	; (80011e8 <MGPIO_voidSetPinValue+0x2fc>)
 8001150:	681b      	ldr	r3, [r3, #0]
 8001152:	79ba      	ldrb	r2, [r7, #6]
 8001154:	2001      	movs	r0, #1
 8001156:	fa00 f202 	lsl.w	r2, r0, r2
 800115a:	43d2      	mvns	r2, r2
 800115c:	4013      	ands	r3, r2
 800115e:	600b      	str	r3, [r1, #0]
						break;
 8001160:	e02e      	b.n	80011c0 <MGPIO_voidSetPinValue+0x2d4>
		case GPIO_PORTK:
		                if( Capy_u8ValuePin == HIGH)
 8001162:	797b      	ldrb	r3, [r7, #5]
 8001164:	2b01      	cmp	r3, #1
 8001166:	d109      	bne.n	800117c <MGPIO_voidSetPinValue+0x290>
						{
							SET_BIT(GPIOK_ODR,capy_u8PinId);
 8001168:	4920      	ldr	r1, [pc, #128]	; (80011ec <MGPIO_voidSetPinValue+0x300>)
 800116a:	4b20      	ldr	r3, [pc, #128]	; (80011ec <MGPIO_voidSetPinValue+0x300>)
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	79ba      	ldrb	r2, [r7, #6]
 8001170:	2001      	movs	r0, #1
 8001172:	fa00 f202 	lsl.w	r2, r0, r2
 8001176:	4313      	orrs	r3, r2
 8001178:	600b      	str	r3, [r1, #0]
						}
						else if ( Capy_u8ValuePin ==LOW)
						{
						    CLR_BIT(GPIOK_ODR,capy_u8PinId);
						}
						break;
 800117a:	e039      	b.n	80011f0 <MGPIO_voidSetPinValue+0x304>
						else if ( Capy_u8ValuePin ==LOW)
 800117c:	797b      	ldrb	r3, [r7, #5]
 800117e:	2b00      	cmp	r3, #0
 8001180:	d136      	bne.n	80011f0 <MGPIO_voidSetPinValue+0x304>
						    CLR_BIT(GPIOK_ODR,capy_u8PinId);
 8001182:	491a      	ldr	r1, [pc, #104]	; (80011ec <MGPIO_voidSetPinValue+0x300>)
 8001184:	4b19      	ldr	r3, [pc, #100]	; (80011ec <MGPIO_voidSetPinValue+0x300>)
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	79ba      	ldrb	r2, [r7, #6]
 800118a:	2001      	movs	r0, #1
 800118c:	fa00 f202 	lsl.w	r2, r0, r2
 8001190:	43d2      	mvns	r2, r2
 8001192:	4013      	ands	r3, r2
 8001194:	600b      	str	r3, [r1, #0]
						break;
 8001196:	e02b      	b.n	80011f0 <MGPIO_voidSetPinValue+0x304>

		default: break; 
 8001198:	bf00      	nop
 800119a:	e02a      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 800119c:	bf00      	nop
 800119e:	e028      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011a0:	bf00      	nop
 80011a2:	e026      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011a4:	bf00      	nop
 80011a6:	e024      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011a8:	bf00      	nop
 80011aa:	e022      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011ac:	bf00      	nop
 80011ae:	e020      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011b0:	bf00      	nop
 80011b2:	e01e      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011b4:	bf00      	nop
 80011b6:	e01c      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011b8:	bf00      	nop
 80011ba:	e01a      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011bc:	bf00      	nop
 80011be:	e018      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
						break;
 80011c0:	bf00      	nop
 80011c2:	e016      	b.n	80011f2 <MGPIO_voidSetPinValue+0x306>
 80011c4:	40020014 	.word	0x40020014
 80011c8:	40020414 	.word	0x40020414
 80011cc:	40020814 	.word	0x40020814
 80011d0:	40020c14 	.word	0x40020c14
 80011d4:	40021414 	.word	0x40021414
 80011d8:	40021014 	.word	0x40021014
 80011dc:	40021814 	.word	0x40021814
 80011e0:	40021c14 	.word	0x40021c14
 80011e4:	40022014 	.word	0x40022014
 80011e8:	40022414 	.word	0x40022414
 80011ec:	40022814 	.word	0x40022814
						break;
 80011f0:	bf00      	nop
	}
}
 80011f2:	bf00      	nop
 80011f4:	370c      	adds	r7, #12
 80011f6:	46bd      	mov	sp, r7
 80011f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fc:	4770      	bx	lr
 80011fe:	bf00      	nop

08001200 <MGPIO_voidSetAfPeripier>:
    return local_return;	
}


void MGPIO_voidSetAfPeripier( u8 capy_u8Port ,u8 capy_u8PinId,u8 Capy_u8modeAFPin)
{
 8001200:	b480      	push	{r7}
 8001202:	b083      	sub	sp, #12
 8001204:	af00      	add	r7, sp, #0
 8001206:	4603      	mov	r3, r0
 8001208:	71fb      	strb	r3, [r7, #7]
 800120a:	460b      	mov	r3, r1
 800120c:	71bb      	strb	r3, [r7, #6]
 800120e:	4613      	mov	r3, r2
 8001210:	717b      	strb	r3, [r7, #5]
	
		{switch (capy_u8Port)
 8001212:	79fb      	ldrb	r3, [r7, #7]
 8001214:	2b0a      	cmp	r3, #10
 8001216:	f200 8281 	bhi.w	800171c <MGPIO_voidSetAfPeripier+0x51c>
 800121a:	a201      	add	r2, pc, #4	; (adr r2, 8001220 <MGPIO_voidSetAfPeripier+0x20>)
 800121c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001220:	0800124d 	.word	0x0800124d
 8001224:	08001325 	.word	0x08001325
 8001228:	080012b9 	.word	0x080012b9
 800122c:	08001391 	.word	0x08001391
 8001230:	08001469 	.word	0x08001469
 8001234:	080013fd 	.word	0x080013fd
 8001238:	08001505 	.word	0x08001505
 800123c:	08001571 	.word	0x08001571
 8001240:	08001649 	.word	0x08001649
 8001244:	080015dd 	.word	0x080015dd
 8001248:	080016b3 	.word	0x080016b3
		 {
			case GPIO_PORTA:
			{               if( capy_u8PinId <=7)
 800124c:	79bb      	ldrb	r3, [r7, #6]
 800124e:	2b07      	cmp	r3, #7
 8001250:	d815      	bhi.n	800127e <MGPIO_voidSetAfPeripier+0x7e>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOA_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001252:	49a0      	ldr	r1, [pc, #640]	; (80014d4 <MGPIO_voidSetAfPeripier+0x2d4>)
 8001254:	4b9f      	ldr	r3, [pc, #636]	; (80014d4 <MGPIO_voidSetAfPeripier+0x2d4>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	79ba      	ldrb	r2, [r7, #6]
 800125a:	0092      	lsls	r2, r2, #2
 800125c:	200f      	movs	r0, #15
 800125e:	fa00 f202 	lsl.w	r2, r0, r2
 8001262:	43d2      	mvns	r2, r2
 8001264:	4013      	ands	r3, r2
 8001266:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOA_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001268:	489a      	ldr	r0, [pc, #616]	; (80014d4 <MGPIO_voidSetAfPeripier+0x2d4>)
 800126a:	4b9a      	ldr	r3, [pc, #616]	; (80014d4 <MGPIO_voidSetAfPeripier+0x2d4>)
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	7979      	ldrb	r1, [r7, #5]
 8001270:	79ba      	ldrb	r2, [r7, #6]
 8001272:	0092      	lsls	r2, r2, #2
 8001274:	fa01 f202 	lsl.w	r2, r1, r2
 8001278:	4313      	orrs	r3, r2
 800127a:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOA_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOA_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 800127c:	e250      	b.n	8001720 <MGPIO_voidSetAfPeripier+0x520>
							else if (capy_u8PinId <=15)
 800127e:	79bb      	ldrb	r3, [r7, #6]
 8001280:	2b0f      	cmp	r3, #15
 8001282:	f200 824d 	bhi.w	8001720 <MGPIO_voidSetAfPeripier+0x520>
								 capy_u8PinId= (capy_u8PinId-8);
 8001286:	79bb      	ldrb	r3, [r7, #6]
 8001288:	3b08      	subs	r3, #8
 800128a:	71bb      	strb	r3, [r7, #6]
			                     GPIOA_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 800128c:	4992      	ldr	r1, [pc, #584]	; (80014d8 <MGPIO_voidSetAfPeripier+0x2d8>)
 800128e:	4b92      	ldr	r3, [pc, #584]	; (80014d8 <MGPIO_voidSetAfPeripier+0x2d8>)
 8001290:	681b      	ldr	r3, [r3, #0]
 8001292:	79ba      	ldrb	r2, [r7, #6]
 8001294:	0092      	lsls	r2, r2, #2
 8001296:	200f      	movs	r0, #15
 8001298:	fa00 f202 	lsl.w	r2, r0, r2
 800129c:	43d2      	mvns	r2, r2
 800129e:	4013      	ands	r3, r2
 80012a0:	600b      	str	r3, [r1, #0]
							     GPIOA_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80012a2:	488d      	ldr	r0, [pc, #564]	; (80014d8 <MGPIO_voidSetAfPeripier+0x2d8>)
 80012a4:	4b8c      	ldr	r3, [pc, #560]	; (80014d8 <MGPIO_voidSetAfPeripier+0x2d8>)
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	7979      	ldrb	r1, [r7, #5]
 80012aa:	79ba      	ldrb	r2, [r7, #6]
 80012ac:	0092      	lsls	r2, r2, #2
 80012ae:	fa01 f202 	lsl.w	r2, r1, r2
 80012b2:	4313      	orrs	r3, r2
 80012b4:	6003      	str	r3, [r0, #0]
			}break;
 80012b6:	e233      	b.n	8001720 <MGPIO_voidSetAfPeripier+0x520>
			case GPIO_PORTC:
			{               if( capy_u8PinId <=7)
 80012b8:	79bb      	ldrb	r3, [r7, #6]
 80012ba:	2b07      	cmp	r3, #7
 80012bc:	d815      	bhi.n	80012ea <MGPIO_voidSetAfPeripier+0xea>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOC_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 80012be:	4987      	ldr	r1, [pc, #540]	; (80014dc <MGPIO_voidSetAfPeripier+0x2dc>)
 80012c0:	4b86      	ldr	r3, [pc, #536]	; (80014dc <MGPIO_voidSetAfPeripier+0x2dc>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	79ba      	ldrb	r2, [r7, #6]
 80012c6:	0092      	lsls	r2, r2, #2
 80012c8:	200f      	movs	r0, #15
 80012ca:	fa00 f202 	lsl.w	r2, r0, r2
 80012ce:	43d2      	mvns	r2, r2
 80012d0:	4013      	ands	r3, r2
 80012d2:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOC_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80012d4:	4881      	ldr	r0, [pc, #516]	; (80014dc <MGPIO_voidSetAfPeripier+0x2dc>)
 80012d6:	4b81      	ldr	r3, [pc, #516]	; (80014dc <MGPIO_voidSetAfPeripier+0x2dc>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	7979      	ldrb	r1, [r7, #5]
 80012dc:	79ba      	ldrb	r2, [r7, #6]
 80012de:	0092      	lsls	r2, r2, #2
 80012e0:	fa01 f202 	lsl.w	r2, r1, r2
 80012e4:	4313      	orrs	r3, r2
 80012e6:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOC_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOC_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 80012e8:	e21c      	b.n	8001724 <MGPIO_voidSetAfPeripier+0x524>
							else if (capy_u8PinId <=15)
 80012ea:	79bb      	ldrb	r3, [r7, #6]
 80012ec:	2b0f      	cmp	r3, #15
 80012ee:	f200 8219 	bhi.w	8001724 <MGPIO_voidSetAfPeripier+0x524>
								 capy_u8PinId= (capy_u8PinId-8);
 80012f2:	79bb      	ldrb	r3, [r7, #6]
 80012f4:	3b08      	subs	r3, #8
 80012f6:	71bb      	strb	r3, [r7, #6]
			                     GPIOC_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 80012f8:	4979      	ldr	r1, [pc, #484]	; (80014e0 <MGPIO_voidSetAfPeripier+0x2e0>)
 80012fa:	4b79      	ldr	r3, [pc, #484]	; (80014e0 <MGPIO_voidSetAfPeripier+0x2e0>)
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	79ba      	ldrb	r2, [r7, #6]
 8001300:	0092      	lsls	r2, r2, #2
 8001302:	200f      	movs	r0, #15
 8001304:	fa00 f202 	lsl.w	r2, r0, r2
 8001308:	43d2      	mvns	r2, r2
 800130a:	4013      	ands	r3, r2
 800130c:	600b      	str	r3, [r1, #0]
							     GPIOC_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 800130e:	4874      	ldr	r0, [pc, #464]	; (80014e0 <MGPIO_voidSetAfPeripier+0x2e0>)
 8001310:	4b73      	ldr	r3, [pc, #460]	; (80014e0 <MGPIO_voidSetAfPeripier+0x2e0>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	7979      	ldrb	r1, [r7, #5]
 8001316:	79ba      	ldrb	r2, [r7, #6]
 8001318:	0092      	lsls	r2, r2, #2
 800131a:	fa01 f202 	lsl.w	r2, r1, r2
 800131e:	4313      	orrs	r3, r2
 8001320:	6003      	str	r3, [r0, #0]
			}break;
 8001322:	e1ff      	b.n	8001724 <MGPIO_voidSetAfPeripier+0x524>
			case GPIO_PORTB:
			{               if( capy_u8PinId <=7)
 8001324:	79bb      	ldrb	r3, [r7, #6]
 8001326:	2b07      	cmp	r3, #7
 8001328:	d815      	bhi.n	8001356 <MGPIO_voidSetAfPeripier+0x156>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOB_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 800132a:	496e      	ldr	r1, [pc, #440]	; (80014e4 <MGPIO_voidSetAfPeripier+0x2e4>)
 800132c:	4b6d      	ldr	r3, [pc, #436]	; (80014e4 <MGPIO_voidSetAfPeripier+0x2e4>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	79ba      	ldrb	r2, [r7, #6]
 8001332:	0092      	lsls	r2, r2, #2
 8001334:	200f      	movs	r0, #15
 8001336:	fa00 f202 	lsl.w	r2, r0, r2
 800133a:	43d2      	mvns	r2, r2
 800133c:	4013      	ands	r3, r2
 800133e:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOB_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001340:	4868      	ldr	r0, [pc, #416]	; (80014e4 <MGPIO_voidSetAfPeripier+0x2e4>)
 8001342:	4b68      	ldr	r3, [pc, #416]	; (80014e4 <MGPIO_voidSetAfPeripier+0x2e4>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	7979      	ldrb	r1, [r7, #5]
 8001348:	79ba      	ldrb	r2, [r7, #6]
 800134a:	0092      	lsls	r2, r2, #2
 800134c:	fa01 f202 	lsl.w	r2, r1, r2
 8001350:	4313      	orrs	r3, r2
 8001352:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOB_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOB_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 8001354:	e1e8      	b.n	8001728 <MGPIO_voidSetAfPeripier+0x528>
							else if (capy_u8PinId <=15)
 8001356:	79bb      	ldrb	r3, [r7, #6]
 8001358:	2b0f      	cmp	r3, #15
 800135a:	f200 81e5 	bhi.w	8001728 <MGPIO_voidSetAfPeripier+0x528>
								 capy_u8PinId= (capy_u8PinId-8);
 800135e:	79bb      	ldrb	r3, [r7, #6]
 8001360:	3b08      	subs	r3, #8
 8001362:	71bb      	strb	r3, [r7, #6]
			                     GPIOB_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001364:	4960      	ldr	r1, [pc, #384]	; (80014e8 <MGPIO_voidSetAfPeripier+0x2e8>)
 8001366:	4b60      	ldr	r3, [pc, #384]	; (80014e8 <MGPIO_voidSetAfPeripier+0x2e8>)
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	79ba      	ldrb	r2, [r7, #6]
 800136c:	0092      	lsls	r2, r2, #2
 800136e:	200f      	movs	r0, #15
 8001370:	fa00 f202 	lsl.w	r2, r0, r2
 8001374:	43d2      	mvns	r2, r2
 8001376:	4013      	ands	r3, r2
 8001378:	600b      	str	r3, [r1, #0]
							     GPIOB_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 800137a:	485b      	ldr	r0, [pc, #364]	; (80014e8 <MGPIO_voidSetAfPeripier+0x2e8>)
 800137c:	4b5a      	ldr	r3, [pc, #360]	; (80014e8 <MGPIO_voidSetAfPeripier+0x2e8>)
 800137e:	681b      	ldr	r3, [r3, #0]
 8001380:	7979      	ldrb	r1, [r7, #5]
 8001382:	79ba      	ldrb	r2, [r7, #6]
 8001384:	0092      	lsls	r2, r2, #2
 8001386:	fa01 f202 	lsl.w	r2, r1, r2
 800138a:	4313      	orrs	r3, r2
 800138c:	6003      	str	r3, [r0, #0]
			}break;
 800138e:	e1cb      	b.n	8001728 <MGPIO_voidSetAfPeripier+0x528>
			case GPIO_PORTD:
			{               if( capy_u8PinId <=7)
 8001390:	79bb      	ldrb	r3, [r7, #6]
 8001392:	2b07      	cmp	r3, #7
 8001394:	d815      	bhi.n	80013c2 <MGPIO_voidSetAfPeripier+0x1c2>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOD_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001396:	4955      	ldr	r1, [pc, #340]	; (80014ec <MGPIO_voidSetAfPeripier+0x2ec>)
 8001398:	4b54      	ldr	r3, [pc, #336]	; (80014ec <MGPIO_voidSetAfPeripier+0x2ec>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	79ba      	ldrb	r2, [r7, #6]
 800139e:	0092      	lsls	r2, r2, #2
 80013a0:	200f      	movs	r0, #15
 80013a2:	fa00 f202 	lsl.w	r2, r0, r2
 80013a6:	43d2      	mvns	r2, r2
 80013a8:	4013      	ands	r3, r2
 80013aa:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOD_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80013ac:	484f      	ldr	r0, [pc, #316]	; (80014ec <MGPIO_voidSetAfPeripier+0x2ec>)
 80013ae:	4b4f      	ldr	r3, [pc, #316]	; (80014ec <MGPIO_voidSetAfPeripier+0x2ec>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	7979      	ldrb	r1, [r7, #5]
 80013b4:	79ba      	ldrb	r2, [r7, #6]
 80013b6:	0092      	lsls	r2, r2, #2
 80013b8:	fa01 f202 	lsl.w	r2, r1, r2
 80013bc:	4313      	orrs	r3, r2
 80013be:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOD_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOD_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 80013c0:	e1b4      	b.n	800172c <MGPIO_voidSetAfPeripier+0x52c>
							else if (capy_u8PinId <=15)
 80013c2:	79bb      	ldrb	r3, [r7, #6]
 80013c4:	2b0f      	cmp	r3, #15
 80013c6:	f200 81b1 	bhi.w	800172c <MGPIO_voidSetAfPeripier+0x52c>
								 capy_u8PinId= (capy_u8PinId-8);
 80013ca:	79bb      	ldrb	r3, [r7, #6]
 80013cc:	3b08      	subs	r3, #8
 80013ce:	71bb      	strb	r3, [r7, #6]
			                     GPIOD_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 80013d0:	4947      	ldr	r1, [pc, #284]	; (80014f0 <MGPIO_voidSetAfPeripier+0x2f0>)
 80013d2:	4b47      	ldr	r3, [pc, #284]	; (80014f0 <MGPIO_voidSetAfPeripier+0x2f0>)
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	79ba      	ldrb	r2, [r7, #6]
 80013d8:	0092      	lsls	r2, r2, #2
 80013da:	200f      	movs	r0, #15
 80013dc:	fa00 f202 	lsl.w	r2, r0, r2
 80013e0:	43d2      	mvns	r2, r2
 80013e2:	4013      	ands	r3, r2
 80013e4:	600b      	str	r3, [r1, #0]
							     GPIOD_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80013e6:	4842      	ldr	r0, [pc, #264]	; (80014f0 <MGPIO_voidSetAfPeripier+0x2f0>)
 80013e8:	4b41      	ldr	r3, [pc, #260]	; (80014f0 <MGPIO_voidSetAfPeripier+0x2f0>)
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	7979      	ldrb	r1, [r7, #5]
 80013ee:	79ba      	ldrb	r2, [r7, #6]
 80013f0:	0092      	lsls	r2, r2, #2
 80013f2:	fa01 f202 	lsl.w	r2, r1, r2
 80013f6:	4313      	orrs	r3, r2
 80013f8:	6003      	str	r3, [r0, #0]
			}break;
 80013fa:	e197      	b.n	800172c <MGPIO_voidSetAfPeripier+0x52c>
			case GPIO_PORTF:
			{               if( capy_u8PinId <=7)
 80013fc:	79bb      	ldrb	r3, [r7, #6]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	d815      	bhi.n	800142e <MGPIO_voidSetAfPeripier+0x22e>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOF_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001402:	493c      	ldr	r1, [pc, #240]	; (80014f4 <MGPIO_voidSetAfPeripier+0x2f4>)
 8001404:	4b3b      	ldr	r3, [pc, #236]	; (80014f4 <MGPIO_voidSetAfPeripier+0x2f4>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	79ba      	ldrb	r2, [r7, #6]
 800140a:	0092      	lsls	r2, r2, #2
 800140c:	200f      	movs	r0, #15
 800140e:	fa00 f202 	lsl.w	r2, r0, r2
 8001412:	43d2      	mvns	r2, r2
 8001414:	4013      	ands	r3, r2
 8001416:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOF_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001418:	4836      	ldr	r0, [pc, #216]	; (80014f4 <MGPIO_voidSetAfPeripier+0x2f4>)
 800141a:	4b36      	ldr	r3, [pc, #216]	; (80014f4 <MGPIO_voidSetAfPeripier+0x2f4>)
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	7979      	ldrb	r1, [r7, #5]
 8001420:	79ba      	ldrb	r2, [r7, #6]
 8001422:	0092      	lsls	r2, r2, #2
 8001424:	fa01 f202 	lsl.w	r2, r1, r2
 8001428:	4313      	orrs	r3, r2
 800142a:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOF_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOF_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 800142c:	e180      	b.n	8001730 <MGPIO_voidSetAfPeripier+0x530>
							else if (capy_u8PinId <=15)
 800142e:	79bb      	ldrb	r3, [r7, #6]
 8001430:	2b0f      	cmp	r3, #15
 8001432:	f200 817d 	bhi.w	8001730 <MGPIO_voidSetAfPeripier+0x530>
								 capy_u8PinId= (capy_u8PinId-8);
 8001436:	79bb      	ldrb	r3, [r7, #6]
 8001438:	3b08      	subs	r3, #8
 800143a:	71bb      	strb	r3, [r7, #6]
			                     GPIOF_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 800143c:	492e      	ldr	r1, [pc, #184]	; (80014f8 <MGPIO_voidSetAfPeripier+0x2f8>)
 800143e:	4b2e      	ldr	r3, [pc, #184]	; (80014f8 <MGPIO_voidSetAfPeripier+0x2f8>)
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	79ba      	ldrb	r2, [r7, #6]
 8001444:	0092      	lsls	r2, r2, #2
 8001446:	200f      	movs	r0, #15
 8001448:	fa00 f202 	lsl.w	r2, r0, r2
 800144c:	43d2      	mvns	r2, r2
 800144e:	4013      	ands	r3, r2
 8001450:	600b      	str	r3, [r1, #0]
							     GPIOF_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001452:	4829      	ldr	r0, [pc, #164]	; (80014f8 <MGPIO_voidSetAfPeripier+0x2f8>)
 8001454:	4b28      	ldr	r3, [pc, #160]	; (80014f8 <MGPIO_voidSetAfPeripier+0x2f8>)
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	7979      	ldrb	r1, [r7, #5]
 800145a:	79ba      	ldrb	r2, [r7, #6]
 800145c:	0092      	lsls	r2, r2, #2
 800145e:	fa01 f202 	lsl.w	r2, r1, r2
 8001462:	4313      	orrs	r3, r2
 8001464:	6003      	str	r3, [r0, #0]
			}break;
 8001466:	e163      	b.n	8001730 <MGPIO_voidSetAfPeripier+0x530>
			case GPIO_PORTE:
			{               if( capy_u8PinId <=7)
 8001468:	79bb      	ldrb	r3, [r7, #6]
 800146a:	2b07      	cmp	r3, #7
 800146c:	d815      	bhi.n	800149a <MGPIO_voidSetAfPeripier+0x29a>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOE_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 800146e:	4923      	ldr	r1, [pc, #140]	; (80014fc <MGPIO_voidSetAfPeripier+0x2fc>)
 8001470:	4b22      	ldr	r3, [pc, #136]	; (80014fc <MGPIO_voidSetAfPeripier+0x2fc>)
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	79ba      	ldrb	r2, [r7, #6]
 8001476:	0092      	lsls	r2, r2, #2
 8001478:	200f      	movs	r0, #15
 800147a:	fa00 f202 	lsl.w	r2, r0, r2
 800147e:	43d2      	mvns	r2, r2
 8001480:	4013      	ands	r3, r2
 8001482:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOE_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001484:	481d      	ldr	r0, [pc, #116]	; (80014fc <MGPIO_voidSetAfPeripier+0x2fc>)
 8001486:	4b1d      	ldr	r3, [pc, #116]	; (80014fc <MGPIO_voidSetAfPeripier+0x2fc>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	7979      	ldrb	r1, [r7, #5]
 800148c:	79ba      	ldrb	r2, [r7, #6]
 800148e:	0092      	lsls	r2, r2, #2
 8001490:	fa01 f202 	lsl.w	r2, r1, r2
 8001494:	4313      	orrs	r3, r2
 8001496:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOE_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOE_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 8001498:	e14c      	b.n	8001734 <MGPIO_voidSetAfPeripier+0x534>
							else if (capy_u8PinId <=15)
 800149a:	79bb      	ldrb	r3, [r7, #6]
 800149c:	2b0f      	cmp	r3, #15
 800149e:	f200 8149 	bhi.w	8001734 <MGPIO_voidSetAfPeripier+0x534>
								 capy_u8PinId= (capy_u8PinId-8);
 80014a2:	79bb      	ldrb	r3, [r7, #6]
 80014a4:	3b08      	subs	r3, #8
 80014a6:	71bb      	strb	r3, [r7, #6]
			                     GPIOE_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 80014a8:	4915      	ldr	r1, [pc, #84]	; (8001500 <MGPIO_voidSetAfPeripier+0x300>)
 80014aa:	4b15      	ldr	r3, [pc, #84]	; (8001500 <MGPIO_voidSetAfPeripier+0x300>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	79ba      	ldrb	r2, [r7, #6]
 80014b0:	0092      	lsls	r2, r2, #2
 80014b2:	200f      	movs	r0, #15
 80014b4:	fa00 f202 	lsl.w	r2, r0, r2
 80014b8:	43d2      	mvns	r2, r2
 80014ba:	4013      	ands	r3, r2
 80014bc:	600b      	str	r3, [r1, #0]
							     GPIOE_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80014be:	4810      	ldr	r0, [pc, #64]	; (8001500 <MGPIO_voidSetAfPeripier+0x300>)
 80014c0:	4b0f      	ldr	r3, [pc, #60]	; (8001500 <MGPIO_voidSetAfPeripier+0x300>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	7979      	ldrb	r1, [r7, #5]
 80014c6:	79ba      	ldrb	r2, [r7, #6]
 80014c8:	0092      	lsls	r2, r2, #2
 80014ca:	fa01 f202 	lsl.w	r2, r1, r2
 80014ce:	4313      	orrs	r3, r2
 80014d0:	6003      	str	r3, [r0, #0]
			}break;
 80014d2:	e12f      	b.n	8001734 <MGPIO_voidSetAfPeripier+0x534>
 80014d4:	40020020 	.word	0x40020020
 80014d8:	40020024 	.word	0x40020024
 80014dc:	40020820 	.word	0x40020820
 80014e0:	40020824 	.word	0x40020824
 80014e4:	40020420 	.word	0x40020420
 80014e8:	40020424 	.word	0x40020424
 80014ec:	40020c20 	.word	0x40020c20
 80014f0:	40020c24 	.word	0x40020c24
 80014f4:	40021420 	.word	0x40021420
 80014f8:	40021424 	.word	0x40021424
 80014fc:	40021020 	.word	0x40021020
 8001500:	40021024 	.word	0x40021024
			case GPIO_PORTG:
			{               if( capy_u8PinId <=7)
 8001504:	79bb      	ldrb	r3, [r7, #6]
 8001506:	2b07      	cmp	r3, #7
 8001508:	d815      	bhi.n	8001536 <MGPIO_voidSetAfPeripier+0x336>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOG_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 800150a:	4993      	ldr	r1, [pc, #588]	; (8001758 <MGPIO_voidSetAfPeripier+0x558>)
 800150c:	4b92      	ldr	r3, [pc, #584]	; (8001758 <MGPIO_voidSetAfPeripier+0x558>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	79ba      	ldrb	r2, [r7, #6]
 8001512:	0092      	lsls	r2, r2, #2
 8001514:	200f      	movs	r0, #15
 8001516:	fa00 f202 	lsl.w	r2, r0, r2
 800151a:	43d2      	mvns	r2, r2
 800151c:	4013      	ands	r3, r2
 800151e:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOG_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001520:	488d      	ldr	r0, [pc, #564]	; (8001758 <MGPIO_voidSetAfPeripier+0x558>)
 8001522:	4b8d      	ldr	r3, [pc, #564]	; (8001758 <MGPIO_voidSetAfPeripier+0x558>)
 8001524:	681b      	ldr	r3, [r3, #0]
 8001526:	7979      	ldrb	r1, [r7, #5]
 8001528:	79ba      	ldrb	r2, [r7, #6]
 800152a:	0092      	lsls	r2, r2, #2
 800152c:	fa01 f202 	lsl.w	r2, r1, r2
 8001530:	4313      	orrs	r3, r2
 8001532:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOG_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOG_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 8001534:	e100      	b.n	8001738 <MGPIO_voidSetAfPeripier+0x538>
							else if (capy_u8PinId <=15)
 8001536:	79bb      	ldrb	r3, [r7, #6]
 8001538:	2b0f      	cmp	r3, #15
 800153a:	f200 80fd 	bhi.w	8001738 <MGPIO_voidSetAfPeripier+0x538>
								 capy_u8PinId= (capy_u8PinId-8);
 800153e:	79bb      	ldrb	r3, [r7, #6]
 8001540:	3b08      	subs	r3, #8
 8001542:	71bb      	strb	r3, [r7, #6]
			                     GPIOG_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001544:	4985      	ldr	r1, [pc, #532]	; (800175c <MGPIO_voidSetAfPeripier+0x55c>)
 8001546:	4b85      	ldr	r3, [pc, #532]	; (800175c <MGPIO_voidSetAfPeripier+0x55c>)
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	79ba      	ldrb	r2, [r7, #6]
 800154c:	0092      	lsls	r2, r2, #2
 800154e:	200f      	movs	r0, #15
 8001550:	fa00 f202 	lsl.w	r2, r0, r2
 8001554:	43d2      	mvns	r2, r2
 8001556:	4013      	ands	r3, r2
 8001558:	600b      	str	r3, [r1, #0]
							     GPIOG_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 800155a:	4880      	ldr	r0, [pc, #512]	; (800175c <MGPIO_voidSetAfPeripier+0x55c>)
 800155c:	4b7f      	ldr	r3, [pc, #508]	; (800175c <MGPIO_voidSetAfPeripier+0x55c>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	7979      	ldrb	r1, [r7, #5]
 8001562:	79ba      	ldrb	r2, [r7, #6]
 8001564:	0092      	lsls	r2, r2, #2
 8001566:	fa01 f202 	lsl.w	r2, r1, r2
 800156a:	4313      	orrs	r3, r2
 800156c:	6003      	str	r3, [r0, #0]
			}break;
 800156e:	e0e3      	b.n	8001738 <MGPIO_voidSetAfPeripier+0x538>
			case GPIO_PORTH:
			{               if( capy_u8PinId <=7)
 8001570:	79bb      	ldrb	r3, [r7, #6]
 8001572:	2b07      	cmp	r3, #7
 8001574:	d815      	bhi.n	80015a2 <MGPIO_voidSetAfPeripier+0x3a2>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOH_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001576:	497a      	ldr	r1, [pc, #488]	; (8001760 <MGPIO_voidSetAfPeripier+0x560>)
 8001578:	4b79      	ldr	r3, [pc, #484]	; (8001760 <MGPIO_voidSetAfPeripier+0x560>)
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	79ba      	ldrb	r2, [r7, #6]
 800157e:	0092      	lsls	r2, r2, #2
 8001580:	200f      	movs	r0, #15
 8001582:	fa00 f202 	lsl.w	r2, r0, r2
 8001586:	43d2      	mvns	r2, r2
 8001588:	4013      	ands	r3, r2
 800158a:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOH_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 800158c:	4874      	ldr	r0, [pc, #464]	; (8001760 <MGPIO_voidSetAfPeripier+0x560>)
 800158e:	4b74      	ldr	r3, [pc, #464]	; (8001760 <MGPIO_voidSetAfPeripier+0x560>)
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	7979      	ldrb	r1, [r7, #5]
 8001594:	79ba      	ldrb	r2, [r7, #6]
 8001596:	0092      	lsls	r2, r2, #2
 8001598:	fa01 f202 	lsl.w	r2, r1, r2
 800159c:	4313      	orrs	r3, r2
 800159e:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOH_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOH_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 80015a0:	e0cc      	b.n	800173c <MGPIO_voidSetAfPeripier+0x53c>
							else if (capy_u8PinId <=15)
 80015a2:	79bb      	ldrb	r3, [r7, #6]
 80015a4:	2b0f      	cmp	r3, #15
 80015a6:	f200 80c9 	bhi.w	800173c <MGPIO_voidSetAfPeripier+0x53c>
								 capy_u8PinId= (capy_u8PinId-8);
 80015aa:	79bb      	ldrb	r3, [r7, #6]
 80015ac:	3b08      	subs	r3, #8
 80015ae:	71bb      	strb	r3, [r7, #6]
			                     GPIOH_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 80015b0:	496c      	ldr	r1, [pc, #432]	; (8001764 <MGPIO_voidSetAfPeripier+0x564>)
 80015b2:	4b6c      	ldr	r3, [pc, #432]	; (8001764 <MGPIO_voidSetAfPeripier+0x564>)
 80015b4:	681b      	ldr	r3, [r3, #0]
 80015b6:	79ba      	ldrb	r2, [r7, #6]
 80015b8:	0092      	lsls	r2, r2, #2
 80015ba:	200f      	movs	r0, #15
 80015bc:	fa00 f202 	lsl.w	r2, r0, r2
 80015c0:	43d2      	mvns	r2, r2
 80015c2:	4013      	ands	r3, r2
 80015c4:	600b      	str	r3, [r1, #0]
							     GPIOH_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80015c6:	4867      	ldr	r0, [pc, #412]	; (8001764 <MGPIO_voidSetAfPeripier+0x564>)
 80015c8:	4b66      	ldr	r3, [pc, #408]	; (8001764 <MGPIO_voidSetAfPeripier+0x564>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	7979      	ldrb	r1, [r7, #5]
 80015ce:	79ba      	ldrb	r2, [r7, #6]
 80015d0:	0092      	lsls	r2, r2, #2
 80015d2:	fa01 f202 	lsl.w	r2, r1, r2
 80015d6:	4313      	orrs	r3, r2
 80015d8:	6003      	str	r3, [r0, #0]
			}break;
 80015da:	e0af      	b.n	800173c <MGPIO_voidSetAfPeripier+0x53c>
			case GPIO_PORTJ:
			{               if( capy_u8PinId <=7)
 80015dc:	79bb      	ldrb	r3, [r7, #6]
 80015de:	2b07      	cmp	r3, #7
 80015e0:	d815      	bhi.n	800160e <MGPIO_voidSetAfPeripier+0x40e>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOJ_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 80015e2:	4961      	ldr	r1, [pc, #388]	; (8001768 <MGPIO_voidSetAfPeripier+0x568>)
 80015e4:	4b60      	ldr	r3, [pc, #384]	; (8001768 <MGPIO_voidSetAfPeripier+0x568>)
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	79ba      	ldrb	r2, [r7, #6]
 80015ea:	0092      	lsls	r2, r2, #2
 80015ec:	200f      	movs	r0, #15
 80015ee:	fa00 f202 	lsl.w	r2, r0, r2
 80015f2:	43d2      	mvns	r2, r2
 80015f4:	4013      	ands	r3, r2
 80015f6:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOJ_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80015f8:	485b      	ldr	r0, [pc, #364]	; (8001768 <MGPIO_voidSetAfPeripier+0x568>)
 80015fa:	4b5b      	ldr	r3, [pc, #364]	; (8001768 <MGPIO_voidSetAfPeripier+0x568>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	7979      	ldrb	r1, [r7, #5]
 8001600:	79ba      	ldrb	r2, [r7, #6]
 8001602:	0092      	lsls	r2, r2, #2
 8001604:	fa01 f202 	lsl.w	r2, r1, r2
 8001608:	4313      	orrs	r3, r2
 800160a:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOJ_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOJ_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 800160c:	e098      	b.n	8001740 <MGPIO_voidSetAfPeripier+0x540>
							else if (capy_u8PinId <=15)
 800160e:	79bb      	ldrb	r3, [r7, #6]
 8001610:	2b0f      	cmp	r3, #15
 8001612:	f200 8095 	bhi.w	8001740 <MGPIO_voidSetAfPeripier+0x540>
								 capy_u8PinId= (capy_u8PinId-8);
 8001616:	79bb      	ldrb	r3, [r7, #6]
 8001618:	3b08      	subs	r3, #8
 800161a:	71bb      	strb	r3, [r7, #6]
			                     GPIOJ_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 800161c:	4953      	ldr	r1, [pc, #332]	; (800176c <MGPIO_voidSetAfPeripier+0x56c>)
 800161e:	4b53      	ldr	r3, [pc, #332]	; (800176c <MGPIO_voidSetAfPeripier+0x56c>)
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	79ba      	ldrb	r2, [r7, #6]
 8001624:	0092      	lsls	r2, r2, #2
 8001626:	200f      	movs	r0, #15
 8001628:	fa00 f202 	lsl.w	r2, r0, r2
 800162c:	43d2      	mvns	r2, r2
 800162e:	4013      	ands	r3, r2
 8001630:	600b      	str	r3, [r1, #0]
							     GPIOJ_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001632:	484e      	ldr	r0, [pc, #312]	; (800176c <MGPIO_voidSetAfPeripier+0x56c>)
 8001634:	4b4d      	ldr	r3, [pc, #308]	; (800176c <MGPIO_voidSetAfPeripier+0x56c>)
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	7979      	ldrb	r1, [r7, #5]
 800163a:	79ba      	ldrb	r2, [r7, #6]
 800163c:	0092      	lsls	r2, r2, #2
 800163e:	fa01 f202 	lsl.w	r2, r1, r2
 8001642:	4313      	orrs	r3, r2
 8001644:	6003      	str	r3, [r0, #0]
			}break;
 8001646:	e07b      	b.n	8001740 <MGPIO_voidSetAfPeripier+0x540>
			case GPIO_PORTI:
			{               if( capy_u8PinId <=7)
 8001648:	79bb      	ldrb	r3, [r7, #6]
 800164a:	2b07      	cmp	r3, #7
 800164c:	d815      	bhi.n	800167a <MGPIO_voidSetAfPeripier+0x47a>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOI_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 800164e:	4948      	ldr	r1, [pc, #288]	; (8001770 <MGPIO_voidSetAfPeripier+0x570>)
 8001650:	4b47      	ldr	r3, [pc, #284]	; (8001770 <MGPIO_voidSetAfPeripier+0x570>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	79ba      	ldrb	r2, [r7, #6]
 8001656:	0092      	lsls	r2, r2, #2
 8001658:	200f      	movs	r0, #15
 800165a:	fa00 f202 	lsl.w	r2, r0, r2
 800165e:	43d2      	mvns	r2, r2
 8001660:	4013      	ands	r3, r2
 8001662:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOI_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001664:	4842      	ldr	r0, [pc, #264]	; (8001770 <MGPIO_voidSetAfPeripier+0x570>)
 8001666:	4b42      	ldr	r3, [pc, #264]	; (8001770 <MGPIO_voidSetAfPeripier+0x570>)
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	7979      	ldrb	r1, [r7, #5]
 800166c:	79ba      	ldrb	r2, [r7, #6]
 800166e:	0092      	lsls	r2, r2, #2
 8001670:	fa01 f202 	lsl.w	r2, r1, r2
 8001674:	4313      	orrs	r3, r2
 8001676:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOI_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOI_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 8001678:	e064      	b.n	8001744 <MGPIO_voidSetAfPeripier+0x544>
							else if (capy_u8PinId <=15)
 800167a:	79bb      	ldrb	r3, [r7, #6]
 800167c:	2b0f      	cmp	r3, #15
 800167e:	d861      	bhi.n	8001744 <MGPIO_voidSetAfPeripier+0x544>
								 capy_u8PinId= (capy_u8PinId-8);
 8001680:	79bb      	ldrb	r3, [r7, #6]
 8001682:	3b08      	subs	r3, #8
 8001684:	71bb      	strb	r3, [r7, #6]
			                     GPIOI_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 8001686:	493b      	ldr	r1, [pc, #236]	; (8001774 <MGPIO_voidSetAfPeripier+0x574>)
 8001688:	4b3a      	ldr	r3, [pc, #232]	; (8001774 <MGPIO_voidSetAfPeripier+0x574>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	79ba      	ldrb	r2, [r7, #6]
 800168e:	0092      	lsls	r2, r2, #2
 8001690:	200f      	movs	r0, #15
 8001692:	fa00 f202 	lsl.w	r2, r0, r2
 8001696:	43d2      	mvns	r2, r2
 8001698:	4013      	ands	r3, r2
 800169a:	600b      	str	r3, [r1, #0]
							     GPIOI_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 800169c:	4835      	ldr	r0, [pc, #212]	; (8001774 <MGPIO_voidSetAfPeripier+0x574>)
 800169e:	4b35      	ldr	r3, [pc, #212]	; (8001774 <MGPIO_voidSetAfPeripier+0x574>)
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	7979      	ldrb	r1, [r7, #5]
 80016a4:	79ba      	ldrb	r2, [r7, #6]
 80016a6:	0092      	lsls	r2, r2, #2
 80016a8:	fa01 f202 	lsl.w	r2, r1, r2
 80016ac:	4313      	orrs	r3, r2
 80016ae:	6003      	str	r3, [r0, #0]
			}break;
 80016b0:	e048      	b.n	8001744 <MGPIO_voidSetAfPeripier+0x544>
			case GPIO_PORTK:
			{               if( capy_u8PinId <=7)
 80016b2:	79bb      	ldrb	r3, [r7, #6]
 80016b4:	2b07      	cmp	r3, #7
 80016b6:	d815      	bhi.n	80016e4 <MGPIO_voidSetAfPeripier+0x4e4>
				             {
								 //clare the 4 bit has pin mode
			                     GPIOK_AFRL&=~((0b1111)<<(capy_u8PinId * 4 ));
 80016b8:	492f      	ldr	r1, [pc, #188]	; (8001778 <MGPIO_voidSetAfPeripier+0x578>)
 80016ba:	4b2f      	ldr	r3, [pc, #188]	; (8001778 <MGPIO_voidSetAfPeripier+0x578>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	79ba      	ldrb	r2, [r7, #6]
 80016c0:	0092      	lsls	r2, r2, #2
 80016c2:	200f      	movs	r0, #15
 80016c4:	fa00 f202 	lsl.w	r2, r0, r2
 80016c8:	43d2      	mvns	r2, r2
 80016ca:	4013      	ands	r3, r2
 80016cc:	600b      	str	r3, [r1, #0]
			                     //set pin for mode
							     GPIOK_AFRL|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 80016ce:	482a      	ldr	r0, [pc, #168]	; (8001778 <MGPIO_voidSetAfPeripier+0x578>)
 80016d0:	4b29      	ldr	r3, [pc, #164]	; (8001778 <MGPIO_voidSetAfPeripier+0x578>)
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	7979      	ldrb	r1, [r7, #5]
 80016d6:	79ba      	ldrb	r2, [r7, #6]
 80016d8:	0092      	lsls	r2, r2, #2
 80016da:	fa01 f202 	lsl.w	r2, r1, r2
 80016de:	4313      	orrs	r3, r2
 80016e0:	6003      	str	r3, [r0, #0]
								 //clare the 4 bit has pin mode
			                     GPIOK_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
			                     //set pin for mode
							     GPIOK_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
							 }								
			}break;
 80016e2:	e031      	b.n	8001748 <MGPIO_voidSetAfPeripier+0x548>
							else if (capy_u8PinId <=15)
 80016e4:	79bb      	ldrb	r3, [r7, #6]
 80016e6:	2b0f      	cmp	r3, #15
 80016e8:	d82e      	bhi.n	8001748 <MGPIO_voidSetAfPeripier+0x548>
								 capy_u8PinId= (capy_u8PinId-8);
 80016ea:	79bb      	ldrb	r3, [r7, #6]
 80016ec:	3b08      	subs	r3, #8
 80016ee:	71bb      	strb	r3, [r7, #6]
			                     GPIOK_AFRH&=~((0b1111)<<(capy_u8PinId * 4 ));
 80016f0:	4922      	ldr	r1, [pc, #136]	; (800177c <MGPIO_voidSetAfPeripier+0x57c>)
 80016f2:	4b22      	ldr	r3, [pc, #136]	; (800177c <MGPIO_voidSetAfPeripier+0x57c>)
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	79ba      	ldrb	r2, [r7, #6]
 80016f8:	0092      	lsls	r2, r2, #2
 80016fa:	200f      	movs	r0, #15
 80016fc:	fa00 f202 	lsl.w	r2, r0, r2
 8001700:	43d2      	mvns	r2, r2
 8001702:	4013      	ands	r3, r2
 8001704:	600b      	str	r3, [r1, #0]
							     GPIOK_AFRH|= ((Capy_u8modeAFPin)<<(capy_u8PinId * 4 ));
 8001706:	481d      	ldr	r0, [pc, #116]	; (800177c <MGPIO_voidSetAfPeripier+0x57c>)
 8001708:	4b1c      	ldr	r3, [pc, #112]	; (800177c <MGPIO_voidSetAfPeripier+0x57c>)
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	7979      	ldrb	r1, [r7, #5]
 800170e:	79ba      	ldrb	r2, [r7, #6]
 8001710:	0092      	lsls	r2, r2, #2
 8001712:	fa01 f202 	lsl.w	r2, r1, r2
 8001716:	4313      	orrs	r3, r2
 8001718:	6003      	str	r3, [r0, #0]
			}break;
 800171a:	e015      	b.n	8001748 <MGPIO_voidSetAfPeripier+0x548>

			default: break;
 800171c:	bf00      	nop
 800171e:	e014      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001720:	bf00      	nop
 8001722:	e012      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001724:	bf00      	nop
 8001726:	e010      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001728:	bf00      	nop
 800172a:	e00e      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 800172c:	bf00      	nop
 800172e:	e00c      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001730:	bf00      	nop
 8001732:	e00a      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001734:	bf00      	nop
 8001736:	e008      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001738:	bf00      	nop
 800173a:	e006      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 800173c:	bf00      	nop
 800173e:	e004      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001740:	bf00      	nop
 8001742:	e002      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001744:	bf00      	nop
 8001746:	e000      	b.n	800174a <MGPIO_voidSetAfPeripier+0x54a>
			}break;
 8001748:	bf00      	nop
		}
	}

}
 800174a:	bf00      	nop
 800174c:	370c      	adds	r7, #12
 800174e:	46bd      	mov	sp, r7
 8001750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001754:	4770      	bx	lr
 8001756:	bf00      	nop
 8001758:	40021820 	.word	0x40021820
 800175c:	40021824 	.word	0x40021824
 8001760:	40021c20 	.word	0x40021c20
 8001764:	40021c24 	.word	0x40021c24
 8001768:	40022420 	.word	0x40022420
 800176c:	40022424 	.word	0x40022424
 8001770:	40022020 	.word	0x40022020
 8001774:	40022024 	.word	0x40022024
 8001778:	40022820 	.word	0x40022820
 800177c:	40022824 	.word	0x40022824

08001780 <RCC_voidInitSysClock>:
#include  "RCC_interface.h"
#include  "RCC_private.h"
#include  "RCC_config.h"
// fun to initalition the clook and select the clock system
void RCC_voidInitSysClock(void) 
{ 
 8001780:	b480      	push	{r7}
 8001782:	af00      	add	r7, sp, #0
	#if       RCC_CLOCK_TYPE== RCC_HSE_CRYSTAL

	          RCC -> CR   =0X00010000;//enable HSE by external clock with out baybass
 8001784:	4b05      	ldr	r3, [pc, #20]	; (800179c <RCC_voidInitSysClock+0x1c>)
 8001786:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800178a:	601a      	str	r2, [r3, #0]
	          RCC -> CFGR =0x00000001;//select the HSE Clock system
 800178c:	4b03      	ldr	r3, [pc, #12]	; (800179c <RCC_voidInitSysClock+0x1c>)
 800178e:	2201      	movs	r2, #1
 8001790:	609a      	str	r2, [r3, #8]
	         //#error("you chosh worng type clock ")
	
	#endif
	
	
}
 8001792:	bf00      	nop
 8001794:	46bd      	mov	sp, r7
 8001796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800179a:	4770      	bx	lr
 800179c:	40023800 	.word	0x40023800

080017a0 <RCC_voidEnableClock>:



// enable the clock at peripheral  
void RCC_voidEnableClock(u8 capy_BusId,u8 capy_u8PerId)   
{
 80017a0:	b480      	push	{r7}
 80017a2:	b083      	sub	sp, #12
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	4603      	mov	r3, r0
 80017a8:	460a      	mov	r2, r1
 80017aa:	71fb      	strb	r3, [r7, #7]
 80017ac:	4613      	mov	r3, r2
 80017ae:	71bb      	strb	r3, [r7, #6]
	if(capy_u8PerId<=31)
 80017b0:	79bb      	ldrb	r3, [r7, #6]
 80017b2:	2b1f      	cmp	r3, #31
 80017b4:	d842      	bhi.n	800183c <RCC_voidEnableClock+0x9c>
	{
		switch (capy_BusId)
 80017b6:	79fb      	ldrb	r3, [r7, #7]
 80017b8:	2b04      	cmp	r3, #4
 80017ba:	d83f      	bhi.n	800183c <RCC_voidEnableClock+0x9c>
 80017bc:	a201      	add	r2, pc, #4	; (adr r2, 80017c4 <RCC_voidEnableClock+0x24>)
 80017be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80017c2:	bf00      	nop
 80017c4:	080017d9 	.word	0x080017d9
 80017c8:	080017ed 	.word	0x080017ed
 80017cc:	08001801 	.word	0x08001801
 80017d0:	08001815 	.word	0x08001815
 80017d4:	08001829 	.word	0x08001829
		{
		case AHB1  :SET_BIT(RCC-> AHB1ENR,capy_u8PerId);    break;
 80017d8:	491b      	ldr	r1, [pc, #108]	; (8001848 <RCC_voidEnableClock+0xa8>)
 80017da:	4b1b      	ldr	r3, [pc, #108]	; (8001848 <RCC_voidEnableClock+0xa8>)
 80017dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017de:	79ba      	ldrb	r2, [r7, #6]
 80017e0:	2001      	movs	r0, #1
 80017e2:	fa00 f202 	lsl.w	r2, r0, r2
 80017e6:	4313      	orrs	r3, r2
 80017e8:	630b      	str	r3, [r1, #48]	; 0x30
 80017ea:	e027      	b.n	800183c <RCC_voidEnableClock+0x9c>
		case AHB2  :SET_BIT(RCC-> AHB2ENR,capy_u8PerId);    break;
 80017ec:	4916      	ldr	r1, [pc, #88]	; (8001848 <RCC_voidEnableClock+0xa8>)
 80017ee:	4b16      	ldr	r3, [pc, #88]	; (8001848 <RCC_voidEnableClock+0xa8>)
 80017f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80017f2:	79ba      	ldrb	r2, [r7, #6]
 80017f4:	2001      	movs	r0, #1
 80017f6:	fa00 f202 	lsl.w	r2, r0, r2
 80017fa:	4313      	orrs	r3, r2
 80017fc:	634b      	str	r3, [r1, #52]	; 0x34
 80017fe:	e01d      	b.n	800183c <RCC_voidEnableClock+0x9c>
		case AHB3  :SET_BIT(RCC-> AHB3ENR,capy_u8PerId);    break;
 8001800:	4911      	ldr	r1, [pc, #68]	; (8001848 <RCC_voidEnableClock+0xa8>)
 8001802:	4b11      	ldr	r3, [pc, #68]	; (8001848 <RCC_voidEnableClock+0xa8>)
 8001804:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001806:	79ba      	ldrb	r2, [r7, #6]
 8001808:	2001      	movs	r0, #1
 800180a:	fa00 f202 	lsl.w	r2, r0, r2
 800180e:	4313      	orrs	r3, r2
 8001810:	638b      	str	r3, [r1, #56]	; 0x38
 8001812:	e013      	b.n	800183c <RCC_voidEnableClock+0x9c>
		case APB1  :SET_BIT (RCC-> APB1ENR,capy_u8PerId);   break;
 8001814:	490c      	ldr	r1, [pc, #48]	; (8001848 <RCC_voidEnableClock+0xa8>)
 8001816:	4b0c      	ldr	r3, [pc, #48]	; (8001848 <RCC_voidEnableClock+0xa8>)
 8001818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800181a:	79ba      	ldrb	r2, [r7, #6]
 800181c:	2001      	movs	r0, #1
 800181e:	fa00 f202 	lsl.w	r2, r0, r2
 8001822:	4313      	orrs	r3, r2
 8001824:	640b      	str	r3, [r1, #64]	; 0x40
 8001826:	e009      	b.n	800183c <RCC_voidEnableClock+0x9c>
		case APB2  :SET_BIT (RCC-> APB2ENR,capy_u8PerId);   break;
 8001828:	4907      	ldr	r1, [pc, #28]	; (8001848 <RCC_voidEnableClock+0xa8>)
 800182a:	4b07      	ldr	r3, [pc, #28]	; (8001848 <RCC_voidEnableClock+0xa8>)
 800182c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800182e:	79ba      	ldrb	r2, [r7, #6]
 8001830:	2001      	movs	r0, #1
 8001832:	fa00 f202 	lsl.w	r2, r0, r2
 8001836:	4313      	orrs	r3, r2
 8001838:	644b      	str	r3, [r1, #68]	; 0x44
 800183a:	bf00      	nop
	}
	else
	{
		//return error state
	}
}
 800183c:	bf00      	nop
 800183e:	370c      	adds	r7, #12
 8001840:	46bd      	mov	sp, r7
 8001842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001846:	4770      	bx	lr
 8001848:	40023800 	.word	0x40023800

0800184c <MSTICK_voidInit>:

// the function  init the clock of systick from choise the file configration 
// Disable the sys tick system 
// Disable  interrupt the sys tick
void MSTICK_voidInit(void )
{
 800184c:	b480      	push	{r7}
 800184e:	af00      	add	r7, sp, #0
	
	#elif CLOCK_SYS_TICK == STICK_AHB_DIV_8
	   //clear bit 2 to enable seclect the clock AHB/8 
	   //clear bit 0 to disable the sys tick  
	   //clear bit 1 to disable interrupt sys tick
        STICK -> STK_CTRL =0x00000000;	
 8001850:	4b03      	ldr	r3, [pc, #12]	; (8001860 <MSTICK_voidInit+0x14>)
 8001852:	2200      	movs	r2, #0
 8001854:	601a      	str	r2, [r3, #0]
	#else 
		#error "the error choise to file config "
	
	
	#endif 
}                       
 8001856:	bf00      	nop
 8001858:	46bd      	mov	sp, r7
 800185a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185e:	4770      	bx	lr
 8001860:	e000e010 	.word	0xe000e010

08001864 <SysTick_Handler>:
	return local_u32returnvalue;
}

// ISR sys tick 
void SysTick_Handler(void)
{
 8001864:	b580      	push	{r7, lr}
 8001866:	b082      	sub	sp, #8
 8001868:	af00      	add	r7, sp, #0
	u8 local_u8flagvalue;
	if(STICk_u8ModeInterval == STICk_ModeIntervalSingal)
 800186a:	4b12      	ldr	r3, [pc, #72]	; (80018b4 <SysTick_Handler+0x50>)
 800186c:	781b      	ldrb	r3, [r3, #0]
 800186e:	2b00      	cmp	r3, #0
 8001870:	d111      	bne.n	8001896 <SysTick_Handler+0x32>
	{
		//disable the interrupt 
		CLR_BIT(STICK -> STK_CTRL, 1 );   
 8001872:	4a11      	ldr	r2, [pc, #68]	; (80018b8 <SysTick_Handler+0x54>)
 8001874:	4b10      	ldr	r3, [pc, #64]	; (80018b8 <SysTick_Handler+0x54>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	f023 0302 	bic.w	r3, r3, #2
 800187c:	6013      	str	r3, [r2, #0]
        
		//disable the counter to count 
		// stop timer val & load 0 
	    CLR_BIT(STICK -> STK_CTRL, 0 );
 800187e:	4a0e      	ldr	r2, [pc, #56]	; (80018b8 <SysTick_Handler+0x54>)
 8001880:	4b0d      	ldr	r3, [pc, #52]	; (80018b8 <SysTick_Handler+0x54>)
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	f023 0301 	bic.w	r3, r3, #1
 8001888:	6013      	str	r3, [r2, #0]
	    // clear the register load and value 
	    STICK -> STK_LOAD=0;
 800188a:	4b0b      	ldr	r3, [pc, #44]	; (80018b8 <SysTick_Handler+0x54>)
 800188c:	2200      	movs	r2, #0
 800188e:	605a      	str	r2, [r3, #4]
	    STICK -> STK_VAL =0;
 8001890:	4b09      	ldr	r3, [pc, #36]	; (80018b8 <SysTick_Handler+0x54>)
 8001892:	2200      	movs	r2, #0
 8001894:	609a      	str	r2, [r3, #8]
	}
	
	// call the nafication function 
	STICK_CallBack();
 8001896:	4b09      	ldr	r3, [pc, #36]	; (80018bc <SysTick_Handler+0x58>)
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	4798      	blx	r3
	// the clear flag form read 
	local_u8flagvalue=(GET_BIT(STICK -> STK_CTRL, 16 ));
 800189c:	4b06      	ldr	r3, [pc, #24]	; (80018b8 <SysTick_Handler+0x54>)
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	0c1b      	lsrs	r3, r3, #16
 80018a2:	b2db      	uxtb	r3, r3
 80018a4:	f003 0301 	and.w	r3, r3, #1
 80018a8:	71fb      	strb	r3, [r7, #7]
}
 80018aa:	bf00      	nop
 80018ac:	3708      	adds	r7, #8
 80018ae:	46bd      	mov	sp, r7
 80018b0:	bd80      	pop	{r7, pc}
 80018b2:	bf00      	nop
 80018b4:	2000001c 	.word	0x2000001c
 80018b8:	e000e010 	.word	0xe000e010
 80018bc:	20000034 	.word	0x20000034

080018c0 <MTimer_voidinitPMWT8>:
   //enable timer counter 
   SET_BIT(TIMER_1 -> CR1,0);
}

void MTimer_voidinitPMWT8(void)
{
 80018c0:	b480      	push	{r7}
 80018c2:	af00      	add	r7, sp, #0
	   //initial all the register for timer
	   SET_BIT(TIMER_8 -> EGR,0);
 80018c4:	4a2d      	ldr	r2, [pc, #180]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018c6:	4b2d      	ldr	r3, [pc, #180]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018c8:	695b      	ldr	r3, [r3, #20]
 80018ca:	f043 0301 	orr.w	r3, r3, #1
 80018ce:	6153      	str	r3, [r2, #20]
	   //enable  auto raload preload     ARPE---> 1
	   CLR_BIT(TIMER_8 -> CR1,7 );
 80018d0:	4a2a      	ldr	r2, [pc, #168]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018d2:	4b2a      	ldr	r3, [pc, #168]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80018da:	6013      	str	r3, [r2, #0]
	   //enable SET drication up counter DIR
	   CLR_BIT(TIMER_8 -> CR1,4);
 80018dc:	4a27      	ldr	r2, [pc, #156]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018de:	4b27      	ldr	r3, [pc, #156]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	f023 0310 	bic.w	r3, r3, #16
 80018e6:	6013      	str	r3, [r2, #0]
	   CLR_BIT(TIMER_8 -> CR1,5);
 80018e8:	4a24      	ldr	r2, [pc, #144]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018ea:	4b24      	ldr	r3, [pc, #144]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	f023 0320 	bic.w	r3, r3, #32
 80018f2:	6013      	str	r3, [r2, #0]
	   CLR_BIT(TIMER_8 -> CR1,6);
 80018f4:	4a21      	ldr	r2, [pc, #132]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018f6:	4b21      	ldr	r3, [pc, #132]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80018fe:	6013      	str	r3, [r2, #0]

	   /* Set timer Prescaler, bus clock = 90 MHz, fCK_PSC / (PSC[15:0] + 1)
	   * CK_CNT = 180000000 / (1799 + 1) -> 10000 Hz -> time base = 1 ms */
	   //TIMER_8 -> PSC =PRESCALER_TIMER;
	   TIMER_8 -> PSC =7;
 8001900:	4b1e      	ldr	r3, [pc, #120]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001902:	2207      	movs	r2, #7
 8001904:	629a      	str	r2, [r3, #40]	; 0x28

	   // set capture compare 1 as output
	      CLR_BIT(TIMER_8 -> CCMR1,0);
 8001906:	4a1d      	ldr	r2, [pc, #116]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001908:	4b1c      	ldr	r3, [pc, #112]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800190a:	699b      	ldr	r3, [r3, #24]
 800190c:	f023 0301 	bic.w	r3, r3, #1
 8001910:	6193      	str	r3, [r2, #24]
	      CLR_BIT(TIMER_8 -> CCMR1,1);
 8001912:	4a1a      	ldr	r2, [pc, #104]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001914:	4b19      	ldr	r3, [pc, #100]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001916:	699b      	ldr	r3, [r3, #24]
 8001918:	f023 0302 	bic.w	r3, r3, #2
 800191c:	6193      	str	r3, [r2, #24]
	      // Output Compare 1 preload enable
	      SET_BIT(TIMER_8 -> CCMR1,3);
 800191e:	4a17      	ldr	r2, [pc, #92]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001920:	4b16      	ldr	r3, [pc, #88]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001922:	699b      	ldr	r3, [r3, #24]
 8001924:	f043 0308 	orr.w	r3, r3, #8
 8001928:	6193      	str	r3, [r2, #24]

	      //selection output compare 1 1 pmw mode 1
	      SET_BIT(TIMER_8 -> CCMR1,6);
 800192a:	4a14      	ldr	r2, [pc, #80]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800192c:	4b13      	ldr	r3, [pc, #76]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800192e:	699b      	ldr	r3, [r3, #24]
 8001930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001934:	6193      	str	r3, [r2, #24]
	      SET_BIT(TIMER_8 -> CCMR1,5);
 8001936:	4a11      	ldr	r2, [pc, #68]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001938:	4b10      	ldr	r3, [pc, #64]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800193a:	699b      	ldr	r3, [r3, #24]
 800193c:	f043 0320 	orr.w	r3, r3, #32
 8001940:	6193      	str	r3, [r2, #24]
	      CLR_BIT(TIMER_8 -> CCMR1,4);
 8001942:	4a0e      	ldr	r2, [pc, #56]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001944:	4b0d      	ldr	r3, [pc, #52]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001946:	699b      	ldr	r3, [r3, #24]
 8001948:	f023 0310 	bic.w	r3, r3, #16
 800194c:	6193      	str	r3, [r2, #24]

	      //select capture compare 1 output poiarity active high
	        CLR_BIT(TIMER_8 -> CCER,3);
 800194e:	4a0b      	ldr	r2, [pc, #44]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001950:	4b0a      	ldr	r3, [pc, #40]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001952:	6a1b      	ldr	r3, [r3, #32]
 8001954:	f023 0308 	bic.w	r3, r3, #8
 8001958:	6213      	str	r3, [r2, #32]


	        //enable capture compare 1 output
	        SET_BIT(TIMER_8 -> CCER,0);
 800195a:	4a08      	ldr	r2, [pc, #32]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800195c:	4b07      	ldr	r3, [pc, #28]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800195e:	6a1b      	ldr	r3, [r3, #32]
 8001960:	f043 0301 	orr.w	r3, r3, #1
 8001964:	6213      	str	r3, [r2, #32]
	        //enable timer main output gpio
	           SET_BIT(TIMER_8 -> BDTR,15);
 8001966:	4a05      	ldr	r2, [pc, #20]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 8001968:	4b04      	ldr	r3, [pc, #16]	; (800197c <MTimer_voidinitPMWT8+0xbc>)
 800196a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800196c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001970:	6453      	str	r3, [r2, #68]	; 0x44


}
 8001972:	bf00      	nop
 8001974:	46bd      	mov	sp, r7
 8001976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197a:	4770      	bx	lr
 800197c:	40010400 	.word	0x40010400

08001980 <MTimer_voidPMWGENERATIONT8>:


void MTimer_voidPMWGENERATIONT8(u32 Capy_u32TimePeriod,u32 Capy_u32TimeOn  )
{
 8001980:	b480      	push	{r7}
 8001982:	b083      	sub	sp, #12
 8001984:	af00      	add	r7, sp, #0
 8001986:	6078      	str	r0, [r7, #4]
 8001988:	6039      	str	r1, [r7, #0]


  //u32 Capy_u32TickvalueTotal=( Capy_u32TimePeriod  );
  //u32 Capy_u32TickvalueOn=( Capy_u32TimeOn  );
   // the iniatal the value of counter auto reload
   TIMER_8 -> ARR = Capy_u32TimePeriod;
 800198a:	4a09      	ldr	r2, [pc, #36]	; (80019b0 <MTimer_voidPMWGENERATIONT8+0x30>)
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	62d3      	str	r3, [r2, #44]	; 0x2c
   //set init the Duty cycle
   TIMER_8 -> CCR1 =Capy_u32TimeOn;
 8001990:	4a07      	ldr	r2, [pc, #28]	; (80019b0 <MTimer_voidPMWGENERATIONT8+0x30>)
 8001992:	683b      	ldr	r3, [r7, #0]
 8001994:	6353      	str	r3, [r2, #52]	; 0x34



   //enable timer counter
   SET_BIT(TIMER_8 -> CR1,0);
 8001996:	4a06      	ldr	r2, [pc, #24]	; (80019b0 <MTimer_voidPMWGENERATIONT8+0x30>)
 8001998:	4b05      	ldr	r3, [pc, #20]	; (80019b0 <MTimer_voidPMWGENERATIONT8+0x30>)
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	f043 0301 	orr.w	r3, r3, #1
 80019a0:	6013      	str	r3, [r2, #0]
}
 80019a2:	bf00      	nop
 80019a4:	370c      	adds	r7, #12
 80019a6:	46bd      	mov	sp, r7
 80019a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ac:	4770      	bx	lr
 80019ae:	bf00      	nop
 80019b0:	40010400 	.word	0x40010400

080019b4 <MTimer_voidinitMeagerPMWT1>:




void MTimer_voidinitMeagerPMWT1(void)
{
 80019b4:	b480      	push	{r7}
 80019b6:	af00      	add	r7, sp, #0

	   //enable SET drication up counter DIR
	   CLR_BIT(TIMER_1 -> CR1,4);
 80019b8:	4a41      	ldr	r2, [pc, #260]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019ba:	4b41      	ldr	r3, [pc, #260]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	f023 0310 	bic.w	r3, r3, #16
 80019c2:	6013      	str	r3, [r2, #0]
	   CLR_BIT(TIMER_1 -> CR1,5);
 80019c4:	4a3e      	ldr	r2, [pc, #248]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019c6:	4b3e      	ldr	r3, [pc, #248]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	f023 0320 	bic.w	r3, r3, #32
 80019ce:	6013      	str	r3, [r2, #0]
	   CLR_BIT(TIMER_1 -> CR1,6);
 80019d0:	4a3b      	ldr	r2, [pc, #236]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019d2:	4b3b      	ldr	r3, [pc, #236]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019d4:	681b      	ldr	r3, [r3, #0]
 80019d6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80019da:	6013      	str	r3, [r2, #0]

	   /* Set timer Prescaler, bus clock = 8 MHz, fCK_PSC / (PSC[15:0] + 1)
	    * CK_CNT = 8000000 / (7 + 1) -> 1 MHz -> time base = 1 us */
	    TIMER_1 -> PSC =7;
 80019dc:	4b38      	ldr	r3, [pc, #224]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019de:	2207      	movs	r2, #7
 80019e0:	629a      	str	r2, [r3, #40]	; 0x28

        // the iniatal the value of counter auto reload
        TIMER_1 -> ARR = 0xffff;
 80019e2:	4b37      	ldr	r3, [pc, #220]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019e8:	62da      	str	r2, [r3, #44]	; 0x2c

	   // set capture compare channel  1 as input IC1 is mapped on TI1
          SET_BIT(TIMER_1 -> CCMR1,0);
 80019ea:	4a35      	ldr	r2, [pc, #212]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019ec:	4b34      	ldr	r3, [pc, #208]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019ee:	699b      	ldr	r3, [r3, #24]
 80019f0:	f043 0301 	orr.w	r3, r3, #1
 80019f4:	6193      	str	r3, [r2, #24]
	      CLR_BIT(TIMER_1 -> CCMR1,1);
 80019f6:	4a32      	ldr	r2, [pc, #200]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019f8:	4b31      	ldr	r3, [pc, #196]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 80019fa:	699b      	ldr	r3, [r3, #24]
 80019fc:	f023 0302 	bic.w	r3, r3, #2
 8001a00:	6193      	str	r3, [r2, #24]

	      //selection the input polarity T1FP1 active on rising edge
	      CLR_BIT(TIMER_1 -> CCER,1);
 8001a02:	4a2f      	ldr	r2, [pc, #188]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a04:	4b2e      	ldr	r3, [pc, #184]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a06:	6a1b      	ldr	r3, [r3, #32]
 8001a08:	f023 0302 	bic.w	r3, r3, #2
 8001a0c:	6213      	str	r3, [r2, #32]
	      CLR_BIT(TIMER_1 -> CCER,3);
 8001a0e:	4a2c      	ldr	r2, [pc, #176]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a10:	4b2b      	ldr	r3, [pc, #172]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a12:	6a1b      	ldr	r3, [r3, #32]
 8001a14:	f023 0308 	bic.w	r3, r3, #8
 8001a18:	6213      	str	r3, [r2, #32]

	      /* Timer 1 input channel 1 IC2 configuration */
	       /* CC2 channel is configured as input, IC2 is mapped on TI1 */

	      CLR_BIT(TIMER_1 -> CCMR1,8);
 8001a1a:	4a29      	ldr	r2, [pc, #164]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a1c:	4b28      	ldr	r3, [pc, #160]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a1e:	699b      	ldr	r3, [r3, #24]
 8001a20:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001a24:	6193      	str	r3, [r2, #24]
	      SET_BIT(TIMER_1 -> CCMR1,9);
 8001a26:	4a26      	ldr	r2, [pc, #152]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a28:	4b25      	ldr	r3, [pc, #148]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a2a:	699b      	ldr	r3, [r3, #24]
 8001a2c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001a30:	6193      	str	r3, [r2, #24]

	      //selection the input polarity T1FP1 active on failing edge
	      SET_BIT(TIMER_1 -> CCER,5);
 8001a32:	4a23      	ldr	r2, [pc, #140]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a34:	4b22      	ldr	r3, [pc, #136]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a36:	6a1b      	ldr	r3, [r3, #32]
 8001a38:	f043 0320 	orr.w	r3, r3, #32
 8001a3c:	6213      	str	r3, [r2, #32]
	      CLR_BIT(TIMER_1 -> CCER,7);
 8001a3e:	4a20      	ldr	r2, [pc, #128]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a40:	4b1f      	ldr	r3, [pc, #124]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a42:	6a1b      	ldr	r3, [r3, #32]
 8001a44:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001a48:	6213      	str	r3, [r2, #32]

	      /* Timer 1 trigger configuration */
	      /* Select Filtered Timer Input 1 (TI1FP1) trigger */
	      SET_BIT(TIMER_1 -> SMCR,4);
 8001a4a:	4a1d      	ldr	r2, [pc, #116]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a4c:	4b1c      	ldr	r3, [pc, #112]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a4e:	689b      	ldr	r3, [r3, #8]
 8001a50:	f043 0310 	orr.w	r3, r3, #16
 8001a54:	6093      	str	r3, [r2, #8]
	      CLR_BIT(TIMER_1 -> SMCR,5);
 8001a56:	4a1a      	ldr	r2, [pc, #104]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a58:	4b19      	ldr	r3, [pc, #100]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a5a:	689b      	ldr	r3, [r3, #8]
 8001a5c:	f023 0320 	bic.w	r3, r3, #32
 8001a60:	6093      	str	r3, [r2, #8]
	      SET_BIT(TIMER_1 -> SMCR,6);
 8001a62:	4a17      	ldr	r2, [pc, #92]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a64:	4b16      	ldr	r3, [pc, #88]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a66:	689b      	ldr	r3, [r3, #8]
 8001a68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001a6c:	6093      	str	r3, [r2, #8]


          //selection rest mode
	      CLR_BIT(TIMER_1 -> SMCR,0);
 8001a6e:	4a14      	ldr	r2, [pc, #80]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a70:	4b13      	ldr	r3, [pc, #76]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	f023 0301 	bic.w	r3, r3, #1
 8001a78:	6093      	str	r3, [r2, #8]
	      CLR_BIT(TIMER_1 -> SMCR,1);
 8001a7a:	4a11      	ldr	r2, [pc, #68]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a7c:	4b10      	ldr	r3, [pc, #64]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a7e:	689b      	ldr	r3, [r3, #8]
 8001a80:	f023 0302 	bic.w	r3, r3, #2
 8001a84:	6093      	str	r3, [r2, #8]
	      SET_BIT(TIMER_1 -> SMCR,2);
 8001a86:	4a0e      	ldr	r2, [pc, #56]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a88:	4b0d      	ldr	r3, [pc, #52]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a8a:	689b      	ldr	r3, [r3, #8]
 8001a8c:	f043 0304 	orr.w	r3, r3, #4
 8001a90:	6093      	str	r3, [r2, #8]
// enable interrupt
	     // SET_BIT(TIMER_1 -> DIER,1);

	  	//enable timer counter
	  	//enable CC1 and CC2
	     SET_BIT(TIMER_1 -> CCER,0);
 8001a92:	4a0b      	ldr	r2, [pc, #44]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a94:	4b0a      	ldr	r3, [pc, #40]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001a96:	6a1b      	ldr	r3, [r3, #32]
 8001a98:	f043 0301 	orr.w	r3, r3, #1
 8001a9c:	6213      	str	r3, [r2, #32]
	     SET_BIT(TIMER_1 -> CCER,4);
 8001a9e:	4a08      	ldr	r2, [pc, #32]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001aa0:	4b07      	ldr	r3, [pc, #28]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001aa2:	6a1b      	ldr	r3, [r3, #32]
 8001aa4:	f043 0310 	orr.w	r3, r3, #16
 8001aa8:	6213      	str	r3, [r2, #32]
	     SET_BIT(TIMER_1 -> CR1,0);
 8001aaa:	4a05      	ldr	r2, [pc, #20]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001aac:	4b04      	ldr	r3, [pc, #16]	; (8001ac0 <MTimer_voidinitMeagerPMWT1+0x10c>)
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	f043 0301 	orr.w	r3, r3, #1
 8001ab4:	6013      	str	r3, [r2, #0]

}
 8001ab6:	bf00      	nop
 8001ab8:	46bd      	mov	sp, r7
 8001aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001abe:	4770      	bx	lr
 8001ac0:	40010000 	.word	0x40010000

08001ac4 <updata_value>:

void updata_value (u16 * capy_u16PtrTimer, u16 * capy_u16PtrT_on)
{    u32 flag1=0;
 8001ac4:	b580      	push	{r7, lr}
 8001ac6:	b088      	sub	sp, #32
 8001ac8:	af00      	add	r7, sp, #0
 8001aca:	6078      	str	r0, [r7, #4]
 8001acc:	6039      	str	r1, [r7, #0]
 8001ace:	2300      	movs	r3, #0
 8001ad0:	613b      	str	r3, [r7, #16]
     u32 flag2=0;
 8001ad2:	2300      	movs	r3, #0
 8001ad4:	60fb      	str	r3, [r7, #12]
	 u16 capy_PtrTimer = 0;
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	817b      	strh	r3, [r7, #10]
	 u16 capy_PtrT_on  = 0;
 8001ada:	2300      	movs	r3, #0
 8001adc:	813b      	strh	r3, [r7, #8]
static	 u32 capy_u32PtrTimer_avage_old ;
static	 u32 capy_u32PtrT_on_avage_old  ;
	     u32 capy_u32PtrTimer_avage_new = 0;
 8001ade:	2300      	movs	r3, #0
 8001ae0:	61fb      	str	r3, [r7, #28]
	     u32 capy_u32PtrT_on_avage_new  = 0;
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	61bb      	str	r3, [r7, #24]

 if (0!=TIMER_1 -> CCR1 )
 8001ae6:	4b2e      	ldr	r3, [pc, #184]	; (8001ba0 <updata_value+0xdc>)
 8001ae8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d01a      	beq.n	8001b24 <updata_value+0x60>
{

	 for(int i=0;i<4;i++)
 8001aee:	2300      	movs	r3, #0
 8001af0:	617b      	str	r3, [r7, #20]
 8001af2:	e014      	b.n	8001b1e <updata_value+0x5a>
   {
	     capy_PtrTimer = TIMER_1 -> CCR1;
 8001af4:	4b2a      	ldr	r3, [pc, #168]	; (8001ba0 <updata_value+0xdc>)
 8001af6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001af8:	817b      	strh	r3, [r7, #10]
	     capy_PtrT_on  = TIMER_1 -> CCR2;
 8001afa:	4b29      	ldr	r3, [pc, #164]	; (8001ba0 <updata_value+0xdc>)
 8001afc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001afe:	813b      	strh	r3, [r7, #8]


	     capy_u32PtrTimer_avage_new+=capy_PtrTimer;
 8001b00:	897b      	ldrh	r3, [r7, #10]
 8001b02:	69fa      	ldr	r2, [r7, #28]
 8001b04:	4413      	add	r3, r2
 8001b06:	61fb      	str	r3, [r7, #28]
	     capy_u32PtrT_on_avage_new+=capy_PtrT_on;
 8001b08:	893b      	ldrh	r3, [r7, #8]
 8001b0a:	69ba      	ldr	r2, [r7, #24]
 8001b0c:	4413      	add	r3, r2
 8001b0e:	61bb      	str	r3, [r7, #24]
         capy_PtrTimer=0;
 8001b10:	2300      	movs	r3, #0
 8001b12:	817b      	strh	r3, [r7, #10]
         capy_PtrT_on=0;
 8001b14:	2300      	movs	r3, #0
 8001b16:	813b      	strh	r3, [r7, #8]
	 for(int i=0;i<4;i++)
 8001b18:	697b      	ldr	r3, [r7, #20]
 8001b1a:	3301      	adds	r3, #1
 8001b1c:	617b      	str	r3, [r7, #20]
 8001b1e:	697b      	ldr	r3, [r7, #20]
 8001b20:	2b03      	cmp	r3, #3
 8001b22:	dde7      	ble.n	8001af4 <updata_value+0x30>

    }

}
capy_u32PtrTimer_avage_new/=4 ;
 8001b24:	69fb      	ldr	r3, [r7, #28]
 8001b26:	089b      	lsrs	r3, r3, #2
 8001b28:	61fb      	str	r3, [r7, #28]
capy_u32PtrT_on_avage_new/=4  ;
 8001b2a:	69bb      	ldr	r3, [r7, #24]
 8001b2c:	089b      	lsrs	r3, r3, #2
 8001b2e:	61bb      	str	r3, [r7, #24]
flag1=(capy_u32PtrTimer_avage_new - capy_u32PtrTimer_avage_old);
 8001b30:	4b1c      	ldr	r3, [pc, #112]	; (8001ba4 <updata_value+0xe0>)
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	69fa      	ldr	r2, [r7, #28]
 8001b36:	1ad3      	subs	r3, r2, r3
 8001b38:	613b      	str	r3, [r7, #16]
flag2=(capy_u32PtrT_on_avage_new - capy_u32PtrT_on_avage_old);
 8001b3a:	4b1b      	ldr	r3, [pc, #108]	; (8001ba8 <updata_value+0xe4>)
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	69ba      	ldr	r2, [r7, #24]
 8001b40:	1ad3      	subs	r3, r2, r3
 8001b42:	60fb      	str	r3, [r7, #12]
 if(flag1<=2 && flag2<=40)
 8001b44:	693b      	ldr	r3, [r7, #16]
 8001b46:	2b02      	cmp	r3, #2
 8001b48:	d812      	bhi.n	8001b70 <updata_value+0xac>
 8001b4a:	68fb      	ldr	r3, [r7, #12]
 8001b4c:	2b28      	cmp	r3, #40	; 0x28
 8001b4e:	d80f      	bhi.n	8001b70 <updata_value+0xac>
 {
 * capy_u16PtrTimer = (u16)(capy_u32PtrTimer_avage_old ) ;
 8001b50:	4b14      	ldr	r3, [pc, #80]	; (8001ba4 <updata_value+0xe0>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	b29a      	uxth	r2, r3
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	801a      	strh	r2, [r3, #0]
 * capy_u16PtrT_on  = (u16)(capy_u32PtrT_on_avage_old ) ;
 8001b5a:	4b13      	ldr	r3, [pc, #76]	; (8001ba8 <updata_value+0xe4>)
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	683b      	ldr	r3, [r7, #0]
 8001b62:	801a      	strh	r2, [r3, #0]
  MGPIO_voidSetPinValue(GPIO_PORTD,PIN12,HIGH);
 8001b64:	2201      	movs	r2, #1
 8001b66:	210c      	movs	r1, #12
 8001b68:	2003      	movs	r0, #3
 8001b6a:	f7ff f9bf 	bl	8000eec <MGPIO_voidSetPinValue>
 8001b6e:	e012      	b.n	8001b96 <updata_value+0xd2>


 }
 else
 {
	 * capy_u16PtrTimer = (u16)(capy_u32PtrTimer_avage_new) ;
 8001b70:	69fb      	ldr	r3, [r7, #28]
 8001b72:	b29a      	uxth	r2, r3
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	801a      	strh	r2, [r3, #0]
	 * capy_u16PtrT_on  = (u16)(capy_u32PtrT_on_avage_new ) ;
 8001b78:	69bb      	ldr	r3, [r7, #24]
 8001b7a:	b29a      	uxth	r2, r3
 8001b7c:	683b      	ldr	r3, [r7, #0]
 8001b7e:	801a      	strh	r2, [r3, #0]

	   MGPIO_voidSetPinValue(GPIO_PORTD,PIN12,LOW);
 8001b80:	2200      	movs	r2, #0
 8001b82:	210c      	movs	r1, #12
 8001b84:	2003      	movs	r0, #3
 8001b86:	f7ff f9b1 	bl	8000eec <MGPIO_voidSetPinValue>
	   capy_u32PtrTimer_avage_old = capy_u32PtrTimer_avage_new;
 8001b8a:	4a06      	ldr	r2, [pc, #24]	; (8001ba4 <updata_value+0xe0>)
 8001b8c:	69fb      	ldr	r3, [r7, #28]
 8001b8e:	6013      	str	r3, [r2, #0]
       capy_u32PtrT_on_avage_old  = capy_u32PtrT_on_avage_new;
 8001b90:	4a05      	ldr	r2, [pc, #20]	; (8001ba8 <updata_value+0xe4>)
 8001b92:	69bb      	ldr	r3, [r7, #24]
 8001b94:	6013      	str	r3, [r2, #0]

 }

}
 8001b96:	bf00      	nop
 8001b98:	3720      	adds	r7, #32
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bd80      	pop	{r7, pc}
 8001b9e:	bf00      	nop
 8001ba0:	40010000 	.word	0x40010000
 8001ba4:	20000020 	.word	0x20000020
 8001ba8:	20000024 	.word	0x20000024

08001bac <TIM1_CC_IRQHandler>:


void TIM1_CC_IRQHandler(void)
{
 8001bac:	b480      	push	{r7}
 8001bae:	af00      	add	r7, sp, #0


		Timer = TIMER_1 -> CCR1;
 8001bb0:	4b08      	ldr	r3, [pc, #32]	; (8001bd4 <TIM1_CC_IRQHandler+0x28>)
 8001bb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001bb4:	b29a      	uxth	r2, r3
 8001bb6:	4b08      	ldr	r3, [pc, #32]	; (8001bd8 <TIM1_CC_IRQHandler+0x2c>)
 8001bb8:	801a      	strh	r2, [r3, #0]

	     T_on=TIMER_1 -> CCR2;
 8001bba:	4b06      	ldr	r3, [pc, #24]	; (8001bd4 <TIM1_CC_IRQHandler+0x28>)
 8001bbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001bbe:	b29a      	uxth	r2, r3
 8001bc0:	4b06      	ldr	r3, [pc, #24]	; (8001bdc <TIM1_CC_IRQHandler+0x30>)
 8001bc2:	801a      	strh	r2, [r3, #0]

	     TIMER_1 -> SR=0;
 8001bc4:	4b03      	ldr	r3, [pc, #12]	; (8001bd4 <TIM1_CC_IRQHandler+0x28>)
 8001bc6:	2200      	movs	r2, #0
 8001bc8:	611a      	str	r2, [r3, #16]




}
 8001bca:	bf00      	nop
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bd2:	4770      	bx	lr
 8001bd4:	40010000 	.word	0x40010000
 8001bd8:	20000038 	.word	0x20000038
 8001bdc:	2000003a 	.word	0x2000003a

08001be0 <main>:
/* hold value */
void Comper_HOLD_Read_sensor(void);
// read value sensor
void Read_SENSOR (void);
int main(void)
{   u16 Timer=0 ,T_on=0;
 8001be0:	b580      	push	{r7, lr}
 8001be2:	b088      	sub	sp, #32
 8001be4:	af02      	add	r7, sp, #8
 8001be6:	2300      	movs	r3, #0
 8001be8:	80fb      	strh	r3, [r7, #6]
 8001bea:	2300      	movs	r3, #0
 8001bec:	80bb      	strh	r3, [r7, #4]

	u32 OFFSET_Digital_SENSOR=0;
 8001bee:	2300      	movs	r3, #0
 8001bf0:	617b      	str	r3, [r7, #20]
	u32 Current_limit=0;
 8001bf2:	2300      	movs	r3, #0
 8001bf4:	613b      	str	r3, [r7, #16]
	u32 TRUST=1900;
 8001bf6:	f240 736c 	movw	r3, #1900	; 0x76c
 8001bfa:	60fb      	str	r3, [r7, #12]
	//inital the cloock system
    RCC_voidInitSysClock() ;
 8001bfc:	f7ff fdc0 	bl	8001780 <RCC_voidInitSysClock>

    //enable the clock GPIO port A
    RCC_voidEnableClock(AHB1,0);
 8001c00:	2100      	movs	r1, #0
 8001c02:	2000      	movs	r0, #0
 8001c04:	f7ff fdcc 	bl	80017a0 <RCC_voidEnableClock>
    //enable the clock GPIO port B
    RCC_voidEnableClock(AHB1,1);
 8001c08:	2101      	movs	r1, #1
 8001c0a:	2000      	movs	r0, #0
 8001c0c:	f7ff fdc8 	bl	80017a0 <RCC_voidEnableClock>
    //enable the clock GPIO port C
    RCC_voidEnableClock(AHB1,2);
 8001c10:	2102      	movs	r1, #2
 8001c12:	2000      	movs	r0, #0
 8001c14:	f7ff fdc4 	bl	80017a0 <RCC_voidEnableClock>
    //enable the clock GPIO port D
    RCC_voidEnableClock(AHB1,3);
 8001c18:	2103      	movs	r1, #3
 8001c1a:	2000      	movs	r0, #0
 8001c1c:	f7ff fdc0 	bl	80017a0 <RCC_voidEnableClock>
    //enable the clock GPIO port e
    RCC_voidEnableClock(AHB1,4);
 8001c20:	2104      	movs	r1, #4
 8001c22:	2000      	movs	r0, #0
 8001c24:	f7ff fdbc 	bl	80017a0 <RCC_voidEnableClock>


    //enable clock ADC1
    RCC_voidEnableClock(APB2,8);
 8001c28:	2108      	movs	r1, #8
 8001c2a:	2004      	movs	r0, #4
 8001c2c:	f7ff fdb8 	bl	80017a0 <RCC_voidEnableClock>
    //enable clock timer 1
    RCC_voidEnableClock(APB2,0);
 8001c30:	2100      	movs	r1, #0
 8001c32:	2004      	movs	r0, #4
 8001c34:	f7ff fdb4 	bl	80017a0 <RCC_voidEnableClock>
    //enable clock timer 8
    RCC_voidEnableClock(APB2,1);
 8001c38:	2101      	movs	r1, #1
 8001c3a:	2004      	movs	r0, #4
 8001c3c:	f7ff fdb0 	bl	80017a0 <RCC_voidEnableClock>
    //enable clock timer 4
    // RCC_voidEnableClock(APB1,2);


    //pin configration ADC
    MGPIO_voidSetPinDrictionMode(GPIO_PORTA,PIN5,ANALOGE_MODE);
 8001c40:	2203      	movs	r2, #3
 8001c42:	2105      	movs	r1, #5
 8001c44:	2000      	movs	r0, #0
 8001c46:	f7fe fedd 	bl	8000a04 <MGPIO_voidSetPinDrictionMode>
    MGPIO_voidActivePullUpPullDown(GPIO_PORTA,PIN5,FOLLATING);
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	2105      	movs	r1, #5
 8001c4e:	2000      	movs	r0, #0
 8001c50:	f7ff f812 	bl	8000c78 <MGPIO_voidActivePullUpPullDown>


   // config pin timer
   MGPIO_voidSetPinDrictionMode(GPIO_PORTE,PIN9,AF_MODE);
 8001c54:	2202      	movs	r2, #2
 8001c56:	2109      	movs	r1, #9
 8001c58:	2004      	movs	r0, #4
 8001c5a:	f7fe fed3 	bl	8000a04 <MGPIO_voidSetPinDrictionMode>
   MGPIO_voidSetPinDrictionOutAf(GPIO_PORTC,PIN6,AF_MODE,OUTPUT_PUSH_PULL,OUTPUT_HIGH_SPEED);
 8001c5e:	2302      	movs	r3, #2
 8001c60:	9300      	str	r3, [sp, #0]
 8001c62:	2300      	movs	r3, #0
 8001c64:	2202      	movs	r2, #2
 8001c66:	2106      	movs	r1, #6
 8001c68:	2002      	movs	r0, #2
 8001c6a:	f7fe fb3f 	bl	80002ec <MGPIO_voidSetPinDrictionOutAf>
   //MGPIO_voidSetPinDrictionOutAf(GPIO_PORTE,PIN5,AF_MODE,OUTPUT_PUSH_PULL,OUTPUT_HIGH_SPEED);
   //MGPIO_voidSetPinDrictionOutAf(GPIO_PORTD,PIN12,AF_MODE,OUTPUT_PUSH_PULL,OUTPUT_HIGH_SPEED);
   //MGPIO_voidSetPinDrictionOutAf(GPIO_PORTD,PIN12,OUTPYT_MODE,OUTPUT_PUSH_PULL,OUTPUT_HIGH_SPEED);
  // MGPIO_voidActivePullUpPullDown(GPIO_PORTD,PIN12,FOLLATING);
   // no pull up and pull down
   MGPIO_voidActivePullUpPullDown(GPIO_PORTE,PIN9,FOLLATING);
 8001c6e:	2200      	movs	r2, #0
 8001c70:	2109      	movs	r1, #9
 8001c72:	2004      	movs	r0, #4
 8001c74:	f7ff f800 	bl	8000c78 <MGPIO_voidActivePullUpPullDown>
   MGPIO_voidActivePullUpPullDown(GPIO_PORTC,PIN6,FOLLATING);
 8001c78:	2200      	movs	r2, #0
 8001c7a:	2106      	movs	r1, #6
 8001c7c:	2002      	movs	r0, #2
 8001c7e:	f7fe fffb 	bl	8000c78 <MGPIO_voidActivePullUpPullDown>
  // MGPIO_voidActivePullUpPullDown(GPIO_PORTE,PIN5,FOLLATING);
  // MGPIO_voidActivePullUpPullDown(GPIO_PORTD,PIN12,FOLLATING);
   // select Af timer pin
   MGPIO_voidSetAfPeripier(GPIO_PORTE,PIN9,AF1);
 8001c82:	2201      	movs	r2, #1
 8001c84:	2109      	movs	r1, #9
 8001c86:	2004      	movs	r0, #4
 8001c88:	f7ff faba 	bl	8001200 <MGPIO_voidSetAfPeripier>
   MGPIO_voidSetAfPeripier(GPIO_PORTC,PIN6,AF3);
 8001c8c:	2203      	movs	r2, #3
 8001c8e:	2106      	movs	r1, #6
 8001c90:	2002      	movs	r0, #2
 8001c92:	f7ff fab5 	bl	8001200 <MGPIO_voidSetAfPeripier>
   //MGPIO_voidSetAfPeripier(GPIO_PORTE,PIN5,AF3);
  // MGPIO_voidSetAfPeripier(GPIO_PORTD,PIN12,AF2);

   //Initial timer 1  the PWM measured input
   MTimer_voidinitMeagerPMWT1();
 8001c96:	f7ff fe8d 	bl	80019b4 <MTimer_voidinitMeagerPMWT1>
   //Initial timer 8  the PWM output
   MTimer_voidinitPMWT8();
 8001c9a:	f7ff fe11 	bl	80018c0 <MTimer_voidinitPMWT8>
   //Initial systick preiphear
   MSTICK_voidInit();
 8001c9e:	f7ff fdd5 	bl	800184c <MSTICK_voidInit>
   // Initial the ADC preiphear
   ADC1_voidInitCountious();
 8001ca2:	f7fe faa3 	bl	80001ec <ADC1_voidInitCountious>

   //config the ADC at  channel 5 PIn A5
   ADC1_void();
 8001ca6:	f7fe fadd 	bl	8000264 <ADC1_void>

  OFFSET_Digital_SENSOR=ADC1_u16Read ();
 8001caa:	f7fe faff 	bl	80002ac <ADC1_u16Read>
 8001cae:	4603      	mov	r3, r0
 8001cb0:	617b      	str	r3, [r7, #20]

  OFFSET_Digital_SENSOR = (u32)((OFFSET_Digital_SENSOR * 2940UL )/ 4096);
 8001cb2:	697b      	ldr	r3, [r7, #20]
 8001cb4:	f640 327c 	movw	r2, #2940	; 0xb7c
 8001cb8:	fb02 f303 	mul.w	r3, r2, r3
 8001cbc:	0b1b      	lsrs	r3, r3, #12
 8001cbe:	617b      	str	r3, [r7, #20]
   //read first shot ADC sensor Digital value
  u32 X=OFFSET_Digital_SENSOR;
 8001cc0:	697b      	ldr	r3, [r7, #20]
 8001cc2:	60bb      	str	r3, [r7, #8]
   sensore_Digital_ValueAvrage=X;
 8001cc4:	4a19      	ldr	r2, [pc, #100]	; (8001d2c <main+0x14c>)
 8001cc6:	68bb      	ldr	r3, [r7, #8]
 8001cc8:	6013      	str	r3, [r2, #0]
  //the function read Value of ADC after 2 ms
   //MSTICK_voidSetIntervalPeriodic(2000,Read_SENSOR);

   //while loop
while(1)
{   Read_SENSOR();
 8001cca:	f000 f833 	bl	8001d34 <Read_SENSOR>
    //hold value change of sensor
    Comper_HOLD_Read_sensor();
 8001cce:	f000 f859 	bl	8001d84 <Comper_HOLD_Read_sensor>
   Current_limit = Map_Vlotage_Current(Updata_Digital_ValueAvrage,OFFSET_Digital_SENSOR);
 8001cd2:	4b17      	ldr	r3, [pc, #92]	; (8001d30 <main+0x150>)
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	6979      	ldr	r1, [r7, #20]
 8001cd8:	4618      	mov	r0, r3
 8001cda:	f000 f879 	bl	8001dd0 <Map_Vlotage_Current>
 8001cde:	6138      	str	r0, [r7, #16]
   //Current_limit-=3;
    //read the PWM from received
     updata_value (&Timer, &T_on);
 8001ce0:	1d3a      	adds	r2, r7, #4
 8001ce2:	1dbb      	adds	r3, r7, #6
 8001ce4:	4611      	mov	r1, r2
 8001ce6:	4618      	mov	r0, r3
 8001ce8:	f7ff feec 	bl	8001ac4 <updata_value>

//TRUST= Map_Current_Truset(Current_limit);



if ((T_on < TRUST) & (Current_limit < 3))
 8001cec:	88bb      	ldrh	r3, [r7, #4]
 8001cee:	461a      	mov	r2, r3
 8001cf0:	68fb      	ldr	r3, [r7, #12]
 8001cf2:	429a      	cmp	r2, r3
 8001cf4:	bf34      	ite	cc
 8001cf6:	2301      	movcc	r3, #1
 8001cf8:	2300      	movcs	r3, #0
 8001cfa:	b2da      	uxtb	r2, r3
 8001cfc:	693b      	ldr	r3, [r7, #16]
 8001cfe:	2b02      	cmp	r3, #2
 8001d00:	bf94      	ite	ls
 8001d02:	2301      	movls	r3, #1
 8001d04:	2300      	movhi	r3, #0
 8001d06:	b2db      	uxtb	r3, r3
 8001d08:	4013      	ands	r3, r2
 8001d0a:	b2db      	uxtb	r3, r3
 8001d0c:	2b00      	cmp	r3, #0
 8001d0e:	d007      	beq.n	8001d20 <main+0x140>
{
//	TRUST=T_on;

	MTimer_voidPMWGENERATIONT8(Timer,T_on);
 8001d10:	88fb      	ldrh	r3, [r7, #6]
 8001d12:	461a      	mov	r2, r3
 8001d14:	88bb      	ldrh	r3, [r7, #4]
 8001d16:	4619      	mov	r1, r3
 8001d18:	4610      	mov	r0, r2
 8001d1a:	f7ff fe31 	bl	8001980 <MTimer_voidPMWGENERATIONT8>
 8001d1e:	e7d4      	b.n	8001cca <main+0xea>
//	else if (T_on>TRUST)
//	{
//	    MTimer_voidPMWGENERATIONT8(Timer,TRUST);
//	}
}else{
	MTimer_voidPMWGENERATIONT8(Timer,TRUST);
 8001d20:	88fb      	ldrh	r3, [r7, #6]
 8001d22:	68f9      	ldr	r1, [r7, #12]
 8001d24:	4618      	mov	r0, r3
 8001d26:	f7ff fe2b 	bl	8001980 <MTimer_voidPMWGENERATIONT8>
{   Read_SENSOR();
 8001d2a:	e7ce      	b.n	8001cca <main+0xea>
 8001d2c:	20000028 	.word	0x20000028
 8001d30:	2000002c 	.word	0x2000002c

08001d34 <Read_SENSOR>:





void Read_SENSOR (void){
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b084      	sub	sp, #16
 8001d38:	af00      	add	r7, sp, #0

    u32 Local_sensore_Digital_Value=0;
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	607b      	str	r3, [r7, #4]
	u32 Local_sansor_val=0;
 8001d3e:	2300      	movs	r3, #0
 8001d40:	60fb      	str	r3, [r7, #12]
	for(int i=0; i < 1;i++)
 8001d42:	2300      	movs	r3, #0
 8001d44:	60bb      	str	r3, [r7, #8]
 8001d46:	e011      	b.n	8001d6c <Read_SENSOR+0x38>
	{
		Local_sensore_Digital_Value= (u32)ADC1_u16Read ();
 8001d48:	f7fe fab0 	bl	80002ac <ADC1_u16Read>
 8001d4c:	4603      	mov	r3, r0
 8001d4e:	607b      	str	r3, [r7, #4]
	//as the Analoge value is limit
		Local_sensore_Digital_Value=(u32)((Local_sensore_Digital_Value * 2940UL )/ 4096);
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	f640 327c 	movw	r2, #2940	; 0xb7c
 8001d56:	fb02 f303 	mul.w	r3, r2, r3
 8001d5a:	0b1b      	lsrs	r3, r3, #12
 8001d5c:	607b      	str	r3, [r7, #4]
		Local_sansor_val+=Local_sensore_Digital_Value;
 8001d5e:	68fa      	ldr	r2, [r7, #12]
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	4413      	add	r3, r2
 8001d64:	60fb      	str	r3, [r7, #12]
	for(int i=0; i < 1;i++)
 8001d66:	68bb      	ldr	r3, [r7, #8]
 8001d68:	3301      	adds	r3, #1
 8001d6a:	60bb      	str	r3, [r7, #8]
 8001d6c:	68bb      	ldr	r3, [r7, #8]
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	ddea      	ble.n	8001d48 <Read_SENSOR+0x14>
	}
	Local_sansor_val/=1;

	sensore_Digital_ValueAvrage =Local_sansor_val;
 8001d72:	4a03      	ldr	r2, [pc, #12]	; (8001d80 <Read_SENSOR+0x4c>)
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	6013      	str	r3, [r2, #0]


}
 8001d78:	bf00      	nop
 8001d7a:	3710      	adds	r7, #16
 8001d7c:	46bd      	mov	sp, r7
 8001d7e:	bd80      	pop	{r7, pc}
 8001d80:	20000028 	.word	0x20000028

08001d84 <Comper_HOLD_Read_sensor>:


void Comper_HOLD_Read_sensor(void)
{
 8001d84:	b480      	push	{r7}
 8001d86:	b083      	sub	sp, #12
 8001d88:	af00      	add	r7, sp, #0
	static u32 Local_Digital_ValueAvrage_Hold =0;
	s32 flag=  sensore_Digital_ValueAvrage - Local_Digital_ValueAvrage_Hold ;
 8001d8a:	4b0e      	ldr	r3, [pc, #56]	; (8001dc4 <Comper_HOLD_Read_sensor+0x40>)
 8001d8c:	681a      	ldr	r2, [r3, #0]
 8001d8e:	4b0e      	ldr	r3, [pc, #56]	; (8001dc8 <Comper_HOLD_Read_sensor+0x44>)
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	1ad3      	subs	r3, r2, r3
 8001d94:	607b      	str	r3, [r7, #4]
//}




	if (flag <2)
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	2b01      	cmp	r3, #1
 8001d9a:	dc04      	bgt.n	8001da6 <Comper_HOLD_Read_sensor+0x22>
	{
		Updata_Digital_ValueAvrage=Local_Digital_ValueAvrage_Hold;
 8001d9c:	4b0a      	ldr	r3, [pc, #40]	; (8001dc8 <Comper_HOLD_Read_sensor+0x44>)
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	4a0a      	ldr	r2, [pc, #40]	; (8001dcc <Comper_HOLD_Read_sensor+0x48>)
 8001da2:	6013      	str	r3, [r2, #0]
	}




}
 8001da4:	e007      	b.n	8001db6 <Comper_HOLD_Read_sensor+0x32>
		Updata_Digital_ValueAvrage=sensore_Digital_ValueAvrage;
 8001da6:	4b07      	ldr	r3, [pc, #28]	; (8001dc4 <Comper_HOLD_Read_sensor+0x40>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	4a08      	ldr	r2, [pc, #32]	; (8001dcc <Comper_HOLD_Read_sensor+0x48>)
 8001dac:	6013      	str	r3, [r2, #0]
		Local_Digital_ValueAvrage_Hold=sensore_Digital_ValueAvrage;
 8001dae:	4b05      	ldr	r3, [pc, #20]	; (8001dc4 <Comper_HOLD_Read_sensor+0x40>)
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	4a05      	ldr	r2, [pc, #20]	; (8001dc8 <Comper_HOLD_Read_sensor+0x44>)
 8001db4:	6013      	str	r3, [r2, #0]
}
 8001db6:	bf00      	nop
 8001db8:	370c      	adds	r7, #12
 8001dba:	46bd      	mov	sp, r7
 8001dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc0:	4770      	bx	lr
 8001dc2:	bf00      	nop
 8001dc4:	20000028 	.word	0x20000028
 8001dc8:	20000030 	.word	0x20000030
 8001dcc:	2000002c 	.word	0x2000002c

08001dd0 <Map_Vlotage_Current>:

u32 Map_Vlotage_Current(u32 capy_u32Map_DigitalValueVoltage,u32 capy_OFFSET_Digital_SENSOR )
{
 8001dd0:	b480      	push	{r7}
 8001dd2:	b085      	sub	sp, #20
 8001dd4:	af00      	add	r7, sp, #0
 8001dd6:	6078      	str	r0, [r7, #4]
 8001dd8:	6039      	str	r1, [r7, #0]
	s32 x= capy_u32Map_DigitalValueVoltage-capy_OFFSET_Digital_SENSOR;
 8001dda:	687a      	ldr	r2, [r7, #4]
 8001ddc:	683b      	ldr	r3, [r7, #0]
 8001dde:	1ad3      	subs	r3, r2, r3
 8001de0:	60fb      	str	r3, [r7, #12]
	if (x>0)
 8001de2:	68fb      	ldr	r3, [r7, #12]
 8001de4:	2b00      	cmp	r3, #0
 8001de6:	dd0b      	ble.n	8001e00 <Map_Vlotage_Current+0x30>
	{
	   return ( (x)*(100)/(2940UL - capy_OFFSET_Digital_SENSOR));
 8001de8:	68fb      	ldr	r3, [r7, #12]
 8001dea:	2264      	movs	r2, #100	; 0x64
 8001dec:	fb02 f303 	mul.w	r3, r2, r3
 8001df0:	461a      	mov	r2, r3
 8001df2:	683b      	ldr	r3, [r7, #0]
 8001df4:	f5c3 6337 	rsb	r3, r3, #2928	; 0xb70
 8001df8:	330c      	adds	r3, #12
 8001dfa:	fbb2 f3f3 	udiv	r3, r2, r3
 8001dfe:	e7ff      	b.n	8001e00 <Map_Vlotage_Current+0x30>
	}

	//u32 DigitalValueVoltage = (u32)((capy_u32Map_DigitalValueVoltage * 2940UL )/ 4096);

}
 8001e00:	4618      	mov	r0, r3
 8001e02:	3714      	adds	r7, #20
 8001e04:	46bd      	mov	sp, r7
 8001e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0a:	4770      	bx	lr

08001e0c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001e0c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001e44 <LoopFillZerobss+0x14>
  
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001e10:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001e12:	e003      	b.n	8001e1c <LoopCopyDataInit>

08001e14 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001e14:	4b0c      	ldr	r3, [pc, #48]	; (8001e48 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001e16:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001e18:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001e1a:	3104      	adds	r1, #4

08001e1c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001e1c:	480b      	ldr	r0, [pc, #44]	; (8001e4c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8001e1e:	4b0c      	ldr	r3, [pc, #48]	; (8001e50 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001e20:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001e22:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001e24:	d3f6      	bcc.n	8001e14 <CopyDataInit>
  ldr  r2, =_sbss
 8001e26:	4a0b      	ldr	r2, [pc, #44]	; (8001e54 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001e28:	e002      	b.n	8001e30 <LoopFillZerobss>

08001e2a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001e2a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001e2c:	f842 3b04 	str.w	r3, [r2], #4

08001e30 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001e30:	4b09      	ldr	r3, [pc, #36]	; (8001e58 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001e32:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001e34:	d3f9      	bcc.n	8001e2a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001e36:	f000 f83b 	bl	8001eb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001e3a:	f000 f8eb 	bl	8002014 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001e3e:	f7ff fecf 	bl	8001be0 <main>
  bx  lr    
 8001e42:	4770      	bx	lr
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001e44:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001e48:	0800207c 	.word	0x0800207c
  ldr  r0, =_sdata
 8001e4c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001e50:	20000000 	.word	0x20000000
  ldr  r2, =_sbss
 8001e54:	20000000 	.word	0x20000000
  ldr  r3, = _ebss
 8001e58:	2000003c 	.word	0x2000003c

08001e5c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001e5c:	e7fe      	b.n	8001e5c <ADC_IRQHandler>

08001e5e <NMI_Handler>:
  * @brief   This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8001e5e:	b480      	push	{r7}
 8001e60:	af00      	add	r7, sp, #0
}
 8001e62:	bf00      	nop
 8001e64:	46bd      	mov	sp, r7
 8001e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6a:	4770      	bx	lr

08001e6c <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8001e6c:	b480      	push	{r7}
 8001e6e:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8001e70:	e7fe      	b.n	8001e70 <HardFault_Handler+0x4>

08001e72 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001e72:	b480      	push	{r7}
 8001e74:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8001e76:	e7fe      	b.n	8001e76 <MemManage_Handler+0x4>

08001e78 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8001e78:	b480      	push	{r7}
 8001e7a:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 8001e7c:	e7fe      	b.n	8001e7c <BusFault_Handler+0x4>

08001e7e <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001e7e:	b480      	push	{r7}
 8001e80:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8001e82:	e7fe      	b.n	8001e82 <UsageFault_Handler+0x4>

08001e84 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001e84:	b480      	push	{r7}
 8001e86:	af00      	add	r7, sp, #0
}
 8001e88:	bf00      	nop
 8001e8a:	46bd      	mov	sp, r7
 8001e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e90:	4770      	bx	lr

08001e92 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8001e92:	b480      	push	{r7}
 8001e94:	af00      	add	r7, sp, #0
}
 8001e96:	bf00      	nop
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9e:	4770      	bx	lr

08001ea0 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8001ea0:	b480      	push	{r7}
 8001ea2:	af00      	add	r7, sp, #0
}
 8001ea4:	bf00      	nop
 8001ea6:	46bd      	mov	sp, r7
 8001ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eac:	4770      	bx	lr
	...

08001eb0 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001eb4:	4a16      	ldr	r2, [pc, #88]	; (8001f10 <SystemInit+0x60>)
 8001eb6:	4b16      	ldr	r3, [pc, #88]	; (8001f10 <SystemInit+0x60>)
 8001eb8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001ebc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001ec0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001ec4:	4a13      	ldr	r2, [pc, #76]	; (8001f14 <SystemInit+0x64>)
 8001ec6:	4b13      	ldr	r3, [pc, #76]	; (8001f14 <SystemInit+0x64>)
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f043 0301 	orr.w	r3, r3, #1
 8001ece:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001ed0:	4b10      	ldr	r3, [pc, #64]	; (8001f14 <SystemInit+0x64>)
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001ed6:	4a0f      	ldr	r2, [pc, #60]	; (8001f14 <SystemInit+0x64>)
 8001ed8:	4b0e      	ldr	r3, [pc, #56]	; (8001f14 <SystemInit+0x64>)
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001ee0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001ee4:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8001ee6:	4b0b      	ldr	r3, [pc, #44]	; (8001f14 <SystemInit+0x64>)
 8001ee8:	4a0b      	ldr	r2, [pc, #44]	; (8001f18 <SystemInit+0x68>)
 8001eea:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001eec:	4a09      	ldr	r2, [pc, #36]	; (8001f14 <SystemInit+0x64>)
 8001eee:	4b09      	ldr	r3, [pc, #36]	; (8001f14 <SystemInit+0x64>)
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ef6:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001ef8:	4b06      	ldr	r3, [pc, #24]	; (8001f14 <SystemInit+0x64>)
 8001efa:	2200      	movs	r2, #0
 8001efc:	60da      	str	r2, [r3, #12]
  SystemInit_ExtMemCtl(); 
#endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
         
  /* Configure the System clock source, PLL Multiplier and Divider factors, 
     AHB/APBx prescalers and Flash settings ----------------------------------*/
  SetSysClock();
 8001efe:	f000 f80d 	bl	8001f1c <SetSysClock>

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001f02:	4b03      	ldr	r3, [pc, #12]	; (8001f10 <SystemInit+0x60>)
 8001f04:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001f08:	609a      	str	r2, [r3, #8]
#endif
}
 8001f0a:	bf00      	nop
 8001f0c:	bd80      	pop	{r7, pc}
 8001f0e:	bf00      	nop
 8001f10:	e000ed00 	.word	0xe000ed00
 8001f14:	40023800 	.word	0x40023800
 8001f18:	24003010 	.word	0x24003010

08001f1c <SetSysClock>:
  *         is reset to the default reset state (done in SystemInit() function).   
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 8001f1c:	b480      	push	{r7}
 8001f1e:	b083      	sub	sp, #12
 8001f20:	af00      	add	r7, sp, #0
/******************************************************************************/
/*            PLL (clocked by HSE) used as System clock source                */
/******************************************************************************/
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8001f22:	2300      	movs	r3, #0
 8001f24:	607b      	str	r3, [r7, #4]
 8001f26:	2300      	movs	r3, #0
 8001f28:	603b      	str	r3, [r7, #0]
  
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8001f2a:	4a36      	ldr	r2, [pc, #216]	; (8002004 <SetSysClock+0xe8>)
 8001f2c:	4b35      	ldr	r3, [pc, #212]	; (8002004 <SetSysClock+0xe8>)
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f34:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8001f36:	4b33      	ldr	r3, [pc, #204]	; (8002004 <SetSysClock+0xe8>)
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f3e:	603b      	str	r3, [r7, #0]
    StartUpCounter++;
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	3301      	adds	r3, #1
 8001f44:	607b      	str	r3, [r7, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d103      	bne.n	8001f54 <SetSysClock+0x38>
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8001f52:	d1f0      	bne.n	8001f36 <SetSysClock+0x1a>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8001f54:	4b2b      	ldr	r3, [pc, #172]	; (8002004 <SetSysClock+0xe8>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d002      	beq.n	8001f66 <SetSysClock+0x4a>
  {
    HSEStatus = (uint32_t)0x01;
 8001f60:	2301      	movs	r3, #1
 8001f62:	603b      	str	r3, [r7, #0]
 8001f64:	e001      	b.n	8001f6a <SetSysClock+0x4e>
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8001f66:	2300      	movs	r3, #0
 8001f68:	603b      	str	r3, [r7, #0]
  }

  if (HSEStatus == (uint32_t)0x01)
 8001f6a:	683b      	ldr	r3, [r7, #0]
 8001f6c:	2b01      	cmp	r3, #1
 8001f6e:	d142      	bne.n	8001ff6 <SetSysClock+0xda>
  {
    /* Select regulator voltage output Scale 1 mode */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8001f70:	4a24      	ldr	r2, [pc, #144]	; (8002004 <SetSysClock+0xe8>)
 8001f72:	4b24      	ldr	r3, [pc, #144]	; (8002004 <SetSysClock+0xe8>)
 8001f74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f76:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f7a:	6413      	str	r3, [r2, #64]	; 0x40
    PWR->CR |= PWR_CR_VOS;
 8001f7c:	4a22      	ldr	r2, [pc, #136]	; (8002008 <SetSysClock+0xec>)
 8001f7e:	4b22      	ldr	r3, [pc, #136]	; (8002008 <SetSysClock+0xec>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001f86:	6013      	str	r3, [r2, #0]

    /* HCLK = SYSCLK / 1*/
    RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 8001f88:	4a1e      	ldr	r2, [pc, #120]	; (8002004 <SetSysClock+0xe8>)
 8001f8a:	4b1e      	ldr	r3, [pc, #120]	; (8002004 <SetSysClock+0xe8>)
 8001f8c:	689b      	ldr	r3, [r3, #8]
 8001f8e:	6093      	str	r3, [r2, #8]

#if defined (STM32F40_41xxx) || defined (STM32F42_43xxx)      
    /* PCLK2 = HCLK / 2*/
    RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 8001f90:	4a1c      	ldr	r2, [pc, #112]	; (8002004 <SetSysClock+0xe8>)
 8001f92:	4b1c      	ldr	r3, [pc, #112]	; (8002004 <SetSysClock+0xe8>)
 8001f94:	689b      	ldr	r3, [r3, #8]
 8001f96:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001f9a:	6093      	str	r3, [r2, #8]
    
    /* PCLK1 = HCLK / 4*/
    RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 8001f9c:	4a19      	ldr	r2, [pc, #100]	; (8002004 <SetSysClock+0xe8>)
 8001f9e:	4b19      	ldr	r3, [pc, #100]	; (8002004 <SetSysClock+0xe8>)
 8001fa0:	689b      	ldr	r3, [r3, #8]
 8001fa2:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8001fa6:	6093      	str	r3, [r2, #8]
    /* PCLK1 = HCLK / 4*/
    RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;
#endif /* STM32F401xx */
   
    /* Configure the main PLL */
    RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 8001fa8:	4b16      	ldr	r3, [pc, #88]	; (8002004 <SetSysClock+0xe8>)
 8001faa:	4a18      	ldr	r2, [pc, #96]	; (800200c <SetSysClock+0xf0>)
 8001fac:	605a      	str	r2, [r3, #4]
                   (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);

    /* Enable the main PLL */
    RCC->CR |= RCC_CR_PLLON;
 8001fae:	4a15      	ldr	r2, [pc, #84]	; (8002004 <SetSysClock+0xe8>)
 8001fb0:	4b14      	ldr	r3, [pc, #80]	; (8002004 <SetSysClock+0xe8>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001fb8:	6013      	str	r3, [r2, #0]

    /* Wait till the main PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8001fba:	bf00      	nop
 8001fbc:	4b11      	ldr	r3, [pc, #68]	; (8002004 <SetSysClock+0xe8>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d0f9      	beq.n	8001fbc <SetSysClock+0xa0>
    {
    }
   
#if defined (STM32F40_41xxx) || defined (STM32F42_43xxx)      
    /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
    FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 8001fc8:	4b11      	ldr	r3, [pc, #68]	; (8002010 <SetSysClock+0xf4>)
 8001fca:	f240 7205 	movw	r2, #1797	; 0x705
 8001fce:	601a      	str	r2, [r3, #0]
    /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
    FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_2WS;
#endif /* STM32F401xx */

    /* Select the main PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8001fd0:	4a0c      	ldr	r2, [pc, #48]	; (8002004 <SetSysClock+0xe8>)
 8001fd2:	4b0c      	ldr	r3, [pc, #48]	; (8002004 <SetSysClock+0xe8>)
 8001fd4:	689b      	ldr	r3, [r3, #8]
 8001fd6:	f023 0303 	bic.w	r3, r3, #3
 8001fda:	6093      	str	r3, [r2, #8]
    RCC->CFGR |= RCC_CFGR_SW_PLL;
 8001fdc:	4a09      	ldr	r2, [pc, #36]	; (8002004 <SetSysClock+0xe8>)
 8001fde:	4b09      	ldr	r3, [pc, #36]	; (8002004 <SetSysClock+0xe8>)
 8001fe0:	689b      	ldr	r3, [r3, #8]
 8001fe2:	f043 0302 	orr.w	r3, r3, #2
 8001fe6:	6093      	str	r3, [r2, #8]

    /* Wait till the main PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 8001fe8:	bf00      	nop
 8001fea:	4b06      	ldr	r3, [pc, #24]	; (8002004 <SetSysClock+0xe8>)
 8001fec:	689b      	ldr	r3, [r3, #8]
 8001fee:	f003 030c 	and.w	r3, r3, #12
 8001ff2:	2b08      	cmp	r3, #8
 8001ff4:	d1f9      	bne.n	8001fea <SetSysClock+0xce>
  else
  { /* If HSE fails to start-up, the application will have wrong clock
         configuration. User can add here some code to deal with this error */
  }

}
 8001ff6:	bf00      	nop
 8001ff8:	370c      	adds	r7, #12
 8001ffa:	46bd      	mov	sp, r7
 8001ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002000:	4770      	bx	lr
 8002002:	bf00      	nop
 8002004:	40023800 	.word	0x40023800
 8002008:	40007000 	.word	0x40007000
 800200c:	07405a19 	.word	0x07405a19
 8002010:	40023c00 	.word	0x40023c00

08002014 <__libc_init_array>:
 8002014:	b570      	push	{r4, r5, r6, lr}
 8002016:	4e0d      	ldr	r6, [pc, #52]	; (800204c <__libc_init_array+0x38>)
 8002018:	4c0d      	ldr	r4, [pc, #52]	; (8002050 <__libc_init_array+0x3c>)
 800201a:	1ba4      	subs	r4, r4, r6
 800201c:	10a4      	asrs	r4, r4, #2
 800201e:	2500      	movs	r5, #0
 8002020:	42a5      	cmp	r5, r4
 8002022:	d109      	bne.n	8002038 <__libc_init_array+0x24>
 8002024:	4e0b      	ldr	r6, [pc, #44]	; (8002054 <__libc_init_array+0x40>)
 8002026:	4c0c      	ldr	r4, [pc, #48]	; (8002058 <__libc_init_array+0x44>)
 8002028:	f000 f818 	bl	800205c <_init>
 800202c:	1ba4      	subs	r4, r4, r6
 800202e:	10a4      	asrs	r4, r4, #2
 8002030:	2500      	movs	r5, #0
 8002032:	42a5      	cmp	r5, r4
 8002034:	d105      	bne.n	8002042 <__libc_init_array+0x2e>
 8002036:	bd70      	pop	{r4, r5, r6, pc}
 8002038:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800203c:	4798      	blx	r3
 800203e:	3501      	adds	r5, #1
 8002040:	e7ee      	b.n	8002020 <__libc_init_array+0xc>
 8002042:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002046:	4798      	blx	r3
 8002048:	3501      	adds	r5, #1
 800204a:	e7f2      	b.n	8002032 <__libc_init_array+0x1e>
 800204c:	08002074 	.word	0x08002074
 8002050:	08002074 	.word	0x08002074
 8002054:	08002074 	.word	0x08002074
 8002058:	08002078 	.word	0x08002078

0800205c <_init>:
 800205c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800205e:	bf00      	nop
 8002060:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002062:	bc08      	pop	{r3}
 8002064:	469e      	mov	lr, r3
 8002066:	4770      	bx	lr

08002068 <_fini>:
 8002068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800206a:	bf00      	nop
 800206c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800206e:	bc08      	pop	{r3}
 8002070:	469e      	mov	lr, r3
 8002072:	4770      	bx	lr
